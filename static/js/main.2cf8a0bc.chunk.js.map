{"version":3,"sources":["api/init.js","state/DatabaseContext.js","state/AuthenticationContext.js","api/userActions.js","pages/routes.js","pages/Header.jsx","components/Card.jsx","components/Button.jsx","components/ListEntry.jsx","components/Input.jsx","components/InputWrapper.jsx","components/Dropdown.jsx","components/DatePicker.jsx","state/constants.js","api/taskActions.js","state/TaskContext.js","state/CategoryContext.js","api/categoryActions.js","pages/task-creation/AdvancedTaskFields.jsx","pages/task-list/EditTask.jsx","pages/task-list/TaskEntry.jsx","pages/task-list/sortOrder.js","pages/task-list/OrderDropdown.jsx","pages/task-list/TaskContainer.jsx","pages/task-creation/TaskCreator.jsx","pages/task-list/TaskList.jsx","pages/categories/CategoryRule.jsx","pages/categories/CategoryEditor.jsx","components/Overlay.jsx","pages/categories/CategoryListEntry.jsx","pages/categories/CategoryList.jsx","pages/categories/CategoryManager.jsx","pages/auth/Login.jsx","App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","DatabaseContext","React","createContext","successIndicator","errorList","indicateSuccess","addError","message","clearErrorList","DatabaseContextPorvider","_ref","children","_useState","useState","_useState2","_slicedToArray","setSuccessIndicator","_useState3","_useState4","setErrorList","_useState5","_useState6","ready","setReady","useEffect","database","app","initializeApp","getDatabase","initializeFirebase","console","log","error","value","setTimeout","concat","_toConsumableArray","_jsx","Provider","AuthenticationContext","uid","displayName","email","isLoggedIn","Boolean","AuthenticationContextPorvider","setUid","setDisplayName","setEmail","useContext","_useUserActions","_useContext","storeUser","mail","userRef","ref","get","then","snapshot","userObject","exists","val","newUserObject","_objectSpread","set","catch","useUserActions","auth","getAuth","onAuthStateChanged","user","Routes","StyledHeader","styled","header","_templateObject","_taggedTemplateLiteral","PageTitle","div","_templateObject2","ErrorList","_templateObject3","Header","page","_useContext2","handleLogout","useCallback","signOut","e","_jsxs","_Fragment","href","DoneIcon","Link","to","onClick","length","map","StyledCard","Card","props","style","className","Button","button","primary","StyledEntry","overdue","_ref2","editMode","_ref3","done","_ref4","remove","_ref5","ListEntry","_ref6","StyledInput","input","validationError","Input","onChange","FormFieldContainer","FormFieldDescription","InputWrapper","description","StyledSelect","select","Dropdown","entries","selectedKey","disabled","entry","key","name","DatePicker","ReactDatePicker","Priority","Priorities","Frequency","Frequencies","RecurrenceMode","RecurrenceModes","DEFAULT_CATEGORY","useTaskActions","alreadyRetrieved","setAlreadyRetrieved","updateTask","_asyncToGenerator","_regeneratorRuntime","mark","_callee","task","taskToPersist","objectReference","wrap","_context","prev","next","abrupt","due","getTime","closedOn","Object","keys","forEach","undefined","stop","_x","_x2","apply","arguments","removeTask","_callee2","taskKey","_context2","_x3","_x4","listenToTaskList","successAction","taskListRef","tasklist_1","values","Date","warn","TaskContext","tasks","addTask","toggleResolved","modifyTask","unassignAllTasksFromCategory","TaskContextProvider","setTasks","_useTaskActions","deleteTask","newTask","newTaskWithKey","uuidv4","updatedTask","filter","taskToUpdate","find","recurrenceMode","newDueDate","frequency","recurrenceFrequency","setDate","getDate","setMonth","getMonth","setFullYear","getFullYear","category","CategoryContext","categories","saveCategory","removeCategory","CategoryContextProvicer","setCategories","_useCategoryActions","fetchCategories","categoriesRef","updateCategory","_category$due","catetoryToPersist","deleteCategory","categoryKey","useCategoryActions","newCategory","newCategoryWithKey","filteredCategories","Row","RecurringSection","Checkbox","AdvancedTaskFields","setCategory","setDue","priority","setPriority","recurring","setRecurring","sortedCategories","sort","cat1","cat2","toUpperCase","categoriesWithUnknown","currentDue","isRecurring","setIsRecurring","priorityEntries","event","target","options","selectedIndex","selected","date","dateFormat","invalid","type","mode","checked","StyledButton","EditTask","toggleEditMode","title","setTitle","_useState7","_useState8","_useState9","_useState10","StyledDescription","Importance","_templateObject4","formatDate","day","month","year","TaskEntry","setRemove","currentDate","setEditMode","formattedDate","handleToggle","EditIcon","fontSize","SortOrder","ALPHABETICAL","DUE_UNKNOWN_FIRST","DUE_UNKNOWN_LAST","PRIORITY","unknownLast","a","b","SortOrderFunctions","_SortOrderFunctions","_defineProperty","StyledOrderDropdown","StyledSortOrderContent","showDropdown","DropdownEntry","OrderDropdown","setSortOrder","sortOrder","setShowDropdown","handleSetSortOrder","SortIcon","order","ContainerTitle","h2","ClosedTaskToggle","CategoryCard","TaskContainer","taskCategory","showClosed","setShowClosed","sortOrderFunction","openTasks","t","closedTasks","compareClosedOn","toggleClosedText","TaskCreatorCard","advanced","AdvancedRow","TaskCreator","setAdvanced","_useState11","_useState12","_useState13","_useState14","titleValid","setTitleValid","_useState15","_useState16","recurrenceValid","setRecurrenceValid","_useState17","_useState18","touched","setTouched","categoriesRegex","useMemo","flatMap","_category$rules","patterns","rules","rule","RegExp","pattern","o","handleSetRecurring","newRecurring","valid","currentTitle","matchedExpression","catEx","test","handleTitleChanged","submit","newDue","CategroyContainer","TaskList","_categories$sort","localeCompare","cat","isHidden","_useContext4","Navigate","replace","StyledRule","span","DeleteArea","CategoryRule","handleRemoval","RuleArea","CategoryEditor","resetEditedCategory","setName","setRules","currentRule","setCurrentRule","handleAddRule","_unused","handleRemove","ruleToRemove","handleSave","categoryToSave","assembledCategory","Shadow","StyledOverlay","Overlay","isEdited","CategoryName","RuleContainer","CategoryListEntry","id","handleEdit","CategoryList","editedCategory","CategoryManager","setEditedCategory","join","Login","loginConfig","signInFlow","signInOptions","EmailAuthProvider","PROVIDER_ID","signInSuccessUrl","StyledFirebaseAuth","uiConfig","firebaseAuth","App","BrowserRouter","Route","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2cf8a0bc.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\"\r\nimport { getDatabase } from \"firebase/database\"\r\n\r\nconst firebaseConfig = {\r\n\r\n  apiKey: \"AIzaSyBh36cGPXJH-cyb2giOsJet7VDEKZ3MVsU\",\r\n  authDomain: \"my-task-hub.firebaseapp.com\",\r\n  databaseURL: \"https://my-task-hub-default-rtdb.europe-west1.firebasedatabase.app\",\r\n  projectId: \"my-task-hub\",\r\n  storageBucket: \"my-task-hub.appspot.com\",\r\n  messagingSenderId: \"941408350272\",\r\n  appId: \"1:941408350272:web:a0f5bfc5afbcbbcb3defa5\",\r\n  measurementId: \"G-485HGNY5X9\"\r\n};\r\n\r\nexport const initializeFirebase = () => {\r\n\r\n  const app = initializeApp(firebaseConfig);\r\n  return getDatabase(app);  \r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { initializeFirebase } from \"../api/init\";\r\n\r\nconst DatabaseContext = React.createContext({\r\n  successIndicator: false,\r\n  errorList: [],\r\n  indicateSuccess: () => {},\r\n  addError: (message) => {},\r\n  clearErrorList: () => {},\r\n});\r\n\r\nexport const DatabaseContextPorvider = ({children}) => {\r\n\r\n  const [successIndicator, setSuccessIndicator] = useState(false);\r\n  const [errorList, setErrorList] = useState([])\r\n  const [ready, setReady] = useState(false);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      const database = initializeFirebase();\r\n      console.log(\"Initialize Firebase... done\")\r\n      if (database) {\r\n        setReady(true);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"initializind database failed\", error)\r\n    }\r\n  }, [])\r\n\r\n  const indicateSuccess = () => {\r\n    setSuccessIndicator(true);\r\n    setTimeout(() => setSuccessIndicator(false), 1000);\r\n  }\r\n\r\n  const addError = (message) => {\r\n    setErrorList([...errorList, message])\r\n  }\r\n\r\n  const clearErrorList = () => {\r\n    setErrorList([])\r\n  }\r\n\r\n  const value = {\r\n    successIndicator,\r\n    errorList,\r\n    indicateSuccess,\r\n    addError,\r\n    clearErrorList,\r\n    ready\r\n  }\r\n  \r\n  \r\n  return (\r\n    <DatabaseContext.Provider value={value}>{children}</DatabaseContext.Provider>\r\n  );\r\n}\r\n\r\nexport default DatabaseContext;","import React, { useState } from \"react\";\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport DatabaseContext from \"./DatabaseContext\";\r\nimport { useContext } from \"react\";\r\nimport { useUserActions } from \"../api/userActions\";\r\n\r\nconst AuthenticationContext = React.createContext({\r\n  uid: \"\",\r\n  displayName: \"\",\r\n  email: \"\",\r\n  isLoggedIn: () => Boolean,\r\n});\r\n\r\nexport const AuthenticationContextPorvider = ({ children }) => {\r\n  const [uid, setUid] = useState(\"\");\r\n  const [displayName, setDisplayName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const { ready } = useContext(DatabaseContext);\r\n  const { storeUser } = useUserActions();\r\n\r\n  const auth = ready && getAuth();\r\n  ready &&\r\n    onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        if (uid !== user.uid) {\r\n          storeUser(user.uid, user.displayName, user.email);\r\n        }\r\n        setUid(user.uid);\r\n        setDisplayName(user.displayName);\r\n        setEmail(user.email);\r\n      } else {\r\n        setUid(\"\");\r\n        setDisplayName(\"\");\r\n        setEmail(\"\");\r\n      }\r\n    });\r\n\r\n  const isLoggedIn = () => {\r\n    return !!uid;\r\n  };\r\n\r\n  const value = {\r\n    uid,\r\n    displayName,\r\n    email,\r\n    isLoggedIn,\r\n  };\r\n\r\n  return (\r\n    <AuthenticationContext.Provider value={value}>\r\n      {children}\r\n    </AuthenticationContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthenticationContext;\r\n","import { useContext } from \"react\";\r\nimport DatabaseContext from \"../state/DatabaseContext\";\r\nimport { getDatabase, get, ref, set } from \"firebase/database\";\r\n\r\nexport const useUserActions = () => {\r\n  const { addError, ready, indicateSuccess } = useContext(DatabaseContext);\r\n\r\n  const storeUser = (uid, displayName, mail) => {\r\n    if (!ready) {\r\n      addError(\"Database not ready to record user.\");\r\n      return;\r\n    }\r\n\r\n    const database = getDatabase();\r\n    const userRef = ref(database, `user/${uid}`);\r\n\r\n    get(userRef).then((snapshot) => {\r\n      const userObject = snapshot.exists() ? snapshot.val() : {};\r\n\r\n      const newUserObject = { ...userObject, mail, displayName };\r\n      set(userRef, newUserObject)\r\n        .then(indicateSuccess())\r\n        .catch((error) => addError(\"User update/creation failed: \" + error));\r\n    });\r\n  };\r\n\r\n  return {\r\n    storeUser,\r\n  };\r\n};\r\n","const TASKLIST_PATH = '/taskhub-fe'\r\nconst LOGIN_PATH = '/taskhub-fe/login'\r\nconst CATEGORIES_PATH = '/taskhub-fe/categories'\r\n\r\nexport const Routes = {\r\n  TASKLIST: TASKLIST_PATH,\r\n  LOGIN: LOGIN_PATH,\r\n  CATEGORIES: CATEGORIES_PATH,\r\n}","import React, { useCallback, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport DoneIcon from '@mui/icons-material/Done';\r\nimport AuthenticationContext from \"../state/AuthenticationContext\";\r\nimport DatabaseContext from \"../state/DatabaseContext\";\r\nimport 'firebase/compat/auth';\r\nimport { getAuth, signOut } from \"firebase/auth\";\r\nimport { Routes } from \"./routes\";\r\n\r\nconst StyledHeader = styled.header`\r\n  height: 3.5rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background-color: #007799;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n  gap: 20px;\r\n  color: white;\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: white;\r\n    font-weight: bold;\r\n  }\r\n\r\n  a:hover,\r\n  a:active,\r\n  a.active {\r\n    color: #E0F5FF;\r\n  }\r\n`;\r\n\r\nconst PageTitle = styled.div`\r\n  flex-grow: 1;\r\n`\r\n\r\nconst ErrorList = styled.div`\r\n  background-color: #EE8888;\r\n  color: white;\r\n  padding: 10px 20px 10px;\r\n\r\n  li {\r\n    list-style-type: none;\r\n  }\r\n`\r\n\r\nconst Header = ({page}) => {\r\n  const { successIndicator, errorList, addError } = useContext(DatabaseContext);\r\n  const { displayName, isLoggedIn } = useContext(AuthenticationContext);\r\n\r\n  const auth = getAuth();\r\n\r\n  const handleLogout = useCallback(() => {\r\n    signOut(auth)\r\n      .catch((e) => addError(\"Sign out failed: \", e))\r\n  }, [auth, addError])\r\n\r\n  return (\r\n    <>\r\n      <StyledHeader>\r\n        <PageTitle><a href=\"/tasks\">📝 TaskHub {\">>\"} { page }</a></PageTitle>\r\n        {successIndicator && <DoneIcon />}\r\n        {isLoggedIn() && <Link to={Routes.CATEGORIES}>Categories</Link>}\r\n        {isLoggedIn() && <a href={Routes.TASKLIST} onClick={handleLogout}>Logout ({displayName})</a>}\r\n      </StyledHeader>\r\n      {errorList.length > 0 && (\r\n        <ErrorList>\r\n          {errorList.map((error) => (\r\n            <li key={error}>{error}</li>\r\n          ))}\r\n        </ErrorList>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst StyledCard = styled.div`\r\n    padding: 1rem;\r\n    border-radius: 5px;\r\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst Card = props => {\r\n  return <StyledCard style={props.style} className={props.className}>{props.children}</StyledCard>;\r\n};\r\n\r\nexport default Card;","import styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  display: inline-block;\r\n  color: #007799;\r\n  background-color: #FFFFFF;\r\n  font-size: 1em;\r\n  padding: 0.25em 0.5em;\r\n  border: 2px solid #007799;\r\n  border-radius: 3px;\r\n  display: block;\r\n\r\n  ${({ primary }) => primary && `\r\n    background: #007799;\r\n    color: #FFFFFF;\r\n  `}\r\n`;\r\n\r\nexport default Button","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst StyledEntry = styled.div`\r\n  padding: 0.3rem;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\r\n  margin-top: 10px;\r\n  opacity: 1;\r\n\r\n  transform: translateY(0%);\r\n  transition: opacity 0.5s, transform 0.5s ease-in;\r\n\r\n  ${({ overdue }) => overdue && `\r\n    background: #FFDDDD;\r\n  `}\r\n\r\n  ${({ editMode }) => editMode && `\r\n    background: #E0F5FF;\r\n    padding-bottom: 0.6rem;\r\n    position: relative;\r\n    z-index: 99;\r\n  `}\r\n\r\n  ${({ done }) => done && `\r\n    color: grey;\r\n  `}\r\n\r\n  ${({ remove }) => remove && `\r\n    opacity: 0;\r\n    transform: translateY(100%);\r\n  `}\r\n\r\n  ${({ remove, done }) => remove && done && `\r\n    transform: translateY(-100%);\r\n  `}\r\n`;\r\n\r\nconst ListEntry = ({overdue, editMode, children, done, remove}) => {\r\n  return <StyledEntry overdue={overdue} editMode={editMode} done={done} remove={remove}>{children}</StyledEntry>;\r\n};\r\n\r\nexport default ListEntry;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledInput = styled.input`\r\n  width: 100%;\r\n  height: 24px;\r\n  border: 2px solid #007799;\r\n  border-radius: 3px;\r\n\r\n  :focus {\r\n    border: 2px solid #007799;\r\n  }\r\n\r\n  ${({ validationError }) => validationError && `\r\n    border: 2px solid #AA6666;\r\n    background-color: #FFDDDD;\r\n  `}\r\n`\r\n\r\nconst Input = ({onChange, value, validationError}) => {\r\n  return <StyledInput onChange={onChange} value={value} validationError={validationError}/>\r\n}\r\n\r\nexport default Input","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst FormFieldContainer = styled.div`\r\n  flex-grow: 1;\r\n  padding-right: 10px;\r\n`\r\n\r\nconst FormFieldDescription = styled.div`\r\n  font-size: 9pt;\r\n  color: #003333;\r\n`\r\n\r\nconst InputWrapper = ({description, children}) => {\r\n  return (\r\n    <FormFieldContainer>\r\n      <FormFieldDescription>{description}</FormFieldDescription>\r\n      {children}\r\n    </FormFieldContainer>)\r\n}\r\n\r\nexport default InputWrapper;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledSelect = styled.select`\r\n  width: 100%;\r\n  height: 30px;\r\n  border: 2px solid #007799;\r\n  border-radius: 3px;\r\n  background-color: white;\r\n\r\n  :disabled {\r\n    background-color: #EEEEEE;\r\n  }\r\n\r\n  :focus {\r\n    border: 2px solid #007799;\r\n  }\r\n`;\r\n\r\nconst Dropdown = ({ entries, onChange, selectedKey, disabled }) => {\r\n  return (\r\n    <StyledSelect onChange={onChange} value={selectedKey} disabled={disabled}>\r\n      {entries.map((entry) => (\r\n        <option key={entry.key || \"unknown\"} value={entry.key}>{entry.name}</option>\r\n      ))}\r\n    </StyledSelect>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import styled from \"styled-components\"\r\nimport ReactDatePicker from \"react-datepicker\"\r\n\r\nconst DatePicker = styled(ReactDatePicker)`\r\n  width: 100%;\r\n  height: 24px;\r\n  border: 2px solid #007799;\r\n  border-radius: 3px;\r\n\r\n  :focus {\r\n    border: 2px solid #007799;\r\n  }\r\n\r\n  ${({ validationError }) => validationError && `\r\n    border: 2px solid #AA6666;\r\n    background-color: #FFDDDD;\r\n  `}\r\n`;\r\n\r\nexport default DatePicker;","export const Priority = {\r\n  LOW: 'Low',\r\n  MEDIUM: 'Medium',\r\n  HIGH: 'High',\r\n}\r\n\r\nexport const Priorities = [\r\n  Priority.LOW,\r\n  Priority.MEDIUM,\r\n  Priority.HIGH,\r\n]\r\n\r\nexport const Frequency = {\r\n  DAILY: \"DAILY\",\r\n  WEEKLY: \"WEEKLY\",\r\n  MONTHLY: \"MONTHLY\",\r\n  YEARLY: \"YEARLY\",\r\n}\r\n\r\nexport const Frequencies = [\r\n  {name: \"Daily\", key: Frequency.DAILY},\r\n  {name: \"Weely\", key: Frequency.WEEKLY},\r\n  {name: \"Monthly\", key: Frequency.MONTHLY},\r\n  {name: \"Yearly\", key: Frequency.YEARLY},\r\n]\r\n\r\nexport const RecurrenceMode = {\r\n  AFTER_DUE: \"AFTER_DUE\",\r\n  AFTER_COMPLETE: \"AFTER_COMPLETE\",\r\n}\r\n\r\nexport const RecurrenceModes = [\r\n  {name: \"after due\", key: RecurrenceMode.AFTER_DUE},\r\n  {name: \"after complete\", key: RecurrenceMode.AFTER_COMPLETE},\r\n]\r\n\r\nexport const DEFAULT_CATEGORY = \"Uncategorized\";\r\n\r\n","import { set, ref, getDatabase, get } from \"firebase/database\";\r\nimport { useContext, useState } from \"react\";\r\nimport DatabaseContext from \"../state/DatabaseContext\";\r\n\r\nexport const useTaskActions = () => {\r\n  const { addError, indicateSuccess, ready } = useContext(DatabaseContext);\r\n  const [alreadyRetrieved, setAlreadyRetrieved] = useState(false);\r\n\r\n  const listenToTaskList = (successAction, uid) => {\r\n    if (!ready) {\r\n      addError(\"Getting taks failed: Database not ready.\");\r\n      return;\r\n    }\r\n\r\n    if (alreadyRetrieved) {\r\n      addError(\"WARN: Prevented from listening to tasklist multiple times.\");\r\n      return;\r\n    }\r\n    setAlreadyRetrieved(true);\r\n\r\n    const database = getDatabase();\r\n    const taskListRef = ref(database, \"tasks/\" + uid);\r\n\r\n    get(taskListRef)\r\n      .then((snapshot) => {\r\n        if (!snapshot.exists()) {\r\n          console.warn(\"No tasks were obtained by firebase.\");\r\n          return;\r\n        } \r\n\r\n        const tasklist = Object.values(snapshot.val());\r\n        const tasklist_1 = tasklist.map(task => ({\r\n          ...task, \r\n          due: task.due && new Date(task.due), \r\n          closedOn: task.closedOn && new Date(task.closedOn)}))\r\n          \r\n        successAction(tasklist_1);\r\n        indicateSuccess()\r\n      },\r\n      (error) => addError(\"Getting tasks failed: \" + error)\r\n    );\r\n  };\r\n\r\n  const updateTask = async (task, uid) => {\r\n    if (!ready) {\r\n      addError(\"Task update/creation failed: Database not ready.\");\r\n      return;\r\n    }\r\n\r\n    const taskToPersist = { \r\n      ...task, \r\n      due: task.due && task.due.getTime(), \r\n      closedOn: task.closedOn && task.closedOn.getTime() };\r\n\r\n    Object.keys(taskToPersist).forEach(\r\n      (key) => taskToPersist[key] === undefined && delete taskToPersist[key]\r\n    );\r\n\r\n    const database = getDatabase();\r\n    const objectReference = ref(database, `tasks/${uid}/${taskToPersist.key}`);\r\n    set(objectReference, taskToPersist)\r\n      .then(indicateSuccess())\r\n      .catch((error) => addError(\"Task update/creation failed: \" + error));\r\n  };\r\n\r\n  const removeTask = async (taskKey, uid) => {\r\n\r\n    const database = getDatabase();\r\n    const objectReference = ref(database, `tasks/${uid}/${taskKey}`);\r\n    set(objectReference, null)\r\n      .then(indicateSuccess())\r\n      .catch((error) => addError(\"Task removal failed: \" + error));\r\n  }\r\n\r\n  return {\r\n    listenToTaskList,\r\n    updateTask,\r\n    removeTask,\r\n  };\r\n\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useTaskActions } from \"../api/taskActions\";\r\nimport AuthenticationContext from \"./AuthenticationContext\";\r\nimport { Frequency, RecurrenceMode } from \"./constants\";\r\n\r\nconst TaskContext = React.createContext({\r\n  tasks: [],\r\n  addTask: (task) => {},\r\n  removeTask: (taskKey) => {},\r\n  toggleResolved: (taskKey) => {},\r\n  modifyTask: (task) => {},\r\n  unassignAllTasksFromCategory: (key) => {},\r\n});\r\n\r\nexport const TaskContextProvider = (props) => {\r\n  const { uid } = useContext(AuthenticationContext);\r\n  const [tasks, setTasks] = useState([]);\r\n  const { updateTask, removeTask: deleteTask } = useTaskActions();\r\n\r\n  const addTask = (newTask) => {\r\n    const newTaskWithKey = { ...newTask, key: uuidv4() };\r\n    setTasks([...tasks, newTaskWithKey]);\r\n    updateTask(newTaskWithKey, uid);\r\n  };\r\n\r\n  const removeTask = (taskKey) => {\r\n    setTasks(tasks.filter((task) => task.key !== taskKey));\r\n    deleteTask(taskKey, uid);\r\n  };\r\n\r\n  const toggleResolved = (taskKey) => {\r\n    const taskToUpdate = tasks.find((task) => task.key === taskKey);\r\n    taskToUpdate.done = !taskToUpdate.done;\r\n\r\n    taskToUpdate.closedOn = taskToUpdate.done ? new Date() : null;\r\n\r\n    setTasks(tasks.map((task) => (task.key === taskKey ? taskToUpdate : task)));\r\n    updateTask(taskToUpdate, uid);\r\n\r\n    const recurrenceMode = taskToUpdate.recurrenceMode;\r\n    if (recurrenceMode && taskToUpdate.done) {\r\n      const newDueDate =\r\n        taskToUpdate.recurrenceMode === RecurrenceMode.AFTER_COMPLETE\r\n          ? new Date()\r\n          : new Date(taskToUpdate.due.getTime());\r\n\r\n      const frequency = taskToUpdate.recurrenceFrequency;\r\n      if (frequency === Frequency.DAILY) {\r\n        newDueDate.setDate(newDueDate.getDate() + 1);\r\n      } else if (frequency === Frequency.WEEKLY) {\r\n        newDueDate.setDate(newDueDate.getDate() + 7);\r\n      } else if (frequency === Frequency.MONTHLY) {\r\n        newDueDate.setMonth(newDueDate.getMonth() + 1);\r\n      } else if (frequency === Frequency.YEARLY) {\r\n        newDueDate.setFullYear(newDueDate.getFullYear() + 1);\r\n      }\r\n\r\n      const newTask = {\r\n        ...taskToUpdate,\r\n        due: newDueDate,\r\n        done: false,\r\n        closedOn: undefined,\r\n      };\r\n      \r\n      addTask(newTask);\r\n    }\r\n  };\r\n\r\n  const modifyTask = (updatedTask) => {\r\n    setTasks(\r\n      tasks.map((task) => (task.key !== updatedTask.key ? task : updatedTask))\r\n    );\r\n    updateTask(updatedTask, uid);\r\n  };\r\n\r\n  const unassignAllTasksFromCategory = (key) => {\r\n    tasks\r\n      .filter((task) => task.category === key)\r\n      .forEach((task) => modifyTask({ ...task, category: undefined }));\r\n  };\r\n\r\n  const value = {\r\n    tasks,\r\n    setTasks,\r\n    addTask,\r\n    removeTask,\r\n    toggleResolved,\r\n    modifyTask,\r\n    unassignAllTasksFromCategory,\r\n  };\r\n\r\n  return (\r\n    <TaskContext.Provider value={value}>{props.children}</TaskContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TaskContext;\r\n","import React, {useContext, useEffect, useState} from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport AuthenticationContext from \"./AuthenticationContext\";\r\nimport { useCategoryActions } from \"../api/categoryActions\";\r\nimport TaskContext from \"./TaskContext\";\r\n\r\nconst CategoryContext = React.createContext({\r\n  categories: [],\r\n  saveCategory: (category) => {},\r\n  removeCategory: (category) => {},\r\n});\r\n\r\nexport const CategoryContextProvicer = (props) => {\r\n\r\n  const { uid, addError } = useContext(AuthenticationContext)  \r\n  const { unassignAllTasksFromCategory } = useContext(TaskContext);\r\n  const [categories, setCategories] = useState([]);\r\n  const {fetchCategories, updateCategory, deleteCategory} = useCategoryActions();\r\n\r\n  useEffect(() => {\r\n    fetchCategories(setCategories, uid);\r\n    // eslint-disable-next-line\r\n  }, [uid])\r\n\r\n  const saveCategory = (newCategory) => {\r\n\r\n    if (!newCategory.name) {\r\n      addError(\"Category name cannot be empty\")\r\n      return;\r\n    }\r\n\r\n    const newCategoryWithKey = { key: uuidv4(), ...newCategory };\r\n    const filteredCategories = categories.filter((category) => category.key !== newCategoryWithKey.key);\r\n    setCategories([...filteredCategories, newCategoryWithKey]);\r\n    updateCategory(newCategoryWithKey, uid);\r\n  }\r\n    \r\n  const removeCategory = (key) => {\r\n\r\n    unassignAllTasksFromCategory(key);\r\n    setCategories(categories.filter((category) => category.key !== key));\r\n    deleteCategory(key, uid)\r\n  }\r\n\r\n  const value = {\r\n    categories,\r\n    saveCategory,\r\n    removeCategory,\r\n  };\r\n\r\n  return (\r\n    <CategoryContext.Provider value={value}>{props.children}</CategoryContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CategoryContext;","import { set, ref, getDatabase, get } from \"firebase/database\";\r\nimport { useContext } from \"react\";\r\nimport DatabaseContext from \"../state/DatabaseContext\";\r\nimport { useCallback } from \"react\";\r\n\r\nexport const useCategoryActions = () => {\r\n  const { addError, indicateSuccess, ready } = useContext(DatabaseContext);\r\n\r\n  const fetchCategories = useCallback((successAction, uid) => {\r\n\r\n    if (!ready || !uid) {\r\n      console.warn(\"Firebase not ready.\")\r\n      return;\r\n    }\r\n\r\n    const database = getDatabase();\r\n    const categoriesRef = ref(database, \"categories/\" + uid);\r\n\r\n    get(categoriesRef)\r\n      .then((snapshot) => {\r\n        if (!snapshot.exists()) {\r\n          console.warn(\"No categories were obtained by firebase.\");\r\n          return;\r\n        } \r\n\r\n        const categories = Object.values(snapshot.val())\r\n          .map(task => ({...task, due: task.due && new Date(task.due)}));\r\n        successAction(categories);\r\n        indicateSuccess()}\r\n      ).catch((error) => {\r\n        console.error(error);\r\n        addError(\"Getting categories failed: \" + error)\r\n      });\r\n    \r\n  }, [addError, indicateSuccess, ready]);\r\n\r\n  const updateCategory = async (category, uid) => {\r\n\r\n    const catetoryToPersist = { ...category, due: category.due?.getTime() };\r\n\r\n    // do we need this ?\r\n    Object.keys(catetoryToPersist).forEach(\r\n      (key) => catetoryToPersist[key] === undefined && delete catetoryToPersist[key]\r\n    );\r\n\r\n    const database = getDatabase();\r\n    const objectReference = ref(database, `categories/${uid}/${catetoryToPersist.key}`);\r\n    set(objectReference, catetoryToPersist)\r\n      .then(indicateSuccess())\r\n      .catch((error) => addError(\"Category update/creation failed: \" + error));\r\n  };\r\n\r\n  const deleteCategory = async (categoryKey, uid) => {\r\n\r\n    const database = getDatabase();\r\n    const objectReference = ref(database, `categories/${uid}/${categoryKey}`);\r\n    set(objectReference, null)\r\n      .then(indicateSuccess())\r\n      .catch((error) => addError(\"Category removal failed: \" + error));\r\n  }\r\n\r\n  return {\r\n    fetchCategories,\r\n    updateCategory,\r\n    deleteCategory,\r\n  };\r\n\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport InputWrapper from \"../../components/InputWrapper\";\r\nimport Dropdown from \"../../components/Dropdown\";\r\nimport DatePicker from \"../../components/DatePicker\";\r\nimport {\r\n  Priorities,\r\n  Frequencies,\r\n  RecurrenceModes,\r\n  RecurrenceMode,\r\n  Frequency,\r\n  DEFAULT_CATEGORY,\r\n} from \"../../state/constants\";\r\nimport { useContext } from \"react\";\r\nimport CategoryContext from \"../../state/CategoryContext\";\r\n\r\nconst Row = styled.div`\r\n  margin-top: 7px;\r\n  display: flex;\r\n  gap: 10px;\r\n  width: 100%;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst RecurringSection = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  min-width: 300px;\r\n`;\r\n\r\nconst Checkbox = styled.input`\r\n  height: 17px;\r\n`;\r\n\r\nconst AdvancedTaskFields = ({\r\n  category,\r\n  setCategory,\r\n  due,\r\n  setDue,\r\n  priority,\r\n  setPriority,\r\n  recurring,\r\n  setRecurring,\r\n}) => {\r\n  const { categories } = useContext(CategoryContext);\r\n  const sortedCategories = categories?.sort(\r\n    (cat1, cat2) => cat1.name.toUpperCase() > cat2.name.toUpperCase()\r\n  );\r\n  const categoriesWithUnknown = [\r\n    { key: undefined, name: DEFAULT_CATEGORY },\r\n    ...sortedCategories,\r\n  ];\r\n\r\n  const currentDue = due instanceof Date ? due : undefined;\r\n\r\n  const [isRecurring, setIsRecurring] = useState(!!recurring.frequency);\r\n  const toggleRecurring = () => {\r\n    const newRecurring = isRecurring ? {} : {mode: RecurrenceMode.AFTER_COMPLETE, frequency: Frequency.WEEKLY}\r\n    setRecurring(newRecurring);\r\n    setIsRecurring(!isRecurring);\r\n  };\r\n\r\n  const priorityEntries = Priorities.map((priority) => {\r\n    return { key: priority, name: priority };\r\n  });\r\n\r\n  return (\r\n    <Row>\r\n      <InputWrapper description={\"Category\"}>\r\n        <Dropdown\r\n          entries={categoriesWithUnknown}\r\n          selectedKey={category || DEFAULT_CATEGORY}\r\n          onChange={(event) =>\r\n            setCategory(event.target.options[event.target.selectedIndex].value)\r\n          }\r\n        />\r\n      </InputWrapper>\r\n      <InputWrapper description={\"Due\"}>\r\n        <DatePicker\r\n          selected={currentDue}\r\n          onChange={(date) => setDue(date)}\r\n          dateFormat=\"dd.MM.yyyy\"\r\n          validationError={recurring.invalid}\r\n        />\r\n      </InputWrapper>\r\n      <InputWrapper name={\"priority\"} description={\"Priority\"}>\r\n        <Dropdown\r\n          entries={priorityEntries}\r\n          selectedKey={priority}\r\n          onChange={(event) =>\r\n            setPriority(event.target.options[event.target.selectedIndex].value)\r\n          }\r\n        />\r\n      </InputWrapper>\r\n      <>\r\n        <InputWrapper description={\"Recurring\"}>\r\n          <RecurringSection>\r\n            <Checkbox\r\n              type=\"checkbox\"\r\n              onChange={() => toggleRecurring()}\r\n              checked={isRecurring}\r\n            />\r\n            <Dropdown\r\n              disabled={!isRecurring}\r\n              entries={isRecurring ? Frequencies : []}\r\n              selectedKey={recurring.frequency}\r\n              onChange={(event) =>\r\n                setRecurring({\r\n                  ...recurring,\r\n                  frequency:\r\n                    event.target.options[event.target.selectedIndex].value,\r\n                })\r\n              }\r\n            />\r\n            <Dropdown\r\n              disabled={!isRecurring}\r\n              entries={isRecurring ? RecurrenceModes : []}\r\n              selectedKey={recurring.mode}\r\n              onChange={(event) =>\r\n                setRecurring({\r\n                  ...recurring,\r\n                  mode: event.target.options[event.target.selectedIndex].value,\r\n                })\r\n              }\r\n            />\r\n          </RecurringSection>\r\n        </InputWrapper>\r\n      </>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default AdvancedTaskFields;\r\n","import React, { useContext, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Input from \"../../components/Input\";\r\nimport InputWrapper from \"../../components/InputWrapper\";\r\nimport Button from \"../../components/Button\";\r\nimport AdvancedTaskFields from \"../task-creation/AdvancedTaskFields\";\r\nimport TaskContext from \"../../state/TaskContext\";\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n`;\r\n\r\nconst EditTask = ({ task, toggleEditMode }) => {\r\n  \r\n  \r\n  const [title, setTitle] = useState(task.title);\r\n  const [category, setCategory] = useState(task.category);\r\n  const [due, setDue] = useState(task.due)\r\n  const [priority, setPriority] = useState(task.priority)\r\n  const [recurring, setRecurring] = useState({mode: task.recurrenceMode, frequency: task.recurrenceFrequency})\r\n\r\n  const {removeTask, modifyTask} = useContext(TaskContext)\r\n\r\n  const submit = () => {\r\n    modifyTask({...task, title, category, due, priority, recurrenceMode: recurring.mode, recurrenceFrequency: recurring.frequency})\r\n    toggleEditMode();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <InputWrapper description={\"Task\"}>\r\n          <Input\r\n            value={title}\r\n            name={\"title\"}\r\n            onChange={(event) => setTitle(event.target.value)}\r\n          />\r\n        </InputWrapper>\r\n        <StyledButton onClick={() => submit()} primary>\r\n          Save\r\n        </StyledButton>\r\n        <StyledButton onClick={() => removeTask(task.key)}>Delete</StyledButton>\r\n      </Row>\r\n      <AdvancedTaskFields\r\n        category={category}\r\n        setCategory={setCategory}\r\n        due={due}\r\n        setDue={setDue}\r\n        priority={priority}\r\n        setPriority={setPriority}\r\n        recurring={recurring}\r\n        setRecurring={setRecurring}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditTask;\r\n","import React, { useCallback, useContext, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport Button from \"../../components/Button\";\r\nimport ListEntry from \"../../components/ListEntry\";\r\nimport EditTask from \"./EditTask\";\r\nimport { Priority } from \"../../state/constants\";\r\nimport TaskContext from \"../../state/TaskContext\";\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Checkbox = styled.input`\r\n  height: 17px;\r\n`;\r\n\r\nconst StyledDescription = styled.div`\r\n  flex-grow: 1;\r\n\r\n  ${({ done }) =>\r\n    done &&\r\n    `\r\n    text-decoration: line-through;\r\n  `}\r\n`;\r\n\r\nconst Importance = styled.div`\r\n  font-weight: bold;\r\n\r\n  ${({ priority }) =>\r\n    priority === Priority.HIGH &&\r\n    `\r\n    color: red;\r\n  `}\r\n\r\n  ${({ priority }) =>\r\n    priority === Priority.MEDIUM &&\r\n    `\r\n    color: orange;\r\n  `}\r\n\r\n  ${({ priority }) =>\r\n    priority === Priority.LOW &&\r\n    `\r\n    color: green;\r\n  `}\r\n`;\r\n\r\nconst formatDate = (date) => {\r\n  if (date instanceof Date) {\r\n    const day = date.getDate()\r\n    const month = date.getMonth()+1\r\n    const year = date.getFullYear()\r\n    return `${day}.${month}.${year}`\r\n  }\r\n}\r\n\r\nconst TaskEntry = ({ task }) => {\r\n  const { toggleResolved } = useContext(TaskContext);\r\n  const [remove, setRemove] = useState(false);\r\n\r\n  const currentDate = new Date();\r\n  const overdue =\r\n    task.due && typeof task.due.getTime === \"function\"\r\n      ? currentDate > task.due.getTime() && !task.done\r\n      : false;\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n  const toggleEditMode = () => setEditMode(!editMode);\r\n\r\n  const formattedDate = task.done ? formatDate(task.closedOn) : formatDate(task.due)\r\n\r\n  const handleToggle = useCallback(() => {\r\n    setTimeout(() => toggleResolved(task.key), 500);\r\n    setRemove(true);\r\n  }, [setRemove, task.key, toggleResolved])\r\n\r\n  return (\r\n    <ListEntry overdue={overdue} editMode={editMode} done={task.done} remove={remove}>\r\n      {!editMode ? (\r\n        <Row>\r\n          <Checkbox type=\"checkbox\" onChange={() => handleToggle()} checked={task.done || remove} />\r\n          <Importance priority={task.priority}>!</Importance>\r\n          <StyledDescription done={task.done}>{task.title} {formattedDate && `(${formattedDate})`}</StyledDescription>\r\n          <Button onClick={() => toggleEditMode()}>\r\n            <EditIcon fontSize=\"small\" />\r\n          </Button>\r\n        </Row>\r\n      ) : (\r\n        <EditTask task={task} toggleEditMode={toggleEditMode} />\r\n      )}\r\n    </ListEntry>\r\n  );\r\n};\r\n\r\nexport default TaskEntry;\r\n","import { Priority } from \"../../state/constants\";\r\n\r\nexport const SortOrder = {\r\n  ALPHABETICAL: \"Alphabetical\",\r\n  DUE_UNKNOWN_FIRST: \"Due (unknown first)\",\r\n  DUE_UNKNOWN_LAST: \"Due (unknown last)\",\r\n  PRIORITY: \"Priority\",\r\n}\r\n\r\nconst alphabetical = (a, b) => {\r\n    if (a.title > b.title) return 1;\r\n    if (a.title < b.title) return -1;\r\n    return 0;\r\n}\r\n\r\nconst unknownFirst = (a, b) => {\r\n    if (!a.due && !b.due) return a.title > b.title;\r\n    if (!a.due) return -1;\r\n    if (!b.due) return 1;\r\n    return a.due - b.due;\r\n}\r\n\r\nconst unknownLast = (a, b) => {\r\n    if (!a.due && !b.due) return a.title > b.title;\r\n    if (!a.due) return 1;\r\n    if (!b.due) return -1;\r\n    return a.due - b.due;\r\n}\r\n\r\nconst priority = (a, b) => {\r\n    if (a.priority === b.priority) return unknownLast(a, b);\r\n    if (a.priority === Priority.HIGH) return -1;\r\n    if (a.priority === Priority.LOW) return 1;\r\n    if (b.priority === Priority.HIGH) return 1;\r\n    if (b.priority === Priority.LOW) return -1;\r\n}\r\n\r\nexport const compareClosedOn = (a, b) => {\r\n    if (a.closedOn === b.closedOn) return 0;\r\n    if (!a.closedOn) return 1;\r\n    if (!b.closedOn) return -1;\r\n    return b.closedOn - a.closedOn;\r\n}\r\n\r\nexport const SortOrderFunctions = {\r\n    [SortOrder.ALPHABETICAL]: alphabetical,\r\n    [SortOrder.DUE_UNKNOWN_FIRST]: unknownFirst,\r\n    [SortOrder.DUE_UNKNOWN_LAST]: unknownLast,\r\n    [SortOrder.PRIORITY]: priority,\r\n}","import { useCallback, useState } from \"react\";\r\nimport styled from \"styled-components\"\r\nimport { SortOrder } from \"./sortOrder\";\r\nimport SortIcon from '@mui/icons-material/Sort';\r\n\r\nconst StyledOrderDropdown = styled.div`\r\n  display: inline-block;\r\n  overflow: hidden;\r\n  font-size: smaller;\r\n  vertical-align: bottom;\r\n  color: grey;\r\n`\r\n\r\nconst StyledSortOrderContent = styled.div`\r\n  transition:visibility 0.2s linear,opacity 0.2s linear;\r\n  display: block;\r\n  position: absolute;\r\n  background-color: #FFFFFF;\r\n  border-style: solid;\r\n  border-color: #BBBBBB;\r\n  border-radius: 3px;\r\n  border-width: 2px;\r\n  min-width: 160px;\r\n  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\r\n  z-index: 1;\r\n\r\n  ${({ showDropdown }) => showDropdown ? `opacity: 100;` : `opacity: 0; visibility:hidden`}\r\n`\r\n\r\nconst DropdownEntry = styled.div`\r\n  transition: all 0.1s linear;\r\n  padding: 5px;\r\n  ${({ selected }) => selected && `\r\n    background: #E0F5FF;\r\n  `}\r\n`;\r\n\r\n\r\n\r\nconst OrderDropdown = ({setSortOrder, sortOrder}) => {\r\n\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n\r\n  const handleSetSortOrder = useCallback((sortOrder) => {\r\n    setShowDropdown(false);\r\n    setSortOrder(sortOrder)\r\n  }, [setShowDropdown, setSortOrder])\r\n\r\n  return  (\r\n    <StyledOrderDropdown>\r\n      <SortIcon onClick={() => setShowDropdown(!showDropdown)} fontSize=\"small\" />\r\n      <StyledSortOrderContent showDropdown={showDropdown}>\r\n        {Object.values(SortOrder).map((order) => \r\n          <DropdownEntry key={order} selected={order === sortOrder} onClick={() => handleSetSortOrder(order)}>\r\n            {order}\r\n          </DropdownEntry>\r\n        )}\r\n      </StyledSortOrderContent>\r\n    </StyledOrderDropdown>\r\n  );\r\n}\r\n\r\nexport default OrderDropdown;","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Card from \"../../components/Card\";\r\nimport TaskEntry from \"./TaskEntry\";\r\nimport OrderDropdown from \"./OrderDropdown\";\r\nimport { SortOrder, SortOrderFunctions, compareClosedOn } from \"./sortOrder\";\r\n\r\nconst ContainerTitle = styled.h2`\r\n  font-size: 14pt;\r\n`\r\n\r\nconst ClosedTaskToggle = styled.div`\r\n  margin-top: 10px;\r\n  color: #007799;\r\n`\r\n\r\nconst CategoryCard = styled(Card)`\r\n  width: 400px;\r\n  flex-grow: 1;\r\n`\r\n\r\nconst TaskContainer = ({ taskCategory, tasks }) => {\r\n  const [sortOrder, setSortOrder] = useState(SortOrder.DUE_UNKNOWN_LAST);\r\n  const [showClosed, setShowClosed] = useState(false);\r\n  const sortOrderFunction = SortOrderFunctions[sortOrder];\r\n\r\n  const openTasks = tasks\r\n    .filter(t => !t.done)\r\n    .sort((a, b) => sortOrderFunction(a, b));\r\n  const closedTasks = tasks\r\n    .filter(t => t.done)\r\n    .sort((a, b) => compareClosedOn(a, b));\r\n\r\n  const toggleClosedText = showClosed\r\n    ? \"- Hide closed tasks\"\r\n    : \"+ Show closed tasks\";\r\n\r\n  return (\r\n    <CategoryCard>\r\n      <ContainerTitle>\r\n        <OrderDropdown setSortOrder={setSortOrder} sortOrder={sortOrder} />{\" \"}\r\n        {taskCategory || \"Uncategorized\"}\r\n      </ContainerTitle>\r\n      {openTasks.length > 0\r\n        ? openTasks.map((task) => <TaskEntry task={task} key={task.key} />)\r\n        : \"Yay, no tasks\"}\r\n      {closedTasks.length > 0 && (\r\n        <>\r\n          <ClosedTaskToggle onClick={() => setShowClosed(!showClosed)}>\r\n            {toggleClosedText}\r\n          </ClosedTaskToggle>\r\n          {showClosed &&\r\n            closedTasks.map((task) => <TaskEntry task={task} key={task.key} />)}\r\n        </>\r\n      )}\r\n    </CategoryCard>\r\n  );\r\n};\r\n\r\nexport default TaskContainer;\r\n","import React, { useContext, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport Button from \"../../components/Button\";\r\nimport Input from \"../../components/Input\";\r\nimport Card from \"../../components/Card\";\r\nimport InputWrapper from \"../../components/InputWrapper\";\r\nimport AdvancedTaskFields from \"./AdvancedTaskFields\";\r\nimport { Priority, RecurrenceMode } from \"../../state/constants\";\r\nimport TaskContext from \"../../state/TaskContext\";\r\nimport CategoryContext from \"../../state/CategoryContext\";\r\n\r\nconst TaskCreatorCard = styled(Card)`\r\n  margin-left: 1rem;\r\n  margin-right: 1rem;\r\n  margin-bottom: 0px;\r\n  background-color: #e0f5ff;\r\n  max-height: 50px;\r\n  transition: max-height 0.3s linear;\r\n  height: fit-content;\r\n  overflow: hidden;\r\n\r\n  ${({ advanced }) => (advanced ? `max-height: 200px;` : `max-height: 50px;`)}\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst AdvancedRow = styled(Row)`\r\n  transition: opacity 0.3s linear;\r\n  ${({ advanced }) => (advanced ? `opacity: 1;` : `opacity: 0;`)}\r\n`;\r\n\r\nconst TaskCreator = () => {\r\n  const [advanced, setAdvanced] = useState(() => false);\r\n\r\n  const { addTask } = useContext(TaskContext);\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [category, setCategory] = useState(undefined);\r\n  const [priority, setPriority] = useState(Priority.MEDIUM);\r\n  const [due, setDue] = useState(undefined);\r\n  const [recurring, setRecurring] = useState({});\r\n  const [titleValid, setTitleValid] = useState(false);\r\n  const [recurrenceValid, setRecurrenceValid] = useState(true);\r\n  const [touched, setTouched] = useState(false);\r\n\r\n  const { categories } = useContext(CategoryContext);\r\n  const categoriesRegex = useMemo(\r\n    () =>\r\n      categories\r\n        .flatMap((category) => {\r\n          const patterns = category.rules?.map((rule) => new RegExp(rule));\r\n          return patterns?.map((pattern) => {\r\n            return { pattern, category: category.key };\r\n          });\r\n        })\r\n        .filter((o) => !!o),\r\n    [categories]\r\n  );\r\n\r\n  const handleSetRecurring = (newRecurring) => {\r\n    const valid = newRecurring.mode !== RecurrenceMode.AFTER_DUE || !!due;\r\n    setRecurrenceValid(valid);\r\n    setRecurring({ ...newRecurring, invalid: !valid });\r\n  };\r\n\r\n  const handleSetDue = (newDue) => {\r\n    const valid = recurring.mode !== RecurrenceMode.AFTER_DUE || !!newDue;\r\n    setRecurrenceValid(valid);\r\n    setDue(newDue);\r\n    setRecurring({ ...recurring, invalid: !valid });\r\n  };\r\n\r\n  const submit = () => {\r\n    const newTask = {\r\n      title,\r\n      category,\r\n      due,\r\n      priority,\r\n      recurrenceMode: recurring.mode,\r\n      recurrenceFrequency: recurring.frequency,\r\n    };\r\n\r\n    handleSetRecurring(recurring);\r\n    if (!titleValid || !recurrenceValid) {\r\n      setTouched(true);\r\n      return;\r\n    }\r\n\r\n    addTask(newTask);\r\n\r\n    setTitle(\"\");\r\n    setCategory(undefined);\r\n    setPriority(Priority.MEDIUM);\r\n    setTitleValid(false);\r\n    setTouched(false);\r\n    setRecurring({});\r\n  };\r\n\r\n  const handleTitleChanged = (event) => {\r\n    const currentTitle = event.target.value;\r\n    setTitle(currentTitle);\r\n    setTitleValid(!!currentTitle);\r\n    setTouched(true);\r\n\r\n    if (category === undefined) {\r\n      const matchedExpression = categoriesRegex.find((catEx) =>\r\n        catEx.pattern.test(currentTitle)\r\n      );\r\n      setCategory(matchedExpression?.category);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TaskCreatorCard advanced={advanced}>\r\n      <Row>\r\n        <InputWrapper description={\"New Task\"}>\r\n          <Input\r\n            value={title}\r\n            name={\"title\"}\r\n            validationError={!titleValid && touched}\r\n            onChange={(event) => handleTitleChanged(event)}\r\n          />\r\n        </InputWrapper>\r\n        <StyledButton onClick={() => setAdvanced(!advanced)}>\r\n          {!advanced ? \"➕\" : \"➖\"}\r\n        </StyledButton>\r\n        <StyledButton onClick={() => submit()} primary>\r\n          Create\r\n        </StyledButton>\r\n      </Row>\r\n      <AdvancedRow advanced={advanced}>\r\n        <AdvancedTaskFields\r\n          category={category}\r\n          setCategory={setCategory}\r\n          due={due}\r\n          setDue={handleSetDue}\r\n          priority={priority}\r\n          setPriority={setPriority}\r\n          recurring={recurring}\r\n          setRecurring={handleSetRecurring}\r\n        />\r\n      </AdvancedRow>\r\n    </TaskCreatorCard>\r\n  );\r\n};\r\n\r\nexport default TaskCreator;\r\n","import Header from \"../Header\";\r\nimport styled from \"styled-components\";\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport TaskContainer from \"./TaskContainer\";\r\nimport TaskCreator from \"../task-creation/TaskCreator\";\r\nimport TaskContext from \"../../state/TaskContext\";\r\nimport DatabaseContext from \"../../state/DatabaseContext\";\r\nimport { useTaskActions } from \"../../api/taskActions\";\r\nimport AuthenticationContext from \"../../state/AuthenticationContext\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport CategoryContext from \"../../state/CategoryContext\";\r\n\r\nconst CategroyContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: stretch;\r\n  gap: 15px;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst TaskList = () => {\r\n  const { categories } = useContext(CategoryContext);\r\n  const sortedCategories = categories\r\n    ?.sort((cat1, cat2) => cat1.name.localeCompare(cat2.name))\r\n    ?.filter((cat) => !cat.isHidden);\r\n  const categoriesWithUnknown = [{key: undefined, name: 'Uncategorized'}, ...sortedCategories]\r\n\r\n  const { tasks, setTasks } = useContext(TaskContext);\r\n  const { ready } = useContext(DatabaseContext);\r\n  const { listenToTaskList } = useTaskActions();\r\n\r\n  const { isLoggedIn, uid } = useContext(AuthenticationContext);\r\n\r\n  // eslint-disable-next-line\r\n  useEffect(() => ready && listenToTaskList(setTasks, uid), [ready, uid]);\r\n\r\n  if (!isLoggedIn()) {\r\n    return <Navigate to=\"taskhub-fe/login\" replace />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header page={\"Tasks\"}></Header>\r\n      <TaskCreator></TaskCreator>\r\n      <CategroyContainer>\r\n        {categoriesWithUnknown.map((taskCategory) => (\r\n          <TaskContainer\r\n            key={taskCategory.key || \"undefined\"}\r\n            taskCategory={taskCategory.name}\r\n            tasks={tasks.filter((task) => task.category === taskCategory.name || task.category === taskCategory.key)}\r\n          />\r\n        ))}\r\n      </CategroyContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst StyledRule = styled.span`\r\n  border: 1px solid;\r\n  border-color: #007799;\r\n  background-color: #E0F5FF;\r\n  color: #007799;\r\n  padding: 0px 2px;\r\n  border-radius: 3px;\r\n  white-space:nowrap;\r\n\r\n  ${({ editMode }) => editMode || `\r\n    font-size: smaller;\r\n  `}\r\n`;\r\n\r\nconst DeleteArea = styled.span`\r\n  border: 1px solid;\r\n  border-color: #006666;\r\n  border-radius: 3px;\r\n  margin-right: -3px;\r\n  margin-left: 3px;\r\n  padding: 0px 5px;\r\n  background-color: #FFDDDD;\r\n  color: #CC8888;  \r\n`;\r\n\r\nconst CategoryRule = ({rule, handleRemoval, editMode}) => {\r\n  return (\r\n    <StyledRule editMode={editMode}>\r\n      {rule}\r\n      {editMode && <DeleteArea onClick={() => handleRemoval(rule)}>X</DeleteArea>}\r\n    </StyledRule>\r\n  )\r\n}\r\n\r\nexport default CategoryRule;","import React, { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"../../components/Button\";\r\nimport Card from \"../../components/Card\";\r\nimport Input from \"../../components/Input\";\r\nimport InputWrapper from \"../../components/InputWrapper\";\r\nimport CategoryRule from \"./CategoryRule\";\r\nimport CategoryContext from \"../../state/CategoryContext\";\r\nimport DatabaseContext from \"../../state/DatabaseContext\";\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst RuleArea = styled.div`\r\n  margin-top: 10px;\r\n  display: flex;\r\n  gap: 5px;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst CategoryEditor = ({ category, resetEditedCategory }) => {\r\n  const [name, setName] = useState('');\r\n  const [rules, setRules] = useState([]);\r\n  const [currentRule, setCurrentRule] = useState(\"\");\r\n\r\n  const { saveCategory } = useContext(CategoryContext);\r\n  const { addError } = useContext(DatabaseContext);\r\n\r\n  useEffect(() => {\r\n    setName(category.name || \"\");\r\n    setRules(category.rules || []);\r\n  }, [category]);\r\n\r\n  const handleAddRule = useCallback(() => {\r\n    try {\r\n      new RegExp(currentRule);\r\n    } catch {\r\n      addError(\"Cannot add rule due to invalid format\");\r\n      return;\r\n    }\r\n\r\n    setRules([...rules, currentRule]);\r\n    setCurrentRule(\"\");\r\n  }, [rules, currentRule, setCurrentRule, setRules, addError]);\r\n\r\n  const handleRemove = useCallback(\r\n    (ruleToRemove) => {\r\n      setRules(rules.filter((rule) => rule !== ruleToRemove));\r\n    },\r\n    [rules, setRules]\r\n  );\r\n\r\n  const handleSave = useCallback(\r\n    (categoryToSave) => {\r\n      saveCategory(categoryToSave);\r\n      resetEditedCategory();\r\n    },\r\n    [resetEditedCategory, saveCategory]\r\n  );\r\n\r\n  const assembledCategory = { ...category, name, rules };\r\n\r\n  return (\r\n    <Card>\r\n      <Row>\r\n        <InputWrapper description={\"Name:\"}>\r\n          <Input\r\n            value={name}\r\n            onChange={(event) => setName(event.target.value)}\r\n          />\r\n        </InputWrapper>\r\n        <StyledButton onClick={() => handleSave(assembledCategory)} primary>\r\n          Save\r\n        </StyledButton>\r\n      </Row>\r\n      <Row>\r\n        <InputWrapper description={\"Rules (Regex capable)\"}>\r\n          <Input\r\n            value={currentRule}\r\n            onChange={(event) => {\r\n              setCurrentRule(event.target.value);\r\n            }}\r\n          />\r\n        </InputWrapper>\r\n        <StyledButton onClick={handleAddRule}>Add</StyledButton>\r\n      </Row>\r\n      <RuleArea>\r\n        {rules?.map((rule) => (\r\n          <CategoryRule\r\n            rule={rule}\r\n            key={rule}\r\n            handleRemoval={handleRemove}\r\n            editMode\r\n          />\r\n        ))}\r\n      </RuleArea>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CategoryEditor;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Shadow = styled.div`\r\n  position: fixed;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  left: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  z-index: 2;\r\n`\r\n\r\nconst StyledOverlay = styled.div`\r\n  position: fixed;\r\n  top: 60px;\r\n  bottom: 60px;\r\n  right: 60px;\r\n  left: 60px;\r\n  background-color: #FFFFFF;\r\n  z-index: 3;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.5);\r\n  padding: 0px 20px;\r\n  overflow: auto;\r\n`\r\n\r\nconst Overlay = (props) => {\r\n  const { children } = props;\r\n\r\n  return (\r\n    <Shadow>\r\n      <StyledOverlay>\r\n        {children}\r\n      </StyledOverlay>\r\n    </Shadow>\r\n  );\r\n} \r\n\r\nexport default Overlay;","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"../../components/Button\";\r\nimport Card from \"../../components/Card\";\r\nimport CategoryRule from \"./CategoryRule\";\r\nimport CategoryContext from \"../../state/CategoryContext\";\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n\r\n  ${({ isEdited }) =>\r\n    isEdited &&\r\n    `\r\n    color: #666666;\r\n  `}\r\n`;\r\n\r\nconst CategoryName = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst RuleContainer = styled.div`\r\n  margin-top: 5px;\r\n  display: flex;\r\n  gap: 7px;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst CategoryListEntry = ({ name, id, rules, handleEdit, isEdited }) => {\r\n  const { removeCategory } = useContext(CategoryContext);\r\n\r\n  return (\r\n    <Card>\r\n      <Row isEdited={isEdited}>\r\n        <CategoryName>{name}</CategoryName>\r\n        {!isEdited && (\r\n          <>\r\n            <Button onClick={() => handleEdit(id)}>Edit</Button>\r\n            <Button onClick={() => removeCategory(id)}>Delete</Button>\r\n          </>\r\n        )}\r\n      </Row>\r\n      <RuleContainer>\r\n        {rules && rules.map((rule) => <CategoryRule rule={rule} key={rule} />)}\r\n      </RuleContainer>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CategoryListEntry;\r\n","import React from \"react\";\r\nimport CategoryListEntry from \"./CategoryListEntry\";\r\n\r\nconst CategoryList = ({categories, handleEdit, editedCategory}) => {\r\n\r\n  const sortedCategories = categories?.sort((cat1, cat2) => cat1.name.toUpperCase() > cat2.name.toUpperCase());\r\n\r\n  return sortedCategories.map(({name, key, rules}) => (\r\n    <CategoryListEntry \r\n    name={name} \r\n    id={key} \r\n    key={key}\r\n    rules={rules} \r\n    handleEdit={handleEdit}\r\n    isEdited={editedCategory.key === key} />\r\n  ))\r\n\r\n}\r\n\r\nexport default CategoryList;","import React, { useCallback, useContext, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CategoryEditor from \"./CategoryEditor\";\r\nimport Button from \"../../components/Button\";\r\nimport Overlay from \"../../components/Overlay\";\r\nimport CategoryList from \"./CategoryList\";\r\nimport styled from \"styled-components\";\r\nimport CategoryContext from \"../../state/CategoryContext\";\r\nimport { Routes } from \"../routes\";\r\nimport DatabaseContext from \"../../state/DatabaseContext\";\r\n\r\n/* const mockCategories = [\r\n  {name: \"Purchase\", id:\"id1\", rules: [\"buy*.\", \"purchase*.\"]},\r\n  {name: \"Media\", id:\"id2\", rules: [\"show*.\", \"song*.\", \"music*.\", \"download*.\", \"netflix*.\", \"*.book\"]},\r\n  {name: \"Contact\", id:\"id3\", rules: [\"call*.\", \"contact*.\", \"write*.\"]},\r\n] */\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: 10px;\r\n  text-decoration: none;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst CategoryManager = () => {\r\n  const { categories } = useContext(CategoryContext);\r\n  const { errorList } = useContext(DatabaseContext);\r\n  const [editedCategory, setEditedCategory] = useState({ rules: [] });\r\n\r\n  const handleEdit = (key) => {\r\n    setEditedCategory(categories.find((entry) => entry.key === key));\r\n  };\r\n\r\n  const resetEditedCategory = useCallback(() => {\r\n    setEditedCategory({ rules: [] });\r\n  }, [setEditedCategory]);\r\n\r\n  return (\r\n    <Overlay>\r\n      {errorList && <p>{errorList.join(',')}</p>}\r\n      <h2>Categories</h2>\r\n      <CategoryEditor\r\n        category={editedCategory}\r\n        resetEditedCategory={resetEditedCategory}\r\n      />\r\n      <CategoryList\r\n        categories={categories}\r\n        handleEdit={handleEdit}\r\n        editedCategory={editedCategory}\r\n      />\r\n      <Link to={Routes.TASKLIST}>\r\n        <StyledButton primary>Close</StyledButton>\r\n      </Link>\r\n    </Overlay>\r\n  );\r\n};\r\n\r\nexport default CategoryManager;\r\n","import React, { useContext } from 'react';\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport Header from '../Header';\r\nimport Card from '../../components/Card';\r\nimport DatabaseContext from '../../state/DatabaseContext';\r\nimport { Navigate } from 'react-router-dom';\r\nimport AuthenticationContext from '../../state/AuthenticationContext';\r\nimport { getAuth, EmailAuthProvider } from 'firebase/auth';\r\nimport { Routes } from '../routes';\r\n\r\nconst Login = () => {\r\n\r\n    const { ready } = useContext(DatabaseContext);\r\n    const { isLoggedIn } = useContext(AuthenticationContext);\r\n\r\n    if (isLoggedIn()) {\r\n        return <Navigate to={Routes.TASKLIST} replace />\r\n    }\r\n\r\n    const loginConfig = {\r\n        signInFlow: 'popup',\r\n        signInOptions: [\r\n            EmailAuthProvider.PROVIDER_ID,\r\n        ],\r\n        signInSuccessUrl: Routes.TASKLIST,\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <Header page={\"Login\"} />\r\n            {ready && <StyledFirebaseAuth uiConfig={loginConfig} firebaseAuth={getAuth()} />}\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\nimport { Routes, Route, BrowserRouter } from \"react-router-dom\";\r\nimport TaskList from \"./pages/task-list/TaskList\";\r\nimport CategoryManager from \"./pages/categories/CategoryManager\";\r\nimport Login from \"./pages/auth/Login\";\r\nimport { TaskContextProvider } from \"./state/TaskContext\";\r\nimport { DatabaseContextPorvider } from \"./state/DatabaseContext\";\r\nimport { AuthenticationContextPorvider } from \"./state/AuthenticationContext\";\r\nimport { CategoryContextProvicer } from \"./state/CategoryContext\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <DatabaseContextPorvider>\r\n      <AuthenticationContextPorvider>\r\n      <TaskContextProvider>\r\n      <CategoryContextProvicer>\r\n        <BrowserRouter>\r\n          <Routes>\r\n            <Route path=\"/taskhub-fe/categories\" element={<CategoryManager />} />\r\n            <Route path=\"/taskhub-fe/login\" element={<Login />} />\r\n            <Route path=\"*\" element={<TaskList />} />\r\n          </Routes>\r\n        </BrowserRouter>\r\n      </CategoryContextProvicer>\r\n      </TaskContextProvider>\r\n      </AuthenticationContextPorvider>\r\n    </DatabaseContextPorvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}