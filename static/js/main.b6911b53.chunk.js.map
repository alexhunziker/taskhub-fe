{"version":3,"sources":["api/init.js","state/DatabaseContext.js","state/AuthenticationContext.js","api/userActions.js","pages/routes.js","pages/Header.jsx","components/Card.jsx","components/Button.jsx","components/ListEntry.jsx","components/Input.jsx","components/InputWrapper.jsx","components/Dropdown.jsx","components/DatePicker.jsx","state/constants.js","api/taskActions.js","state/TaskContext.js","state/CategoryContext.js","api/categoryActions.js","pages/task-creation/AdvancedTaskFields.jsx","pages/task-list/EditTask.jsx","pages/task-list/TaskEntry.jsx","pages/task-list/sortOrder.js","pages/task-list/OrderDropdown.jsx","pages/task-list/TaskContainer.jsx","pages/task-creation/TaskCreator.jsx","pages/task-list/TaskList.jsx","pages/categories/CategoryRule.jsx","pages/categories/CategoryEditor.jsx","components/Overlay.jsx","pages/categories/CategoryListEntry.jsx","pages/categories/CategoryList.jsx","pages/categories/CategoryManager.jsx","pages/auth/AuthenticationBox.jsx","pages/auth/Login.jsx","App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","DatabaseContext","React","createContext","successIndicator","errorList","indicateSuccess","addError","message","clearErrorList","DatabaseContextPorvider","_ref","children","_useState","useState","_useState2","_slicedToArray","setSuccessIndicator","_useState3","_useState4","setErrorList","_useState5","_useState6","ready","setReady","useEffect","database","app","initializeApp","getDatabase","initializeFirebase","console","log","error","value","setTimeout","concat","_toConsumableArray","_jsx","Provider","AuthenticationContext","uid","displayName","email","isLoggedIn","Boolean","AuthenticationContextPorvider","setUid","setDisplayName","setEmail","useContext","_useUserActions","_useContext","storeUser","mail","userRef","ref","get","then","snapshot","userObject","exists","val","newUserObject","_objectSpread","set","catch","useUserActions","auth","getAuth","onAuthStateChanged","user","Routes","StyledHeader","styled","header","_templateObject","_taggedTemplateLiteral","PageTitle","div","_templateObject2","ErrorList","_templateObject3","StyledLogout","LogoutIcon","_templateObject4","Header","page","_useContext2","handleLogout","useCallback","signOut","e","_jsxs","_Fragment","href","DoneIcon","Link","to","onClick","length","map","StyledCard","Card","style","className","innerRef","remaining","_objectWithoutProperties","_excluded","Button","button","primary","StyledEntry","overdue","_ref2","editMode","_ref3","done","_ref4","remove","_ref5","ListEntry","_ref6","StyledInput","input","validationError","Input","onChange","FormFieldContainer","FormFieldDescription","InputWrapper","description","StyledSelect","select","Dropdown","entries","selectedKey","disabled","entry","key","name","DatePicker","ReactDatePicker","Priority","Priorities","Frequency","Frequencies","RecurrenceMode","RecurrenceModes","DEFAULT_CATEGORY","useTaskActions","alreadyRetrieved","setAlreadyRetrieved","updateTask","_asyncToGenerator","_regeneratorRuntime","mark","_callee","task","taskToPersist","objectReference","wrap","_context","prev","next","abrupt","due","getTime","closedOn","Object","keys","forEach","undefined","stop","_x","_x2","apply","arguments","removeTask","_callee2","taskKey","_context2","_x3","_x4","listenToTaskList","successAction","taskListRef","tasklist_1","values","Date","warn","TaskContext","tasks","addTask","toggleResolved","modifyTask","unassignAllTasksFromCategory","TaskContextProvider","props","setTasks","_useTaskActions","deleteTask","newTask","newTaskWithKey","uuidv4","updatedTask","filter","taskToUpdate","find","recurrenceMode","newDueDate","frequency","recurrenceFrequency","setDate","getDate","setMonth","getMonth","setFullYear","getFullYear","category","CategoryContext","categories","saveCategory","removeCategory","updateOrder","CategoryContextProvicer","setCategories","_useCategoryActions","fetchCategories","categoriesRef","updateCategory","_category$due","catetoryToPersist","deleteCategory","categoryKey","useCategoryActions","newCategory","newCategoryWithKey","filteredCategories","reOrderedCategories","_loop","i","targetCategory","c","order","Row","RecurringSection","Checkbox","AdvancedTaskFields","_categories$sort","setCategory","setDue","priority","setPriority","recurring","setRecurring","sortedCategories","sort","cat1","cat2","toUpperCase","hidden","categoriesWithUnknown","currentDue","isRecurring","setIsRecurring","priorityEntries","event","target","options","selectedIndex","selected","date","dateFormat","invalid","type","mode","checked","StyledButton","EditTask","toggleEditMode","title","setTitle","_useState7","_useState8","_useState9","_useState10","StyledDescription","Importance","formatDate","day","month","year","TaskEntry","setRemove","currentDate","setEditMode","formattedDate","handleToggle","EditIcon","fontSize","SortOrder","ALPHABETICAL","DUE_UNKNOWN_FIRST","DUE_UNKNOWN_LAST","PRIORITY","unknownLast","a","b","SortOrderFunctions","_SortOrderFunctions","_defineProperty","_a$title","_b$title","aUpper","bUpper","StyledOrderDropdown","StyledSortOrderContent","showDropdown","DropdownEntry","OrderDropdown","setSortOrder","sortOrder","setShowDropdown","handleSetSortOrder","SortIcon","ContainerTitle","h2","ClosedTaskToggle","CategoryCard","TaskContainer","taskCategory","showClosed","setShowClosed","sortOrderFunction","openTasks","t","closedTasks","compareClosedOn","toggleClosedText","TaskCreatorCard","advanced","AdvancedRow","TaskCreator","setAdvanced","_useState11","_useState12","_useState13","_useState14","titleValid","setTitleValid","_useState15","_useState16","recurrenceValid","setRecurrenceValid","_useState17","_useState18","touched","setTouched","categoriesRegex","useMemo","flatMap","_category$rules","patterns","rules","rule","RegExp","pattern","o","handleSetRecurring","newRecurring","valid","currentTitle","matchedExpression","catEx","test","handleTitleChanged","submit","newDue","CategroyContainer","TaskList","cat","_useContext4","Navigate","replace","StyledRule","span","DeleteArea","CategoryRule","handleRemoval","RuleArea","CategoryEditor","resetEditedCategory","setName","setHidden","setRules","currentRule","setCurrentRule","handleAddRule","_unused","handleRemove","ruleToRemove","handleSave","categoryToSave","assembledCategory","VisibilityOffIcon","height","VisibilityIcon","Shadow","StyledOverlay","Overlay","isEdited","CategoryName","RuleContainer","StyledHiddenIcon","CategoryListEntry","id","handleEdit","Draggable","draggableId","index","provided","draggableProps","dragHandleProps","DragIndicatorIcon","CategoryList","editedCategory","DragDropContext","onDragEnd","result","destination","reorderedCategories","Array","from","_reorderedCategories$","splice","source","reorderedItem","Droppable","droppableId","droppableProps","placeholder","CategoryManager","setEditedCategory","join","ELEMENT_ID","firebaseUiDeletion","Promise","resolve","AuthenticationBox","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","uiConfig","firebaseAuth","uiCallback","unregisterAuthObserver","_createClass","_this2","require","firebaseui","firebaseUiWidget","AuthUI","getInstance","signInFlow","reset","userSignedIn","start","_this3","delete","this","Component","Login","loginConfig","signInOptions","EmailAuthProvider","PROVIDER_ID","signInSuccessUrl","App","BrowserRouter","Route","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6911b53.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\"\r\nimport { getDatabase } from \"firebase/database\"\r\n\r\nconst firebaseConfig = {\r\n\r\n  apiKey: \"AIzaSyBh36cGPXJH-cyb2giOsJet7VDEKZ3MVsU\",\r\n  authDomain: \"my-task-hub.firebaseapp.com\",\r\n  databaseURL: \"https://my-task-hub-default-rtdb.europe-west1.firebasedatabase.app\",\r\n  projectId: \"my-task-hub\",\r\n  storageBucket: \"my-task-hub.appspot.com\",\r\n  messagingSenderId: \"941408350272\",\r\n  appId: \"1:941408350272:web:a0f5bfc5afbcbbcb3defa5\",\r\n  measurementId: \"G-485HGNY5X9\"\r\n};\r\n\r\nexport const initializeFirebase = () => {\r\n\r\n  const app = initializeApp(firebaseConfig);\r\n  return getDatabase(app);  \r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { initializeFirebase } from \"../api/init\";\r\n\r\nconst DatabaseContext = React.createContext({\r\n  successIndicator: false,\r\n  errorList: [],\r\n  indicateSuccess: () => {},\r\n  addError: (message) => {},\r\n  clearErrorList: () => {},\r\n});\r\n\r\nexport const DatabaseContextPorvider = ({children}) => {\r\n\r\n  const [successIndicator, setSuccessIndicator] = useState(false);\r\n  const [errorList, setErrorList] = useState([])\r\n  const [ready, setReady] = useState(false);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      const database = initializeFirebase();\r\n      console.log(\"Initialize Firebase... done\")\r\n      if (database) {\r\n        setReady(true);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"initializind database failed\", error)\r\n    }\r\n  }, [])\r\n\r\n  const indicateSuccess = () => {\r\n    setSuccessIndicator(true);\r\n    setTimeout(() => setSuccessIndicator(false), 1000);\r\n  }\r\n\r\n  const addError = (message) => {\r\n    setErrorList([...errorList, message])\r\n  }\r\n\r\n  const clearErrorList = () => {\r\n    setErrorList([])\r\n  }\r\n\r\n  const value = {\r\n    successIndicator,\r\n    errorList,\r\n    indicateSuccess,\r\n    addError,\r\n    clearErrorList,\r\n    ready\r\n  }\r\n  \r\n  \r\n  return (\r\n    <DatabaseContext.Provider value={value}>{children}</DatabaseContext.Provider>\r\n  );\r\n}\r\n\r\nexport default DatabaseContext;","import React, { useState } from \"react\";\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport DatabaseContext from \"./DatabaseContext\";\r\nimport { useContext } from \"react\";\r\nimport { useUserActions } from \"../api/userActions\";\r\n\r\nconst AuthenticationContext = React.createContext({\r\n  uid: \"\",\r\n  displayName: \"\",\r\n  email: \"\",\r\n  isLoggedIn: () => Boolean,\r\n});\r\n\r\nexport const AuthenticationContextPorvider = ({ children }) => {\r\n  const [uid, setUid] = useState(\"\");\r\n  const [displayName, setDisplayName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const { ready } = useContext(DatabaseContext);\r\n  const { storeUser } = useUserActions();\r\n\r\n  const auth = ready && getAuth();\r\n  ready &&\r\n    onAuthStateChanged(auth, (user) => {\r\n      if (user) {\r\n        if (uid !== user.uid) {\r\n          storeUser(user.uid, user.displayName, user.email);\r\n        }\r\n        setUid(user.uid);\r\n        setDisplayName(user.displayName);\r\n        setEmail(user.email);\r\n      } else {\r\n        setUid(\"\");\r\n        setDisplayName(\"\");\r\n        setEmail(\"\");\r\n      }\r\n    });\r\n\r\n  const isLoggedIn = () => {\r\n    return !!uid;\r\n  };\r\n\r\n  const value = {\r\n    uid,\r\n    displayName,\r\n    email,\r\n    isLoggedIn,\r\n  };\r\n\r\n  return (\r\n    <AuthenticationContext.Provider value={value}>\r\n      {children}\r\n    </AuthenticationContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthenticationContext;\r\n","import { useContext } from \"react\";\r\nimport DatabaseContext from \"../state/DatabaseContext\";\r\nimport { getDatabase, get, ref, set } from \"firebase/database\";\r\n\r\nexport const useUserActions = () => {\r\n  const { addError, ready, indicateSuccess } = useContext(DatabaseContext);\r\n\r\n  const storeUser = (uid, displayName, mail) => {\r\n    if (!ready) {\r\n      addError(\"Database not ready to record user.\");\r\n      return;\r\n    }\r\n\r\n    const database = getDatabase();\r\n    const userRef = ref(database, `user/${uid}`);\r\n\r\n    get(userRef).then((snapshot) => {\r\n      const userObject = snapshot.exists() ? snapshot.val() : {};\r\n\r\n      const newUserObject = { ...userObject, mail, displayName };\r\n      set(userRef, newUserObject)\r\n        .then(indicateSuccess())\r\n        .catch((error) => addError(\"User update/creation failed: \" + error));\r\n    });\r\n  };\r\n\r\n  return {\r\n    storeUser,\r\n  };\r\n};\r\n","const TASKLIST_PATH = '/taskhub-fe'\r\nconst LOGIN_PATH = '/taskhub-fe/login'\r\nconst CATEGORIES_PATH = '/taskhub-fe/categories'\r\n\r\nexport const Routes = {\r\n  TASKLIST: TASKLIST_PATH,\r\n  LOGIN: LOGIN_PATH,\r\n  CATEGORIES: CATEGORIES_PATH,\r\n}","import React, { useCallback, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport DoneIcon from \"@mui/icons-material/Done\";\r\nimport LogoutIcon from \"@mui/icons-material/Logout\";\r\nimport AuthenticationContext from \"../state/AuthenticationContext\";\r\nimport DatabaseContext from \"../state/DatabaseContext\";\r\nimport \"firebase/compat/auth\";\r\nimport { getAuth, signOut } from \"firebase/auth\";\r\nimport { Routes } from \"./routes\";\r\n\r\nconst StyledHeader = styled.header`\r\n  height: 3.5rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background-color: #007799;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n  gap: 15px;\r\n  color: white;\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: white;\r\n    font-weight: bold;\r\n  }\r\n\r\n  a:hover,\r\n  a:active,\r\n  a.active {\r\n    color: #e0f5ff;\r\n  }\r\n`;\r\n\r\nconst PageTitle = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst ErrorList = styled.div`\r\n  background-color: #ee8888;\r\n  color: white;\r\n  padding: 10px 20px 10px;\r\n\r\n  li {\r\n    list-style-type: none;\r\n  }\r\n`;\r\n\r\nconst StyledLogout = styled(LogoutIcon)`\r\n  font-size: 1.4rem;\r\n`\r\n\r\nconst Header = ({ page }) => {\r\n  const { successIndicator, errorList, addError } = useContext(DatabaseContext);\r\n  const { displayName, isLoggedIn } = useContext(AuthenticationContext);\r\n\r\n  const auth = getAuth();\r\n\r\n  const handleLogout = useCallback(() => {\r\n    signOut(auth).catch((e) => addError(\"Sign out failed: \", e));\r\n  }, [auth, addError]);\r\n\r\n  return (\r\n    <>\r\n      <StyledHeader>\r\n        <PageTitle>\r\n          <a href=\"/tasks\">\r\n            📝 TaskHub {\">>\"} {page}\r\n          </a>\r\n        </PageTitle>\r\n        {successIndicator && <DoneIcon />}\r\n        {isLoggedIn() && (\r\n          <>\r\n            <Link to={Routes.CATEGORIES}>Categories</Link>\r\n            {displayName}\r\n            <a href={Routes.TASKLIST} onClick={handleLogout}>\r\n              <StyledLogout />\r\n            </a>\r\n          </>\r\n        )}\r\n      </StyledHeader>\r\n      {errorList.length > 0 && (\r\n        <ErrorList>\r\n          {errorList.map((error) => (\r\n            <li key={error}>{error}</li>\r\n          ))}\r\n        </ErrorList>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst StyledCard = styled.div`\r\n    padding: 1rem;\r\n    border-radius: 5px;\r\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst Card = ({style, className, innerRef, children, ...remaining}) => {\r\n  return <StyledCard style={style} className={className} ref={innerRef} {...remaining}>{children}</StyledCard>;\r\n};\r\n\r\nexport default Card;","import styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  display: inline-block;\r\n  color: #007799;\r\n  background-color: #FFFFFF;\r\n  font-size: 1em;\r\n  padding: 0.25em 0.5em;\r\n  border: 2px solid #007799;\r\n  border-radius: 3px;\r\n  display: block;\r\n\r\n  ${({ primary }) => primary && `\r\n    background: #007799;\r\n    color: #FFFFFF;\r\n  `}\r\n`;\r\n\r\nexport default Button","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst StyledEntry = styled.div`\r\n  padding: 0.3rem;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\r\n  margin-top: 10px;\r\n  opacity: 1;\r\n\r\n  transform: translateY(0%);\r\n  transition: opacity 0.5s, transform 0.5s ease-in;\r\n\r\n  ${({ overdue }) => overdue && `\r\n    background: #FFDDDD;\r\n  `}\r\n\r\n  ${({ editMode }) => editMode && `\r\n    background: #E0F5FF;\r\n    padding-bottom: 0.6rem;\r\n    position: relative;\r\n    z-index: 99;\r\n  `}\r\n\r\n  ${({ done }) => done && `\r\n    color: grey;\r\n  `}\r\n\r\n  ${({ remove }) => remove && `\r\n    opacity: 0;\r\n    transform: translateY(100%);\r\n  `}\r\n\r\n  ${({ remove, done }) => remove && done && `\r\n    transform: translateY(-100%);\r\n  `}\r\n`;\r\n\r\nconst ListEntry = ({overdue, editMode, children, done, remove}) => {\r\n  return <StyledEntry overdue={overdue} editMode={editMode} done={done} remove={remove}>{children}</StyledEntry>;\r\n};\r\n\r\nexport default ListEntry;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledInput = styled.input`\r\n  width: 100%;\r\n  height: 24px;\r\n  border: 2px solid #007799;\r\n  border-radius: 3px;\r\n\r\n  :focus {\r\n    border: 2px solid #007799;\r\n  }\r\n\r\n  ${({ validationError }) => validationError && `\r\n    border: 2px solid #AA6666;\r\n    background-color: #FFDDDD;\r\n  `}\r\n`\r\n\r\nconst Input = ({onChange, value, validationError}) => {\r\n  return <StyledInput onChange={onChange} value={value} validationError={validationError}/>\r\n}\r\n\r\nexport default Input","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst FormFieldContainer = styled.div`\r\n  flex-grow: 1;\r\n  padding-right: 10px;\r\n`\r\n\r\nconst FormFieldDescription = styled.div`\r\n  font-size: 9pt;\r\n  color: #003333;\r\n`\r\n\r\nconst InputWrapper = ({description, children}) => {\r\n  return (\r\n    <FormFieldContainer>\r\n      <FormFieldDescription>{description}</FormFieldDescription>\r\n      {children}\r\n    </FormFieldContainer>)\r\n}\r\n\r\nexport default InputWrapper;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledSelect = styled.select`\r\n  width: 100%;\r\n  height: 30px;\r\n  border: 2px solid #007799;\r\n  border-radius: 3px;\r\n  background-color: white;\r\n\r\n  :disabled {\r\n    background-color: #EEEEEE;\r\n  }\r\n\r\n  :focus {\r\n    border: 2px solid #007799;\r\n  }\r\n`;\r\n\r\nconst Dropdown = ({ entries, onChange, selectedKey, disabled }) => {\r\n  return (\r\n    <StyledSelect onChange={onChange} value={selectedKey} disabled={disabled}>\r\n      {entries.map((entry) => (\r\n        <option key={entry.key || \"unknown\"} value={entry.key}>{entry.name}</option>\r\n      ))}\r\n    </StyledSelect>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import styled from \"styled-components\"\r\nimport ReactDatePicker from \"react-datepicker\"\r\n\r\nconst DatePicker = styled(ReactDatePicker)`\r\n  width: 100%;\r\n  height: 24px;\r\n  border: 2px solid #007799;\r\n  border-radius: 3px;\r\n\r\n  :focus {\r\n    border: 2px solid #007799;\r\n  }\r\n\r\n  ${({ validationError }) => validationError && `\r\n    border: 2px solid #AA6666;\r\n    background-color: #FFDDDD;\r\n  `}\r\n`;\r\n\r\nexport default DatePicker;","export const Priority = {\r\n  LOW: 'Low',\r\n  MEDIUM: 'Medium',\r\n  HIGH: 'High',\r\n}\r\n\r\nexport const Priorities = [\r\n  Priority.LOW,\r\n  Priority.MEDIUM,\r\n  Priority.HIGH,\r\n]\r\n\r\nexport const Frequency = {\r\n  DAILY: \"DAILY\",\r\n  WEEKLY: \"WEEKLY\",\r\n  MONTHLY: \"MONTHLY\",\r\n  YEARLY: \"YEARLY\",\r\n}\r\n\r\nexport const Frequencies = [\r\n  {name: \"Daily\", key: Frequency.DAILY},\r\n  {name: \"Weely\", key: Frequency.WEEKLY},\r\n  {name: \"Monthly\", key: Frequency.MONTHLY},\r\n  {name: \"Yearly\", key: Frequency.YEARLY},\r\n]\r\n\r\nexport const RecurrenceMode = {\r\n  AFTER_DUE: \"AFTER_DUE\",\r\n  AFTER_COMPLETE: \"AFTER_COMPLETE\",\r\n}\r\n\r\nexport const RecurrenceModes = [\r\n  {name: \"after due\", key: RecurrenceMode.AFTER_DUE},\r\n  {name: \"after complete\", key: RecurrenceMode.AFTER_COMPLETE},\r\n]\r\n\r\nexport const DEFAULT_CATEGORY = \"Uncategorized\";\r\n\r\n","import { set, ref, getDatabase, get } from \"firebase/database\";\r\nimport { useContext, useState } from \"react\";\r\nimport DatabaseContext from \"../state/DatabaseContext\";\r\n\r\nexport const useTaskActions = () => {\r\n  const { addError, indicateSuccess, ready } = useContext(DatabaseContext);\r\n  const [alreadyRetrieved, setAlreadyRetrieved] = useState(false);\r\n\r\n  const listenToTaskList = (successAction, uid) => {\r\n    if (!ready) {\r\n      addError(\"Getting taks failed: Database not ready.\");\r\n      return;\r\n    }\r\n\r\n    if (alreadyRetrieved) {\r\n      addError(\"WARN: Prevented from listening to tasklist multiple times.\");\r\n      return;\r\n    }\r\n    setAlreadyRetrieved(true);\r\n\r\n    const database = getDatabase();\r\n    const taskListRef = ref(database, \"tasks/\" + uid);\r\n\r\n    get(taskListRef)\r\n      .then((snapshot) => {\r\n        if (!snapshot.exists()) {\r\n          console.warn(\"No tasks were obtained by firebase.\");\r\n          return;\r\n        } \r\n\r\n        const tasklist = Object.values(snapshot.val());\r\n        const tasklist_1 = tasklist.map(task => ({\r\n          ...task, \r\n          due: task.due && new Date(task.due), \r\n          closedOn: task.closedOn && new Date(task.closedOn)}))\r\n          \r\n        successAction(tasklist_1);\r\n        indicateSuccess()\r\n      },\r\n      (error) => addError(\"Getting tasks failed: \" + error)\r\n    );\r\n  };\r\n\r\n  const updateTask = async (task, uid) => {\r\n    if (!ready) {\r\n      addError(\"Task update/creation failed: Database not ready.\");\r\n      return;\r\n    }\r\n\r\n    const taskToPersist = { \r\n      ...task, \r\n      due: task.due && task.due.getTime(), \r\n      closedOn: task.closedOn && task.closedOn.getTime() };\r\n\r\n    Object.keys(taskToPersist).forEach(\r\n      (key) => taskToPersist[key] === undefined && delete taskToPersist[key]\r\n    );\r\n\r\n    const database = getDatabase();\r\n    const objectReference = ref(database, `tasks/${uid}/${taskToPersist.key}`);\r\n    set(objectReference, taskToPersist)\r\n      .then(indicateSuccess())\r\n      .catch((error) => addError(\"Task update/creation failed: \" + error));\r\n  };\r\n\r\n  const removeTask = async (taskKey, uid) => {\r\n\r\n    const database = getDatabase();\r\n    const objectReference = ref(database, `tasks/${uid}/${taskKey}`);\r\n    set(objectReference, null)\r\n      .then(indicateSuccess())\r\n      .catch((error) => addError(\"Task removal failed: \" + error));\r\n  }\r\n\r\n  return {\r\n    listenToTaskList,\r\n    updateTask,\r\n    removeTask,\r\n  };\r\n\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useTaskActions } from \"../api/taskActions\";\r\nimport AuthenticationContext from \"./AuthenticationContext\";\r\nimport { Frequency, RecurrenceMode } from \"./constants\";\r\n\r\nconst TaskContext = React.createContext({\r\n  tasks: [],\r\n  addTask: (task) => {},\r\n  removeTask: (taskKey) => {},\r\n  toggleResolved: (taskKey) => {},\r\n  modifyTask: (task) => {},\r\n  unassignAllTasksFromCategory: (key) => {},\r\n});\r\n\r\nexport const TaskContextProvider = (props) => {\r\n  const { uid } = useContext(AuthenticationContext);\r\n  const [tasks, setTasks] = useState([]);\r\n  const { updateTask, removeTask: deleteTask } = useTaskActions();\r\n\r\n  const addTask = (newTask) => {\r\n    const newTaskWithKey = { ...newTask, key: uuidv4() };\r\n    setTasks([...tasks, newTaskWithKey]);\r\n    updateTask(newTaskWithKey, uid);\r\n  };\r\n\r\n  const removeTask = (taskKey) => {\r\n    setTasks(tasks.filter((task) => task.key !== taskKey));\r\n    deleteTask(taskKey, uid);\r\n  };\r\n\r\n  const toggleResolved = (taskKey) => {\r\n    const taskToUpdate = tasks.find((task) => task.key === taskKey);\r\n    taskToUpdate.done = !taskToUpdate.done;\r\n\r\n    taskToUpdate.closedOn = taskToUpdate.done ? new Date() : null;\r\n\r\n    setTasks(tasks.map((task) => (task.key === taskKey ? taskToUpdate : task)));\r\n    updateTask(taskToUpdate, uid);\r\n\r\n    const recurrenceMode = taskToUpdate.recurrenceMode;\r\n    if (recurrenceMode && taskToUpdate.done) {\r\n      const newDueDate =\r\n        taskToUpdate.recurrenceMode === RecurrenceMode.AFTER_COMPLETE\r\n          ? new Date()\r\n          : new Date(taskToUpdate.due.getTime());\r\n\r\n      const frequency = taskToUpdate.recurrenceFrequency;\r\n      if (frequency === Frequency.DAILY) {\r\n        newDueDate.setDate(newDueDate.getDate() + 1);\r\n      } else if (frequency === Frequency.WEEKLY) {\r\n        newDueDate.setDate(newDueDate.getDate() + 7);\r\n      } else if (frequency === Frequency.MONTHLY) {\r\n        newDueDate.setMonth(newDueDate.getMonth() + 1);\r\n      } else if (frequency === Frequency.YEARLY) {\r\n        newDueDate.setFullYear(newDueDate.getFullYear() + 1);\r\n      }\r\n\r\n      const newTask = {\r\n        ...taskToUpdate,\r\n        due: newDueDate,\r\n        done: false,\r\n        closedOn: undefined,\r\n      };\r\n      \r\n      addTask(newTask);\r\n    }\r\n  };\r\n\r\n  const modifyTask = (updatedTask) => {\r\n    setTasks(\r\n      tasks.map((task) => (task.key !== updatedTask.key ? task : updatedTask))\r\n    );\r\n    updateTask(updatedTask, uid);\r\n  };\r\n\r\n  const unassignAllTasksFromCategory = (key) => {\r\n    tasks\r\n      .filter((task) => task.category === key)\r\n      .forEach((task) => modifyTask({ ...task, category: undefined }));\r\n  };\r\n\r\n  const value = {\r\n    tasks,\r\n    setTasks,\r\n    addTask,\r\n    removeTask,\r\n    toggleResolved,\r\n    modifyTask,\r\n    unassignAllTasksFromCategory,\r\n  };\r\n\r\n  return (\r\n    <TaskContext.Provider value={value}>{props.children}</TaskContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TaskContext;\r\n","import React, {useContext, useEffect, useState} from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport AuthenticationContext from \"./AuthenticationContext\";\r\nimport { useCategoryActions } from \"../api/categoryActions\";\r\nimport TaskContext from \"./TaskContext\";\r\n\r\nconst CategoryContext = React.createContext({\r\n  categories: [],\r\n  saveCategory: (category) => {},\r\n  removeCategory: (category) => {},\r\n  updateOrder: (categories) => {},\r\n});\r\n\r\nexport const CategoryContextProvicer = (props) => {\r\n\r\n  const { uid, addError } = useContext(AuthenticationContext)  \r\n  const { unassignAllTasksFromCategory } = useContext(TaskContext);\r\n  const [categories, setCategories] = useState([]);\r\n  const {fetchCategories, updateCategory, deleteCategory} = useCategoryActions();\r\n\r\n  useEffect(() => {\r\n    fetchCategories(setCategories, uid);\r\n    // eslint-disable-next-line\r\n  }, [uid])\r\n\r\n  const saveCategory = (newCategory) => {\r\n\r\n    if (!newCategory.name) {\r\n      addError(\"Category name cannot be empty\")\r\n      return;\r\n    }\r\n\r\n    const newCategoryWithKey = { key: uuidv4(), ...newCategory };\r\n    const filteredCategories = categories.filter((category) => category.key !== newCategoryWithKey.key);\r\n    setCategories([...filteredCategories, newCategoryWithKey]);\r\n    updateCategory(newCategoryWithKey, uid);\r\n  }\r\n    \r\n  const removeCategory = (key) => {\r\n\r\n    unassignAllTasksFromCategory(key);\r\n    setCategories(categories.filter((category) => category.key !== key));\r\n    deleteCategory(key, uid)\r\n  }\r\n\r\n  const updateOrder = (reOrderedCategories) => {\r\n    \r\n    for (let i=0; i<reOrderedCategories.length; i++) {\r\n      const targetCategory = categories.find(c => c.key === reOrderedCategories[i].key);\r\n      if (targetCategory.order !== i) {\r\n        updateCategory({...targetCategory, order: i}, uid);\r\n        targetCategory.order = i;\r\n      }\r\n    }\r\n  }\r\n\r\n  const value = {\r\n    categories,\r\n    saveCategory,\r\n    removeCategory,\r\n    updateOrder,\r\n  };\r\n\r\n  return (\r\n    <CategoryContext.Provider value={value}>{props.children}</CategoryContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CategoryContext;","import { set, ref, getDatabase, get } from \"firebase/database\";\r\nimport { useContext } from \"react\";\r\nimport DatabaseContext from \"../state/DatabaseContext\";\r\nimport { useCallback } from \"react\";\r\n\r\nexport const useCategoryActions = () => {\r\n  const { addError, indicateSuccess, ready } = useContext(DatabaseContext);\r\n\r\n  const fetchCategories = useCallback((successAction, uid) => {\r\n\r\n    if (!ready || !uid) {\r\n      console.warn(\"Firebase not ready.\")\r\n      return;\r\n    }\r\n\r\n    const database = getDatabase();\r\n    const categoriesRef = ref(database, \"categories/\" + uid);\r\n\r\n    get(categoriesRef)\r\n      .then((snapshot) => {\r\n        if (!snapshot.exists()) {\r\n          console.warn(\"No categories were obtained by firebase.\");\r\n          return;\r\n        } \r\n\r\n        const categories = Object.values(snapshot.val())\r\n          .map(task => ({...task, due: task.due && new Date(task.due)}));\r\n        successAction(categories);\r\n        indicateSuccess()}\r\n      ).catch((error) => {\r\n        console.error(error);\r\n        addError(\"Getting categories failed: \" + error)\r\n      });\r\n    \r\n  }, [addError, indicateSuccess, ready]);\r\n\r\n  const updateCategory = async (category, uid) => {\r\n\r\n    const catetoryToPersist = { ...category, due: category.due?.getTime() };\r\n\r\n    // do we need this ?\r\n    Object.keys(catetoryToPersist).forEach(\r\n      (key) => catetoryToPersist[key] === undefined && delete catetoryToPersist[key]\r\n    );\r\n\r\n    const database = getDatabase();\r\n    const objectReference = ref(database, `categories/${uid}/${catetoryToPersist.key}`);\r\n    set(objectReference, catetoryToPersist)\r\n      .then(indicateSuccess())\r\n      .catch((error) => addError(\"Category update/creation failed: \" + error));\r\n  };\r\n\r\n  const deleteCategory = async (categoryKey, uid) => {\r\n\r\n    const database = getDatabase();\r\n    const objectReference = ref(database, `categories/${uid}/${categoryKey}`);\r\n    set(objectReference, null)\r\n      .then(indicateSuccess())\r\n      .catch((error) => addError(\"Category removal failed: \" + error));\r\n  }\r\n\r\n  return {\r\n    fetchCategories,\r\n    updateCategory,\r\n    deleteCategory,\r\n  };\r\n\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport InputWrapper from \"../../components/InputWrapper\";\r\nimport Dropdown from \"../../components/Dropdown\";\r\nimport DatePicker from \"../../components/DatePicker\";\r\nimport {\r\n  Priorities,\r\n  Frequencies,\r\n  RecurrenceModes,\r\n  RecurrenceMode,\r\n  Frequency,\r\n  DEFAULT_CATEGORY,\r\n} from \"../../state/constants\";\r\nimport { useContext } from \"react\";\r\nimport CategoryContext from \"../../state/CategoryContext\";\r\n\r\nconst Row = styled.div`\r\n  margin-top: 7px;\r\n  display: flex;\r\n  gap: 10px;\r\n  width: 100%;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst RecurringSection = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  min-width: 300px;\r\n`;\r\n\r\nconst Checkbox = styled.input`\r\n  height: 17px;\r\n`;\r\n\r\nconst AdvancedTaskFields = ({\r\n  category,\r\n  setCategory,\r\n  due,\r\n  setDue,\r\n  priority,\r\n  setPriority,\r\n  recurring,\r\n  setRecurring,\r\n}) => {\r\n  const { categories } = useContext(CategoryContext);\r\n  const sortedCategories = categories\r\n    ?.sort((cat1, cat2) => cat1.name.toUpperCase() > cat2.name.toUpperCase())\r\n    ?.filter((category) => !category.hidden);\r\n  const categoriesWithUnknown = [\r\n    { key: undefined, name: DEFAULT_CATEGORY },\r\n    ...sortedCategories,\r\n  ];\r\n\r\n  const currentDue = due instanceof Date ? due : undefined;\r\n\r\n  const [isRecurring, setIsRecurring] = useState(!!recurring.frequency);\r\n  const toggleRecurring = () => {\r\n    const newRecurring = isRecurring\r\n      ? {}\r\n      : { mode: RecurrenceMode.AFTER_COMPLETE, frequency: Frequency.WEEKLY };\r\n    setRecurring(newRecurring);\r\n    setIsRecurring(!isRecurring);\r\n  };\r\n\r\n  const priorityEntries = Priorities.map((priority) => {\r\n    return { key: priority, name: priority };\r\n  });\r\n\r\n  return (\r\n    <Row>\r\n      <InputWrapper description={\"Category\"}>\r\n        <Dropdown\r\n          entries={categoriesWithUnknown}\r\n          selectedKey={category || DEFAULT_CATEGORY}\r\n          onChange={(event) =>\r\n            setCategory(event.target.options[event.target.selectedIndex].value)\r\n          }\r\n        />\r\n      </InputWrapper>\r\n      <InputWrapper description={\"Due\"}>\r\n        <DatePicker\r\n          selected={currentDue}\r\n          onChange={(date) => setDue(date)}\r\n          dateFormat=\"dd.MM.yyyy\"\r\n          validationError={recurring.invalid}\r\n        />\r\n      </InputWrapper>\r\n      <InputWrapper name={\"priority\"} description={\"Priority\"}>\r\n        <Dropdown\r\n          entries={priorityEntries}\r\n          selectedKey={priority}\r\n          onChange={(event) =>\r\n            setPriority(event.target.options[event.target.selectedIndex].value)\r\n          }\r\n        />\r\n      </InputWrapper>\r\n      <>\r\n        <InputWrapper description={\"Recurring\"}>\r\n          <RecurringSection>\r\n            <Checkbox\r\n              type=\"checkbox\"\r\n              onChange={() => toggleRecurring()}\r\n              checked={isRecurring}\r\n            />\r\n            <Dropdown\r\n              disabled={!isRecurring}\r\n              entries={isRecurring ? Frequencies : []}\r\n              selectedKey={recurring.frequency}\r\n              onChange={(event) =>\r\n                setRecurring({\r\n                  ...recurring,\r\n                  frequency:\r\n                    event.target.options[event.target.selectedIndex].value,\r\n                })\r\n              }\r\n            />\r\n            <Dropdown\r\n              disabled={!isRecurring}\r\n              entries={isRecurring ? RecurrenceModes : []}\r\n              selectedKey={recurring.mode}\r\n              onChange={(event) =>\r\n                setRecurring({\r\n                  ...recurring,\r\n                  mode: event.target.options[event.target.selectedIndex].value,\r\n                })\r\n              }\r\n            />\r\n          </RecurringSection>\r\n        </InputWrapper>\r\n      </>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default AdvancedTaskFields;\r\n","import React, { useContext, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Input from \"../../components/Input\";\r\nimport InputWrapper from \"../../components/InputWrapper\";\r\nimport Button from \"../../components/Button\";\r\nimport AdvancedTaskFields from \"../task-creation/AdvancedTaskFields\";\r\nimport TaskContext from \"../../state/TaskContext\";\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n`;\r\n\r\nconst EditTask = ({ task, toggleEditMode }) => {\r\n  \r\n  \r\n  const [title, setTitle] = useState(task.title);\r\n  const [category, setCategory] = useState(task.category);\r\n  const [due, setDue] = useState(task.due)\r\n  const [priority, setPriority] = useState(task.priority)\r\n  const [recurring, setRecurring] = useState({mode: task.recurrenceMode, frequency: task.recurrenceFrequency})\r\n\r\n  const {removeTask, modifyTask} = useContext(TaskContext)\r\n\r\n  const submit = () => {\r\n    modifyTask({...task, title, category, due, priority, recurrenceMode: recurring.mode, recurrenceFrequency: recurring.frequency})\r\n    toggleEditMode();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <InputWrapper description={\"Task\"}>\r\n          <Input\r\n            value={title}\r\n            name={\"title\"}\r\n            onChange={(event) => setTitle(event.target.value)}\r\n          />\r\n        </InputWrapper>\r\n        <StyledButton onClick={() => submit()} primary>\r\n          Save\r\n        </StyledButton>\r\n        <StyledButton onClick={() => removeTask(task.key)}>Delete</StyledButton>\r\n      </Row>\r\n      <AdvancedTaskFields\r\n        category={category}\r\n        setCategory={setCategory}\r\n        due={due}\r\n        setDue={setDue}\r\n        priority={priority}\r\n        setPriority={setPriority}\r\n        recurring={recurring}\r\n        setRecurring={setRecurring}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditTask;\r\n","import React, { useCallback, useContext, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport Button from \"../../components/Button\";\r\nimport ListEntry from \"../../components/ListEntry\";\r\nimport EditTask from \"./EditTask\";\r\nimport { Priority } from \"../../state/constants\";\r\nimport TaskContext from \"../../state/TaskContext\";\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Checkbox = styled.input`\r\n  height: 17px;\r\n`;\r\n\r\nconst StyledDescription = styled.div`\r\n  flex-grow: 1;\r\n\r\n  ${({ done }) =>\r\n    done &&\r\n    `\r\n    text-decoration: line-through;\r\n  `}\r\n`;\r\n\r\nconst Importance = styled.div`\r\n  font-weight: bold;\r\n\r\n  ${({ priority }) =>\r\n    priority === Priority.HIGH &&\r\n    `\r\n    color: red;\r\n  `}\r\n\r\n  ${({ priority }) =>\r\n    priority === Priority.MEDIUM &&\r\n    `\r\n    color: orange;\r\n  `}\r\n\r\n  ${({ priority }) =>\r\n    priority === Priority.LOW &&\r\n    `\r\n    color: green;\r\n  `}\r\n`;\r\n\r\nconst formatDate = (date) => {\r\n  if (date instanceof Date) {\r\n    const day = date.getDate()\r\n    const month = date.getMonth()+1\r\n    const year = date.getFullYear()\r\n    return `${day}.${month}.${year}`\r\n  }\r\n}\r\n\r\nconst TaskEntry = ({ task }) => {\r\n  const { toggleResolved } = useContext(TaskContext);\r\n  const [remove, setRemove] = useState(false);\r\n\r\n  const currentDate = new Date();\r\n  const overdue =\r\n    task.due && typeof task.due.getTime === \"function\"\r\n      ? currentDate > task.due.getTime() && !task.done\r\n      : false;\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n  const toggleEditMode = () => setEditMode(!editMode);\r\n\r\n  const formattedDate = task.done ? formatDate(task.closedOn) : formatDate(task.due)\r\n\r\n  const handleToggle = useCallback(() => {\r\n    setTimeout(() => toggleResolved(task.key), 500);\r\n    setRemove(true);\r\n  }, [setRemove, task.key, toggleResolved])\r\n\r\n  return (\r\n    <ListEntry overdue={overdue} editMode={editMode} done={task.done} remove={remove}>\r\n      {!editMode ? (\r\n        <Row>\r\n          <Checkbox type=\"checkbox\" onChange={() => handleToggle()} checked={task.done || remove} />\r\n          <Importance priority={task.priority}>!</Importance>\r\n          <StyledDescription done={task.done}>{task.title} {formattedDate && `(${formattedDate})`}</StyledDescription>\r\n          <Button onClick={() => toggleEditMode()}>\r\n            <EditIcon fontSize=\"small\" />\r\n          </Button>\r\n        </Row>\r\n      ) : (\r\n        <EditTask task={task} toggleEditMode={toggleEditMode} />\r\n      )}\r\n    </ListEntry>\r\n  );\r\n};\r\n\r\nexport default TaskEntry;\r\n","import { Priority } from \"../../state/constants\";\r\n\r\nexport const SortOrder = {\r\n  ALPHABETICAL: \"Alphabetical\",\r\n  DUE_UNKNOWN_FIRST: \"Due (unknown first)\",\r\n  DUE_UNKNOWN_LAST: \"Due (unknown last)\",\r\n  PRIORITY: \"Priority\",\r\n}\r\n\r\nconst alphabetical = (a, b) => {\r\n    const aUpper = a.title?.toUpperCase();\r\n    const bUpper = b.title?.toUpperCase();\r\n    if (aUpper > bUpper) return 1;\r\n    if (aUpper < bUpper) return -1;\r\n    return 0;\r\n}\r\n\r\nconst unknownFirst = (a, b) => {\r\n    if (!a.due && !b.due) return a.title > b.title;\r\n    if (!a.due) return -1;\r\n    if (!b.due) return 1;\r\n    return a.due - b.due;\r\n}\r\n\r\nconst unknownLast = (a, b) => {\r\n    if (!a.due && !b.due) return a.title > b.title;\r\n    if (!a.due) return 1;\r\n    if (!b.due) return -1;\r\n    return a.due - b.due;\r\n}\r\n\r\nconst priority = (a, b) => {\r\n    if (a.priority === b.priority) return unknownLast(a, b);\r\n    if (a.priority === Priority.HIGH) return -1;\r\n    if (a.priority === Priority.LOW) return 1;\r\n    if (b.priority === Priority.HIGH) return 1;\r\n    if (b.priority === Priority.LOW) return -1;\r\n}\r\n\r\nexport const compareClosedOn = (a, b) => {\r\n    if (a.closedOn === b.closedOn) return 0;\r\n    if (!a.closedOn) return 1;\r\n    if (!b.closedOn) return -1;\r\n    return b.closedOn - a.closedOn;\r\n}\r\n\r\nexport const SortOrderFunctions = {\r\n    [SortOrder.ALPHABETICAL]: alphabetical,\r\n    [SortOrder.DUE_UNKNOWN_FIRST]: unknownFirst,\r\n    [SortOrder.DUE_UNKNOWN_LAST]: unknownLast,\r\n    [SortOrder.PRIORITY]: priority,\r\n}","import { useCallback, useState } from \"react\";\r\nimport styled from \"styled-components\"\r\nimport { SortOrder } from \"./sortOrder\";\r\nimport SortIcon from '@mui/icons-material/Sort';\r\n\r\nconst StyledOrderDropdown = styled.div`\r\n  display: inline-block;\r\n  overflow: hidden;\r\n  font-size: smaller;\r\n  vertical-align: bottom;\r\n  color: grey;\r\n`\r\n\r\nconst StyledSortOrderContent = styled.div`\r\n  transition:visibility 0.2s linear,opacity 0.2s linear;\r\n  display: block;\r\n  position: absolute;\r\n  background-color: #FFFFFF;\r\n  border-style: solid;\r\n  border-color: #BBBBBB;\r\n  border-radius: 3px;\r\n  border-width: 2px;\r\n  min-width: 160px;\r\n  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\r\n  z-index: 1;\r\n\r\n  ${({ showDropdown }) => showDropdown ? `opacity: 100;` : `opacity: 0; visibility:hidden`}\r\n`\r\n\r\nconst DropdownEntry = styled.div`\r\n  transition: all 0.1s linear;\r\n  padding: 5px;\r\n  ${({ selected }) => selected && `\r\n    background: #E0F5FF;\r\n  `}\r\n`;\r\n\r\n\r\n\r\nconst OrderDropdown = ({setSortOrder, sortOrder}) => {\r\n\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n\r\n  const handleSetSortOrder = useCallback((sortOrder) => {\r\n    setShowDropdown(false);\r\n    setSortOrder(sortOrder)\r\n  }, [setShowDropdown, setSortOrder])\r\n\r\n  return  (\r\n    <StyledOrderDropdown>\r\n      <SortIcon onClick={() => setShowDropdown(!showDropdown)} fontSize=\"small\" />\r\n      <StyledSortOrderContent showDropdown={showDropdown}>\r\n        {Object.values(SortOrder).map((order) => \r\n          <DropdownEntry key={order} selected={order === sortOrder} onClick={() => handleSetSortOrder(order)}>\r\n            {order}\r\n          </DropdownEntry>\r\n        )}\r\n      </StyledSortOrderContent>\r\n    </StyledOrderDropdown>\r\n  );\r\n}\r\n\r\nexport default OrderDropdown;","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Card from \"../../components/Card\";\r\nimport TaskEntry from \"./TaskEntry\";\r\nimport OrderDropdown from \"./OrderDropdown\";\r\nimport { SortOrder, SortOrderFunctions, compareClosedOn } from \"./sortOrder\";\r\n\r\nconst ContainerTitle = styled.h2`\r\n  font-size: 14pt;\r\n`\r\n\r\nconst ClosedTaskToggle = styled.div`\r\n  margin-top: 10px;\r\n  color: #007799;\r\n`\r\n\r\nconst CategoryCard = styled(Card)`\r\n  width: 400px;\r\n  flex-grow: 1;\r\n`\r\n\r\nconst TaskContainer = ({ taskCategory, tasks }) => {\r\n  const [sortOrder, setSortOrder] = useState(SortOrder.DUE_UNKNOWN_LAST);\r\n  const [showClosed, setShowClosed] = useState(false);\r\n  const sortOrderFunction = SortOrderFunctions[sortOrder];\r\n\r\n  const openTasks = tasks\r\n    .filter(t => !t.done)\r\n    .sort((a, b) => sortOrderFunction(a, b));\r\n  const closedTasks = tasks\r\n    .filter(t => t.done)\r\n    .sort((a, b) => compareClosedOn(a, b));\r\n\r\n  const toggleClosedText = showClosed\r\n    ? \"- Hide closed tasks\"\r\n    : \"+ Show closed tasks\";\r\n\r\n  return (\r\n    <CategoryCard>\r\n      <ContainerTitle>\r\n        <OrderDropdown setSortOrder={setSortOrder} sortOrder={sortOrder} />{\" \"}\r\n        {taskCategory || \"Uncategorized\"}\r\n      </ContainerTitle>\r\n      {openTasks.length > 0\r\n        ? openTasks.map((task) => <TaskEntry task={task} key={task.key} />)\r\n        : \"Yay, no tasks\"}\r\n      {closedTasks.length > 0 && (\r\n        <>\r\n          <ClosedTaskToggle onClick={() => setShowClosed(!showClosed)}>\r\n            {toggleClosedText}\r\n          </ClosedTaskToggle>\r\n          {showClosed &&\r\n            closedTasks.map((task) => <TaskEntry task={task} key={task.key} />)}\r\n        </>\r\n      )}\r\n    </CategoryCard>\r\n  );\r\n};\r\n\r\nexport default TaskContainer;\r\n","import React, { useContext, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport Button from \"../../components/Button\";\r\nimport Input from \"../../components/Input\";\r\nimport Card from \"../../components/Card\";\r\nimport InputWrapper from \"../../components/InputWrapper\";\r\nimport AdvancedTaskFields from \"./AdvancedTaskFields\";\r\nimport { Priority, RecurrenceMode } from \"../../state/constants\";\r\nimport TaskContext from \"../../state/TaskContext\";\r\nimport CategoryContext from \"../../state/CategoryContext\";\r\n\r\nconst TaskCreatorCard = styled(Card)`\r\n  margin-left: 1rem;\r\n  margin-right: 1rem;\r\n  margin-bottom: 0px;\r\n  background-color: #e0f5ff;\r\n  max-height: 50px;\r\n  transition: max-height 0.3s linear;\r\n  height: fit-content;\r\n  overflow: hidden;\r\n\r\n  ${({ advanced }) => (advanced ? `max-height: 200px;` : `max-height: 50px;`)}\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst AdvancedRow = styled(Row)`\r\n  transition: opacity 0.3s linear;\r\n  ${({ advanced }) => (advanced ? `opacity: 1;` : `opacity: 0;`)}\r\n`;\r\n\r\nconst TaskCreator = () => {\r\n  const [advanced, setAdvanced] = useState(() => false);\r\n\r\n  const { addTask } = useContext(TaskContext);\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [category, setCategory] = useState(undefined);\r\n  const [priority, setPriority] = useState(Priority.MEDIUM);\r\n  const [due, setDue] = useState(undefined);\r\n  const [recurring, setRecurring] = useState({});\r\n  const [titleValid, setTitleValid] = useState(false);\r\n  const [recurrenceValid, setRecurrenceValid] = useState(true);\r\n  const [touched, setTouched] = useState(false);\r\n\r\n  const { categories } = useContext(CategoryContext);\r\n  const categoriesRegex = useMemo(\r\n    () =>\r\n      categories\r\n        .flatMap((category) => {\r\n          const patterns = category.rules?.map((rule) => new RegExp(rule));\r\n          return patterns?.map((pattern) => {\r\n            return { pattern, category: category.key };\r\n          });\r\n        })\r\n        .filter((o) => !!o),\r\n    [categories]\r\n  );\r\n\r\n  const handleSetRecurring = (newRecurring) => {\r\n    const valid = newRecurring.mode !== RecurrenceMode.AFTER_DUE || !!due;\r\n    setRecurrenceValid(valid);\r\n    setRecurring({ ...newRecurring, invalid: !valid });\r\n  };\r\n\r\n  const handleSetDue = (newDue) => {\r\n    const valid = recurring.mode !== RecurrenceMode.AFTER_DUE || !!newDue;\r\n    setRecurrenceValid(valid);\r\n    setDue(newDue);\r\n    setRecurring({ ...recurring, invalid: !valid });\r\n  };\r\n\r\n  const submit = () => {\r\n    const newTask = {\r\n      title,\r\n      category,\r\n      due,\r\n      priority,\r\n      recurrenceMode: recurring.mode,\r\n      recurrenceFrequency: recurring.frequency,\r\n    };\r\n\r\n    handleSetRecurring(recurring);\r\n    if (!titleValid || !recurrenceValid) {\r\n      setTouched(true);\r\n      return;\r\n    }\r\n\r\n    addTask(newTask);\r\n\r\n    setTitle(\"\");\r\n    setCategory(undefined);\r\n    setPriority(Priority.MEDIUM);\r\n    setTitleValid(false);\r\n    setTouched(false);\r\n    setRecurring({});\r\n  };\r\n\r\n  const handleTitleChanged = (event) => {\r\n    const currentTitle = event.target.value;\r\n    setTitle(currentTitle);\r\n    setTitleValid(!!currentTitle);\r\n    setTouched(true);\r\n\r\n    if (category === undefined) {\r\n      const matchedExpression = categoriesRegex.find((catEx) =>\r\n        catEx.pattern.test(currentTitle)\r\n      );\r\n      setCategory(matchedExpression?.category);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TaskCreatorCard advanced={advanced}>\r\n      <Row>\r\n        <InputWrapper description={\"New Task\"}>\r\n          <Input\r\n            value={title}\r\n            name={\"title\"}\r\n            validationError={!titleValid && touched}\r\n            onChange={(event) => handleTitleChanged(event)}\r\n          />\r\n        </InputWrapper>\r\n        <StyledButton onClick={() => setAdvanced(!advanced)}>\r\n          {!advanced ? \"➕\" : \"➖\"}\r\n        </StyledButton>\r\n        <StyledButton onClick={() => submit()} primary>\r\n          Create\r\n        </StyledButton>\r\n      </Row>\r\n      <AdvancedRow advanced={advanced}>\r\n        <AdvancedTaskFields\r\n          category={category}\r\n          setCategory={setCategory}\r\n          due={due}\r\n          setDue={handleSetDue}\r\n          priority={priority}\r\n          setPriority={setPriority}\r\n          recurring={recurring}\r\n          setRecurring={handleSetRecurring}\r\n        />\r\n      </AdvancedRow>\r\n    </TaskCreatorCard>\r\n  );\r\n};\r\n\r\nexport default TaskCreator;\r\n","import Header from \"../Header\";\r\nimport styled from \"styled-components\";\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport TaskContainer from \"./TaskContainer\";\r\nimport TaskCreator from \"../task-creation/TaskCreator\";\r\nimport TaskContext from \"../../state/TaskContext\";\r\nimport DatabaseContext from \"../../state/DatabaseContext\";\r\nimport { useTaskActions } from \"../../api/taskActions\";\r\nimport AuthenticationContext from \"../../state/AuthenticationContext\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport CategoryContext from \"../../state/CategoryContext\";\r\n\r\nconst CategroyContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: stretch;\r\n  gap: 15px;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst TaskList = () => {\r\n  const { categories } = useContext(CategoryContext);\r\n  const sortedCategories = categories\r\n    ?.sort((cat1, cat2) => cat1.order > cat2.order)\r\n    ?.filter((cat) => !cat.hidden);\r\n  const categoriesWithUnknown = [{key: undefined, name: 'Uncategorized'}, ...sortedCategories]\r\n\r\n  const { tasks, setTasks } = useContext(TaskContext);\r\n  const { ready } = useContext(DatabaseContext);\r\n  const { listenToTaskList } = useTaskActions();\r\n\r\n  const { isLoggedIn, uid } = useContext(AuthenticationContext);\r\n\r\n  // eslint-disable-next-line\r\n  useEffect(() => ready && listenToTaskList(setTasks, uid), [ready, uid]);\r\n\r\n  if (!isLoggedIn()) {\r\n    return <Navigate to=\"taskhub-fe/login\" replace />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header page={\"Tasks\"}></Header>\r\n      <TaskCreator></TaskCreator>\r\n      <CategroyContainer>\r\n        {categoriesWithUnknown.map((taskCategory) => (\r\n          <TaskContainer\r\n            key={taskCategory.key || \"undefined\"}\r\n            taskCategory={taskCategory.name}\r\n            tasks={tasks.filter((task) => task.category === taskCategory.name || task.category === taskCategory.key)}\r\n          />\r\n        ))}\r\n      </CategroyContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst StyledRule = styled.span`\r\n  border: 1px solid;\r\n  border-color: #007799;\r\n  background-color: #E0F5FF;\r\n  color: #007799;\r\n  padding: 0px 2px;\r\n  border-radius: 3px;\r\n  white-space:nowrap;\r\n\r\n  ${({ editMode }) => editMode || `\r\n    font-size: smaller;\r\n  `}\r\n`;\r\n\r\nconst DeleteArea = styled.span`\r\n  border: 1px solid;\r\n  border-color: #006666;\r\n  border-radius: 3px;\r\n  margin-right: -3px;\r\n  margin-left: 3px;\r\n  padding: 0px 5px;\r\n  background-color: #FFDDDD;\r\n  color: #CC8888;  \r\n`;\r\n\r\nconst CategoryRule = ({rule, handleRemoval, editMode}) => {\r\n  return (\r\n    <StyledRule editMode={editMode}>\r\n      {rule}\r\n      {editMode && <DeleteArea onClick={() => handleRemoval(rule)}>X</DeleteArea>}\r\n    </StyledRule>\r\n  )\r\n}\r\n\r\nexport default CategoryRule;","import React, { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\r\nimport Button from \"../../components/Button\";\r\nimport Card from \"../../components/Card\";\r\nimport Input from \"../../components/Input\";\r\nimport InputWrapper from \"../../components/InputWrapper\";\r\nimport CategoryRule from \"./CategoryRule\";\r\nimport CategoryContext from \"../../state/CategoryContext\";\r\nimport DatabaseContext from \"../../state/DatabaseContext\";\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst RuleArea = styled.div`\r\n  margin-top: 10px;\r\n  display: flex;\r\n  gap: 5px;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst CategoryEditor = ({ category, resetEditedCategory }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [hidden, setHidden] = useState(false);\r\n  const [rules, setRules] = useState([]);\r\n  const [currentRule, setCurrentRule] = useState(\"\");\r\n\r\n  const { saveCategory } = useContext(CategoryContext);\r\n  const { addError } = useContext(DatabaseContext);\r\n\r\n  useEffect(() => {\r\n    setName(category.name || \"\");\r\n    setRules(category.rules || []);\r\n    setHidden(category.hidden || false);\r\n  }, [category]);\r\n\r\n  const handleAddRule = useCallback(() => {\r\n    try {\r\n      new RegExp(currentRule);\r\n    } catch {\r\n      addError(\"Cannot add rule due to invalid format\");\r\n      return;\r\n    }\r\n\r\n    setRules([...rules, currentRule]);\r\n    setCurrentRule(\"\");\r\n  }, [rules, currentRule, setCurrentRule, setRules, addError]);\r\n\r\n  const handleRemove = useCallback(\r\n    (ruleToRemove) => {\r\n      setRules(rules.filter((rule) => rule !== ruleToRemove));\r\n    },\r\n    [rules, setRules]\r\n  );\r\n\r\n  const handleSave = useCallback(\r\n    (categoryToSave) => {\r\n      saveCategory(categoryToSave);\r\n      resetEditedCategory();\r\n    },\r\n    [resetEditedCategory, saveCategory]\r\n  );\r\n\r\n  const assembledCategory = { ...category, name, rules, hidden };\r\n\r\n  return (\r\n    <Card>\r\n      <Row>\r\n        <InputWrapper description={\"Name:\"}>\r\n          <Input\r\n            value={name}\r\n            onChange={(event) => setName(event.target.value)}\r\n          />\r\n        </InputWrapper>\r\n        <StyledButton onClick={() => setHidden(!hidden)} primary={hidden}>\r\n          {hidden ? (\r\n            <VisibilityOffIcon style={{ height: \"17px\" }} />\r\n          ) : (\r\n            <VisibilityIcon style={{ height: \"17px\" }} />\r\n          )}\r\n        </StyledButton>\r\n        <StyledButton onClick={() => handleSave(assembledCategory)} primary>\r\n          Save\r\n        </StyledButton>\r\n      </Row>\r\n      <Row>\r\n        <InputWrapper description={\"Rules (Regex capable)\"}>\r\n          <Input\r\n            value={currentRule}\r\n            onChange={(event) => {\r\n              setCurrentRule(event.target.value);\r\n            }}\r\n          />\r\n        </InputWrapper>\r\n        <StyledButton onClick={handleAddRule}>Add</StyledButton>\r\n      </Row>\r\n      <RuleArea>\r\n        {rules?.map((rule) => (\r\n          <CategoryRule\r\n            rule={rule}\r\n            key={rule}\r\n            handleRemoval={handleRemove}\r\n            editMode\r\n          />\r\n        ))}\r\n      </RuleArea>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CategoryEditor;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Shadow = styled.div`\r\n  position: fixed;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  left: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  z-index: 2;\r\n`\r\n\r\nconst StyledOverlay = styled.div`\r\n  position: fixed;\r\n  top: 10%;\r\n  bottom: 10%;\r\n  right: 10%;\r\n  left: 10%;\r\n  background-color: #FFFFFF;\r\n  z-index: 3;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.5);\r\n  padding: 0px 20px;\r\n  overflow: auto;\r\n`\r\n\r\nconst Overlay = (props) => {\r\n  const { children } = props;\r\n\r\n  return (\r\n    <Shadow>\r\n      <StyledOverlay>\r\n        {children}\r\n      </StyledOverlay>\r\n    </Shadow>\r\n  );\r\n} \r\n\r\nexport default Overlay;","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\r\nimport DragIndicatorIcon from \"@mui/icons-material/DragIndicator\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport Button from \"../../components/Button\";\r\nimport Card from \"../../components/Card\";\r\nimport CategoryRule from \"./CategoryRule\";\r\nimport CategoryContext from \"../../state/CategoryContext\";\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n\r\n  ${({ isEdited }) =>\r\n    isEdited &&\r\n    `\r\n    color: #666666;\r\n  `}\r\n`;\r\n\r\nconst CategoryName = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst RuleContainer = styled.div`\r\n  margin-top: 5px;\r\n  display: flex;\r\n  gap: 7px;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst StyledHiddenIcon = styled(VisibilityOffIcon)`\r\n  color: #666666;\r\n  height: 17px;\r\n`;\r\n\r\nconst CategoryListEntry = ({\r\n  name,\r\n  id,\r\n  rules,\r\n  handleEdit,\r\n  isEdited,\r\n  hidden,\r\n  order,\r\n}) => {\r\n  const { removeCategory } = useContext(CategoryContext);\r\n\r\n  return (\r\n    <Draggable key={id} draggableId={id} index={order}>\r\n      {(provided) => (\r\n        <Card\r\n          innerRef={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n        >\r\n          <Row isEdited={isEdited}>\r\n            <DragIndicatorIcon />\r\n            <CategoryName>{name}</CategoryName>\r\n            {!isEdited && (\r\n              <>\r\n                {hidden && <StyledHiddenIcon />}\r\n                <Button onClick={() => handleEdit(id)}>Edit</Button>\r\n                <Button onClick={() => removeCategory(id)}>Delete</Button>\r\n              </>\r\n            )}\r\n          </Row>\r\n          <RuleContainer>\r\n            {rules &&\r\n              rules.map((rule) => <CategoryRule rule={rule} key={rule} />)}\r\n          </RuleContainer>\r\n        </Card>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nexport default CategoryListEntry;\r\n","import React from \"react\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport CategoryListEntry from \"./CategoryListEntry\";\r\nimport { useContext } from \"react\";\r\nimport CategoryContext from \"../../state/CategoryContext\";\r\n\r\nconst CategoryList = ({ categories, handleEdit, editedCategory }) => {\r\n  const { updateOrder } = useContext(CategoryContext);\r\n\r\n  const sortedCategories = categories?.sort(\r\n    (cat1, cat2) => cat1.order > cat2.order\r\n  );\r\n\r\n  const handleDragEnd = (result) => {\r\n    if (!result.destination) return; // Item was dropped outside of a list\r\n\r\n    const reorderedCategories = Array.from(categories);\r\n    const [reorderedItem] = reorderedCategories.splice(result.source.index, 1);\r\n    reorderedCategories.splice(result.destination.index, 0, reorderedItem);\r\n\r\n    updateOrder(reorderedCategories);\r\n  };\r\n\r\n  return (\r\n    <DragDropContext onDragEnd={handleDragEnd}>\r\n      <Droppable droppableId=\"droppable\">\r\n        {(provided) => (\r\n          <div {...provided.droppableProps} ref={provided.innerRef}>\r\n            {sortedCategories.map(({ name, key, rules, hidden }, index) => (\r\n              <CategoryListEntry\r\n                name={name}\r\n                id={key}\r\n                key={key}\r\n                rules={rules}\r\n                hidden={hidden}\r\n                order={index}\r\n                handleEdit={handleEdit}\r\n                isEdited={editedCategory.key === key}\r\n              />\r\n            ))}\r\n            {provided.placeholder}\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default CategoryList;\r\n","import React, { useCallback, useContext, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CategoryEditor from \"./CategoryEditor\";\r\nimport Button from \"../../components/Button\";\r\nimport Overlay from \"../../components/Overlay\";\r\nimport CategoryList from \"./CategoryList\";\r\nimport styled from \"styled-components\";\r\nimport CategoryContext from \"../../state/CategoryContext\";\r\nimport { Routes } from \"../routes\";\r\nimport DatabaseContext from \"../../state/DatabaseContext\";\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: 10px;\r\n  text-decoration: none;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst CategoryManager = () => {\r\n  const { categories } = useContext(CategoryContext);\r\n  const { errorList } = useContext(DatabaseContext);\r\n  const [editedCategory, setEditedCategory] = useState({ rules: [] });\r\n\r\n  const handleEdit = (key) => {\r\n    setEditedCategory(categories.find((entry) => entry.key === key));\r\n  };\r\n\r\n  const resetEditedCategory = useCallback(() => {\r\n    setEditedCategory({ rules: [] });\r\n  }, [setEditedCategory]);\r\n\r\n  return (\r\n    <Overlay>\r\n      {errorList && <p>{errorList.join(',')}</p>}\r\n      <h2>Categories</h2>\r\n      <CategoryEditor\r\n        category={editedCategory}\r\n        resetEditedCategory={resetEditedCategory}\r\n      />\r\n      <CategoryList\r\n        categories={categories}\r\n        handleEdit={handleEdit}\r\n        editedCategory={editedCategory}\r\n      />\r\n      <Link to={Routes.TASKLIST}>\r\n        <StyledButton primary>Close</StyledButton>\r\n      </Link>\r\n    </Overlay>\r\n  );\r\n};\r\n\r\nexport default CategoryManager;\r\n","import React from 'react';\r\n\r\nconst ELEMENT_ID = 'firebaseui_container';\r\n\r\nlet firebaseUiDeletion = Promise.resolve();\r\n\r\nexport default class AuthenticationBox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.uiConfig = props.uiConfig;\r\n    this.firebaseAuth = props.firebaseAuth;\r\n    this.className = props.className;\r\n    this.uiCallback = props.uiCallback;\r\n    this.unregisterAuthObserver = () => {};\r\n  }\r\n\r\n  componentDidMount() {\r\n    require('firebaseui/dist/firebaseui.css');\r\n\r\n    // Firebase UI only works on the Client. So we're loading the package in `componentDidMount`\r\n    // So that this works when doing server-side rendering.\r\n    const firebaseui = require('firebaseui');\r\n\r\n    // Wait in case the firebase UI instance is being deleted.\r\n    // This can happen if you unmount/remount the element quickly.\r\n    return firebaseUiDeletion.then(() => {\r\n      // Get or Create a firebaseUI instance.\r\n      this.firebaseUiWidget = firebaseui.auth.AuthUI.getInstance()\r\n           || new firebaseui.auth.AuthUI(this.firebaseAuth);\r\n      if (this.uiConfig.signInFlow === 'popup') {\r\n        this.firebaseUiWidget.reset();\r\n      }\r\n\r\n      // We track the auth state to reset firebaseUi if the user signs out.\r\n      this.userSignedIn = false;\r\n      this.unregisterAuthObserver = this.firebaseAuth.onAuthStateChanged((user) => {\r\n        if (!user && this.userSignedIn) {\r\n          this.firebaseUiWidget.reset();\r\n        }\r\n        this.userSignedIn = !!user;\r\n      });\r\n\r\n      // Trigger the callback if any was set.\r\n      if (this.uiCallback) {\r\n        this.uiCallback(this.firebaseUiWidget);\r\n      }\r\n\r\n      // Render the firebaseUi Widget.\r\n      this.firebaseUiWidget.start('#' + ELEMENT_ID, this.uiConfig);\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    firebaseUiDeletion = firebaseUiDeletion.then(() => {\r\n      this.unregisterAuthObserver();\r\n      return this.firebaseUiWidget.delete();\r\n    });\r\n    return firebaseUiDeletion;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.className} id={ELEMENT_ID}/>\r\n    );\r\n  }\r\n}","import React, { useContext } from 'react';\r\nimport Header from '../Header';\r\nimport Card from '../../components/Card';\r\nimport DatabaseContext from '../../state/DatabaseContext';\r\nimport { Navigate } from 'react-router-dom';\r\nimport AuthenticationContext from '../../state/AuthenticationContext';\r\nimport { getAuth, EmailAuthProvider } from 'firebase/auth';\r\nimport { Routes } from '../routes';\r\nimport AuthenticationBox from './AuthenticationBox';\r\n\r\nconst Login = () => {\r\n\r\n    const { ready } = useContext(DatabaseContext);\r\n    const { isLoggedIn } = useContext(AuthenticationContext);\r\n\r\n    if (isLoggedIn()) {\r\n        return <Navigate to={Routes.TASKLIST} replace />\r\n    }\r\n\r\n    const loginConfig = {\r\n        signInFlow: 'popup',\r\n        signInOptions: [\r\n            EmailAuthProvider.PROVIDER_ID,\r\n        ],\r\n        signInSuccessUrl: Routes.TASKLIST,\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <Header page={\"Login\"} />\r\n            {ready && <AuthenticationBox uiConfig={loginConfig} firebaseAuth={getAuth()} />}\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\nimport { Routes, Route, BrowserRouter } from \"react-router-dom\";\r\nimport TaskList from \"./pages/task-list/TaskList\";\r\nimport CategoryManager from \"./pages/categories/CategoryManager\";\r\nimport Login from \"./pages/auth/Login\";\r\nimport { TaskContextProvider } from \"./state/TaskContext\";\r\nimport { DatabaseContextPorvider } from \"./state/DatabaseContext\";\r\nimport { AuthenticationContextPorvider } from \"./state/AuthenticationContext\";\r\nimport { CategoryContextProvicer } from \"./state/CategoryContext\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <DatabaseContextPorvider>\r\n      <AuthenticationContextPorvider>\r\n      <TaskContextProvider>\r\n      <CategoryContextProvicer>\r\n        <BrowserRouter>\r\n          <Routes>\r\n            <Route path=\"/taskhub-fe/categories\" element={<CategoryManager />} />\r\n            <Route path=\"/taskhub-fe/login\" element={<Login />} />\r\n            <Route path=\"*\" element={<TaskList />} />\r\n          </Routes>\r\n        </BrowserRouter>\r\n      </CategoryContextProvicer>\r\n      </TaskContextProvider>\r\n      </AuthenticationContextPorvider>\r\n    </DatabaseContextPorvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}