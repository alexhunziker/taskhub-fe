{"version":3,"sources":["api/init.js","state/DatabaseContext.js","state/AuthenticationContext.js","pages/routes.js","pages/Header.jsx","components/Card.jsx","components/Button.jsx","components/ListEntry.jsx","components/Input.jsx","components/InputWrapper.jsx","components/Dropdown.jsx","components/DatePicker.jsx","state/constants.js","api/taskActions.js","state/TaskContext.js","state/CategoryContext.js","api/categoryActions.js","pages/task-creation/AdvancedTaskFields.jsx","pages/task-list/EditTask.jsx","pages/task-list/TaskEntry.jsx","pages/task-list/sortOrder.js","pages/task-list/OrderDropdown.jsx","pages/task-list/TaskContainer.jsx","pages/task-creation/TaskCreator.jsx","pages/task-list/TaskList.jsx","pages/categories/CategoryRule.jsx","pages/categories/CategoryEditor.jsx","components/Overlay.jsx","pages/categories/CategoryListEntry.jsx","pages/categories/CategoryList.jsx","pages/categories/CategoryManager.jsx","pages/auth/Login.jsx","App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","DatabaseContext","React","createContext","successIndicator","errorList","indicateSuccess","addError","message","clearErrorList","DatabaseContextPorvider","_ref","children","_useState","useState","_useState2","_slicedToArray","setSuccessIndicator","_useState3","_useState4","setErrorList","_useState5","_useState6","ready","setReady","useEffect","database","app","initializeApp","getDatabase","initializeFirebase","console","log","error","value","setTimeout","concat","_toConsumableArray","_jsx","Provider","AuthenticationContext","uid","displayName","email","isLoggedIn","Boolean","AuthenticationContextPorvider","setUid","setDisplayName","setEmail","useContext","auth","getAuth","onAuthStateChanged","user","Routes","StyledHeader","styled","header","_templateObject","_taggedTemplateLiteral","PageTitle","div","_templateObject2","ErrorList","_templateObject3","Header","page","_useContext","_useContext2","handleLogout","useCallback","signOut","catch","e","_jsxs","_Fragment","href","DoneIcon","Link","to","onClick","length","map","StyledCard","Card","props","style","className","Button","button","primary","StyledEntry","overdue","_ref2","editMode","_ref3","done","_ref4","remove","_ref5","ListEntry","_ref6","StyledInput","input","validationError","Input","onChange","FormFieldContainer","FormFieldDescription","InputWrapper","description","StyledSelect","select","Dropdown","entries","selectedKey","disabled","entry","key","name","DatePicker","ReactDatePicker","Priority","Priorities","Frequency","Frequencies","RecurrenceMode","RecurrenceModes","useTaskActions","alreadyRetrieved","setAlreadyRetrieved","updateTask","_asyncToGenerator","_regeneratorRuntime","mark","_callee","task","taskToPersist","objectReference","wrap","_context","prev","next","abrupt","_objectSpread","due","getTime","closedOn","Object","keys","forEach","undefined","ref","set","then","stop","_x","_x2","apply","arguments","removeTask","_callee2","taskKey","_context2","_x3","_x4","listenToTaskList","successAction","taskListRef","get","snapshot","exists","tasklist_1","values","val","Date","warn","TaskContext","tasks","addTask","toggleResolved","modifyTask","unassignAllTasksFromCategory","TaskContextProvider","setTasks","_useTaskActions","deleteTask","newTask","newTaskWithKey","uuidv4","updatedTask","filter","taskToUpdate","find","recurrenceMode","newDueDate","frequency","recurrenceFrequency","setDate","getDate","setMonth","getMonth","setFullYear","getFullYear","category","CategoryContext","categories","saveCategory","removeCategory","CategoryContextProvicer","setCategories","_useCategoryActions","fetchCategories","categoriesRef","updateCategory","_category$due","catetoryToPersist","deleteCategory","categoryKey","useCategoryActions","newCategory","newCategoryWithKey","filteredCategories","Row","RecurringSection","Checkbox","AdvancedTaskFields","setCategory","setDue","priority","setPriority","recurring","setRecurring","sortedCategories","sort","cat1","cat2","toUpperCase","categoriesWithUnknown","currentDue","isRecurring","setIsRecurring","priorityEntries","event","target","options","selectedIndex","selected","date","dateFormat","invalid","type","mode","checked","StyledButton","EditTask","toggleEditMode","title","setTitle","_useState7","_useState8","_useState9","_useState10","StyledDescription","Importance","_templateObject4","formatDate","day","month","year","TaskEntry","setRemove","currentDate","setEditMode","formattedDate","handleToggle","EditIcon","fontSize","SortOrder","ALPHABETICAL","DUE_UNKNOWN_FIRST","DUE_UNKNOWN_LAST","PRIORITY","unknownLast","a","b","SortOrderFunctions","_SortOrderFunctions","_defineProperty","StyledOrderDropdown","StyledSortOrderContent","showDropdown","DropdownEntry","OrderDropdown","setSortOrder","sortOrder","setShowDropdown","handleSetSortOrder","SortIcon","order","ContainerTitle","h2","ClosedTaskToggle","CategoryCard","TaskContainer","taskCategory","showClosed","setShowClosed","sortOrderFunction","openTasks","t","closedTasks","compareClosedOn","toggleClosedText","TaskCreatorCard","advanced","AdvancedRow","TaskCreator","setAdvanced","_useState11","_useState12","_useState13","_useState14","titleValid","setTitleValid","_useState15","_useState16","recurrenceValid","setRecurrenceValid","_useState17","_useState18","touched","setTouched","categoriesRegex","useMemo","flatMap","_category$rules","patterns","rules","rule","RegExp","pattern","o","handleSetRecurring","newRecurring","valid","currentTitle","matchedExpression","catEx","test","handleTitleChanged","submit","newDue","CategroyContainer","TaskList","_useContext4","Navigate","replace","StyledRule","span","DeleteArea","CategoryRule","handleRemoval","RuleArea","CategoryEditor","resetEditedCategory","setName","setRules","currentRule","setCurrentRule","handleAddRule","_unused","handleRemove","ruleToRemove","handleSave","categoryToSave","assembledCategory","Shadow","StyledOverlay","Overlay","isEdited","CategoryName","RuleContainer","CategoryListEntry","id","handleEdit","CategoryList","editedCategory","CategoryManager","setEditedCategory","join","Login","loginConfig","signInFlow","signInOptions","EmailAuthProvider","PROVIDER_ID","signInSuccessUrl","StyledFirebaseAuth","uiConfig","firebaseAuth","App","BrowserRouter","Route","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43f8e7da.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\"\r\nimport { getDatabase } from \"firebase/database\"\r\n\r\nconst firebaseConfig = {\r\n\r\n  apiKey: \"AIzaSyBh36cGPXJH-cyb2giOsJet7VDEKZ3MVsU\",\r\n  authDomain: \"my-task-hub.firebaseapp.com\",\r\n  databaseURL: \"https://my-task-hub-default-rtdb.europe-west1.firebasedatabase.app\",\r\n  projectId: \"my-task-hub\",\r\n  storageBucket: \"my-task-hub.appspot.com\",\r\n  messagingSenderId: \"941408350272\",\r\n  appId: \"1:941408350272:web:a0f5bfc5afbcbbcb3defa5\",\r\n  measurementId: \"G-485HGNY5X9\"\r\n};\r\n\r\nexport const initializeFirebase = () => {\r\n\r\n  const app = initializeApp(firebaseConfig);\r\n  return getDatabase(app);  \r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { initializeFirebase } from \"../api/init\";\r\n\r\nconst DatabaseContext = React.createContext({\r\n  successIndicator: false,\r\n  errorList: [],\r\n  indicateSuccess: () => {},\r\n  addError: (message) => {},\r\n  clearErrorList: () => {},\r\n});\r\n\r\nexport const DatabaseContextPorvider = ({children}) => {\r\n\r\n  const [successIndicator, setSuccessIndicator] = useState(false);\r\n  const [errorList, setErrorList] = useState([])\r\n  const [ready, setReady] = useState(false);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      const database = initializeFirebase();\r\n      console.log(\"Initialize Firebase... done\")\r\n      if (database) {\r\n        setReady(true);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"initializind database failed\", error)\r\n    }\r\n  }, [])\r\n\r\n  const indicateSuccess = () => {\r\n    setSuccessIndicator(true);\r\n    setTimeout(() => setSuccessIndicator(false), 1000);\r\n  }\r\n\r\n  const addError = (message) => {\r\n    setErrorList([...errorList, message])\r\n  }\r\n\r\n  const clearErrorList = () => {\r\n    setErrorList([])\r\n  }\r\n\r\n  const value = {\r\n    successIndicator,\r\n    errorList,\r\n    indicateSuccess,\r\n    addError,\r\n    clearErrorList,\r\n    ready\r\n  }\r\n  \r\n  \r\n  return (\r\n    <DatabaseContext.Provider value={value}>{children}</DatabaseContext.Provider>\r\n  );\r\n}\r\n\r\nexport default DatabaseContext;","import React, { useState } from \"react\";\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport DatabaseContext from \"./DatabaseContext\";\r\nimport { useContext } from \"react\";\r\n\r\nconst AuthenticationContext = React.createContext({\r\n  uid: \"\",\r\n  displayName: \"\",\r\n  email: \"\",\r\n  isLoggedIn: () => Boolean,\r\n});\r\n\r\nexport const AuthenticationContextPorvider = ({children}) => {\r\n\r\n  const [uid, setUid] = useState(\"\");\r\n  const [displayName, setDisplayName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const { ready } = useContext(DatabaseContext);\r\n\r\n  const auth = ready && getAuth();\r\n  ready && onAuthStateChanged(auth, (user) => {\r\n    if (user) {\r\n      setUid(user.uid);\r\n      setDisplayName(user.displayName)\r\n      setEmail(uid.email)\r\n    } else {\r\n      setUid(\"\");\r\n      setDisplayName(\"\")\r\n      setEmail(\"\");\r\n    }\r\n  })\r\n\r\n    const isLoggedIn = () => {\r\n      return !!uid;\r\n    }\r\n  \r\n    const value = {\r\n      uid,\r\n      displayName,\r\n      email,\r\n      isLoggedIn,\r\n    }\r\n    \r\n    return (\r\n      <AuthenticationContext.Provider value={value}>{children}</AuthenticationContext.Provider>\r\n    );\r\n  }\r\n\r\nexport default AuthenticationContext;","const TASKLIST_PATH = '/taskhub-fe'\r\nconst LOGIN_PATH = '/taskhub-fe/login'\r\nconst CATEGORIES_PATH = '/taskhub-fe/categories'\r\n\r\nexport const Routes = {\r\n  TASKLIST: TASKLIST_PATH,\r\n  LOGIN: LOGIN_PATH,\r\n  CATEGORIES: CATEGORIES_PATH,\r\n}","import React, { useCallback, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport DoneIcon from '@mui/icons-material/Done';\r\nimport AuthenticationContext from \"../state/AuthenticationContext\";\r\nimport DatabaseContext from \"../state/DatabaseContext\";\r\nimport 'firebase/compat/auth';\r\nimport { getAuth, signOut } from \"firebase/auth\";\r\nimport { Routes } from \"./routes\";\r\n\r\nconst StyledHeader = styled.header`\r\n  height: 3.5rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background-color: #007799;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n  gap: 20px;\r\n  color: white;\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: white;\r\n    font-weight: bold;\r\n  }\r\n\r\n  a:hover,\r\n  a:active,\r\n  a.active {\r\n    color: #E0F5FF;\r\n  }\r\n`;\r\n\r\nconst PageTitle = styled.div`\r\n  flex-grow: 1;\r\n`\r\n\r\nconst ErrorList = styled.div`\r\n  background-color: #EE8888;\r\n  color: white;\r\n  padding: 10px 20px 10px;\r\n\r\n  li {\r\n    list-style-type: none;\r\n  }\r\n`\r\n\r\nconst Header = ({page}) => {\r\n  const { successIndicator, errorList, addError } = useContext(DatabaseContext);\r\n  const { displayName, isLoggedIn } = useContext(AuthenticationContext);\r\n\r\n  const auth = getAuth();\r\n\r\n  const handleLogout = useCallback(() => {\r\n    signOut(auth)\r\n      .catch((e) => addError(\"Sign out failed: \", e))\r\n  }, [auth, addError])\r\n\r\n  return (\r\n    <>\r\n      <StyledHeader>\r\n        <PageTitle><a href=\"/tasks\">📝 TaskHub {\">>\"} { page }</a></PageTitle>\r\n        {successIndicator && <DoneIcon />}\r\n        {isLoggedIn() && <Link to={Routes.CATEGORIES}>Categories</Link>}\r\n        {isLoggedIn() && <a href={Routes.TASKLIST} onClick={handleLogout}>Logout ({displayName})</a>}\r\n      </StyledHeader>\r\n      {errorList.length > 0 && (\r\n        <ErrorList>\r\n          {errorList.map((error) => (\r\n            <li>{error}</li>\r\n          ))}\r\n        </ErrorList>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst StyledCard = styled.div`\r\n    padding: 1rem;\r\n    border-radius: 5px;\r\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst Card = props => {\r\n  return <StyledCard style={props.style} className={props.className}>{props.children}</StyledCard>;\r\n};\r\n\r\nexport default Card;","import styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  display: inline-block;\r\n  color: #007799;\r\n  background-color: #FFFFFF;\r\n  font-size: 1em;\r\n  padding: 0.25em 0.5em;\r\n  border: 2px solid #007799;\r\n  border-radius: 3px;\r\n  display: block;\r\n\r\n  ${({ primary }) => primary && `\r\n    background: #007799;\r\n    color: #FFFFFF;\r\n  `}\r\n`;\r\n\r\nexport default Button","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst StyledEntry = styled.div`\r\n  padding: 0.3rem;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\r\n  margin-top: 10px;\r\n  opacity: 1;\r\n\r\n  transform: translateY(0%);\r\n  transition: opacity 0.5s, transform 0.5s ease-in;\r\n\r\n  ${({ overdue }) => overdue && `\r\n    background: #FFDDDD;\r\n  `}\r\n\r\n  ${({ editMode }) => editMode && `\r\n    background: #E0F5FF;\r\n    padding-bottom: 0.6rem;\r\n  `}\r\n\r\n  ${({ done }) => done && `\r\n    color: grey;\r\n  `}\r\n\r\n  ${({ remove }) => remove && `\r\n    opacity: 0;\r\n    transform: translateY(100%);\r\n  `}\r\n\r\n  ${({ remove, done }) => remove && done && `\r\n    transform: translateY(-100%);\r\n  `}\r\n`;\r\n\r\nconst ListEntry = ({overdue, editMode, children, done, remove}) => {\r\n  return <StyledEntry overdue={overdue} editMode={editMode} done={done} remove={remove}>{children}</StyledEntry>;\r\n};\r\n\r\nexport default ListEntry;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledInput = styled.input`\r\n  width: 100%;\r\n  height: 24px;\r\n  border: 2px solid #007799;\r\n  border-radius: 3px;\r\n\r\n  :focus {\r\n    border: 2px solid #007799;\r\n  }\r\n\r\n  ${({ validationError }) => validationError && `\r\n    border: 2px solid #AA6666;\r\n    background-color: #FFDDDD;\r\n  `}\r\n`\r\n\r\nconst Input = ({onChange, value, validationError}) => {\r\n  return <StyledInput onChange={onChange} value={value} validationError={validationError}/>\r\n}\r\n\r\nexport default Input","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst FormFieldContainer = styled.div`\r\n  flex-grow: 1;\r\n  padding-right: 10px;\r\n`\r\n\r\nconst FormFieldDescription = styled.div`\r\n  font-size: 9pt;\r\n  color: #003333;\r\n`\r\n\r\nconst InputWrapper = ({description, children}) => {\r\n  return (\r\n    <FormFieldContainer>\r\n      <FormFieldDescription>{description}</FormFieldDescription>\r\n      {children}\r\n    </FormFieldContainer>)\r\n}\r\n\r\nexport default InputWrapper;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledSelect = styled.select`\r\n  width: 100%;\r\n  height: 30px;\r\n  border: 2px solid #007799;\r\n  border-radius: 3px;\r\n  background-color: white;\r\n\r\n  :disabled {\r\n    background-color: #EEEEEE;\r\n  }\r\n\r\n  :focus {\r\n    border: 2px solid #007799;\r\n  }\r\n`;\r\n\r\nconst Dropdown = ({ entries, onChange, selectedKey, disabled }) => {\r\n  return (\r\n    <StyledSelect onChange={onChange} value={selectedKey} disabled={disabled}>\r\n      {entries.map((entry) => (\r\n        <option key={entry.key || \"unknown\"} value={entry.key}>{entry.name}</option>\r\n      ))}\r\n    </StyledSelect>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import styled from \"styled-components\"\r\nimport ReactDatePicker from \"react-datepicker\"\r\n\r\nconst DatePicker = styled(ReactDatePicker)`\r\n  width: 100%;\r\n  height: 24px;\r\n  border: 2px solid #007799;\r\n  border-radius: 3px;\r\n\r\n  :focus {\r\n    border: 2px solid #007799;\r\n  }\r\n\r\n  ${({ validationError }) => validationError && `\r\n    border: 2px solid #AA6666;\r\n    background-color: #FFDDDD;\r\n  `}\r\n`;\r\n\r\nexport default DatePicker;","export const Priority = {\r\n  LOW: 'Low',\r\n  MEDIUM: 'Medium',\r\n  HIGH: 'High',\r\n}\r\n\r\nexport const Priorities = [\r\n  Priority.LOW,\r\n  Priority.MEDIUM,\r\n  Priority.HIGH,\r\n]\r\n\r\nexport const Frequency = {\r\n  DAILY: \"DAILY\",\r\n  WEEKLY: \"WEEKLY\",\r\n  MONTHLY: \"MONTHLY\",\r\n  YEARLY: \"YEARLY\",\r\n}\r\n\r\nexport const Frequencies = [\r\n  {name: \"Daily\", key: Frequency.DAILY},\r\n  {name: \"Weely\", key: Frequency.WEEKLY},\r\n  {name: \"Monthly\", key: Frequency.MONTHLY},\r\n  {name: \"Yearly\", key: Frequency.YEARLY},\r\n]\r\n\r\nexport const RecurrenceMode = {\r\n  AFTER_DUE: \"AFTER_DUE\",\r\n  AFTER_COMPLETE: \"AFTER_COMPLETE\",\r\n}\r\n\r\nexport const RecurrenceModes = [\r\n  {name: \"after due\", key: RecurrenceMode.AFTER_DUE},\r\n  {name: \"after complete\", key: RecurrenceMode.AFTER_COMPLETE},\r\n]\r\n\r\n","import { set, ref, getDatabase, get } from \"firebase/database\";\r\nimport { useContext, useState } from \"react\";\r\nimport DatabaseContext from \"../state/DatabaseContext\";\r\n\r\nexport const useTaskActions = () => {\r\n  const { addError, indicateSuccess, ready } = useContext(DatabaseContext);\r\n  const [alreadyRetrieved, setAlreadyRetrieved] = useState(false);\r\n\r\n  const listenToTaskList = (successAction, uid) => {\r\n    if (!ready) {\r\n      addError(\"Getting taks failed: Database not ready.\");\r\n      return;\r\n    }\r\n\r\n    if (alreadyRetrieved) {\r\n      addError(\"WARN: Prevented from listening to tasklist multiple times.\");\r\n      return;\r\n    }\r\n    setAlreadyRetrieved(true);\r\n\r\n    const database = getDatabase();\r\n    const taskListRef = ref(database, \"tasks/\" + uid);\r\n\r\n    get(taskListRef)\r\n      .then((snapshot) => {\r\n        if (!snapshot.exists()) {\r\n          console.warn(\"No tasks were obtained by firebase.\");\r\n          return;\r\n        } \r\n\r\n        const tasklist = Object.values(snapshot.val());\r\n        const tasklist_1 = tasklist.map(task => ({\r\n          ...task, \r\n          due: task.due && new Date(task.due), \r\n          closedOn: task.closedOn && new Date(task.closedOn)}))\r\n          \r\n        successAction(tasklist_1);\r\n        indicateSuccess()\r\n      },\r\n      (error) => addError(\"Getting tasks failed: \" + error)\r\n    );\r\n  };\r\n\r\n  const updateTask = async (task, uid) => {\r\n    if (!ready) {\r\n      addError(\"Task update/creation failed: Database not ready.\");\r\n      return;\r\n    }\r\n\r\n    const taskToPersist = { \r\n      ...task, \r\n      due: task.due && task.due.getTime(), \r\n      closedOn: task.closedOn && task.closedOn.getTime() };\r\n\r\n    Object.keys(taskToPersist).forEach(\r\n      (key) => taskToPersist[key] === undefined && delete taskToPersist[key]\r\n    );\r\n\r\n    const database = getDatabase();\r\n    const objectReference = ref(database, `tasks/${uid}/${taskToPersist.key}`);\r\n    set(objectReference, taskToPersist)\r\n      .then(indicateSuccess())\r\n      .catch((error) => addError(\"Task update/creation failed: \" + error));\r\n  };\r\n\r\n  const removeTask = async (taskKey, uid) => {\r\n\r\n    const database = getDatabase();\r\n    const objectReference = ref(database, `tasks/${uid}/${taskKey}`);\r\n    set(objectReference, null)\r\n      .then(indicateSuccess())\r\n      .catch((error) => addError(\"Task removal failed: \" + error));\r\n  }\r\n\r\n  return {\r\n    listenToTaskList,\r\n    updateTask,\r\n    removeTask,\r\n  };\r\n\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useTaskActions } from \"../api/taskActions\";\r\nimport AuthenticationContext from \"./AuthenticationContext\";\r\nimport { Frequency, RecurrenceMode } from \"./constants\";\r\n\r\nconst TaskContext = React.createContext({\r\n  tasks: [],\r\n  addTask: (task) => {},\r\n  removeTask: (taskKey) => {},\r\n  toggleResolved: (taskKey) => {},\r\n  modifyTask: (task) => {},\r\n  unassignAllTasksFromCategory: (key) => {},\r\n});\r\n\r\nexport const TaskContextProvider = (props) => {\r\n  const { uid } = useContext(AuthenticationContext);\r\n  const [tasks, setTasks] = useState([]);\r\n  const { updateTask, removeTask: deleteTask } = useTaskActions();\r\n\r\n  const addTask = (newTask) => {\r\n    const newTaskWithKey = { ...newTask, key: uuidv4() };\r\n    setTasks([...tasks, newTaskWithKey]);\r\n    updateTask(newTaskWithKey, uid);\r\n  };\r\n\r\n  const removeTask = (taskKey) => {\r\n    setTasks(tasks.filter((task) => task.key !== taskKey));\r\n    deleteTask(taskKey, uid);\r\n  };\r\n\r\n  const toggleResolved = (taskKey) => {\r\n    const taskToUpdate = tasks.find((task) => task.key === taskKey);\r\n    taskToUpdate.done = !taskToUpdate.done;\r\n\r\n    taskToUpdate.closedOn = taskToUpdate.done ? new Date() : null;\r\n\r\n    setTasks(tasks.map((task) => (task.key === taskKey ? taskToUpdate : task)));\r\n    updateTask(taskToUpdate, uid);\r\n\r\n    const recurrenceMode = taskToUpdate.recurrenceMode;\r\n    if (recurrenceMode && taskToUpdate.done) {\r\n      const newDueDate =\r\n        taskToUpdate.recurrenceMode === RecurrenceMode.AFTER_COMPLETE\r\n          ? new Date()\r\n          : new Date(taskToUpdate.due.getTime());\r\n\r\n      const frequency = taskToUpdate.recurrenceFrequency;\r\n      if (frequency === Frequency.DAILY) {\r\n        newDueDate.setDate(newDueDate.getDate() + 1);\r\n      } else if (frequency === Frequency.WEEKLY) {\r\n        newDueDate.setDate(newDueDate.getDate() + 7);\r\n      } else if (frequency === Frequency.MONTHLY) {\r\n        newDueDate.setMonth(newDueDate.getMonth() + 1);\r\n      } else if (frequency === Frequency.YEARLY) {\r\n        newDueDate.setFullYear(newDueDate.getFullYear() + 1);\r\n      }\r\n\r\n      const newTask = {\r\n        ...taskToUpdate,\r\n        due: newDueDate,\r\n        done: false,\r\n        closedOn: undefined,\r\n      };\r\n      \r\n      addTask(newTask);\r\n    }\r\n  };\r\n\r\n  const modifyTask = (updatedTask) => {\r\n    setTasks(\r\n      tasks.map((task) => (task.key !== updatedTask.key ? task : updatedTask))\r\n    );\r\n    updateTask(updatedTask, uid);\r\n  };\r\n\r\n  const unassignAllTasksFromCategory = (key) => {\r\n    tasks\r\n      .filter((task) => task.category === key)\r\n      .forEach((task) => modifyTask({ ...task, category: undefined }));\r\n  };\r\n\r\n  const value = {\r\n    tasks,\r\n    setTasks,\r\n    addTask,\r\n    removeTask,\r\n    toggleResolved,\r\n    modifyTask,\r\n    unassignAllTasksFromCategory,\r\n  };\r\n\r\n  return (\r\n    <TaskContext.Provider value={value}>{props.children}</TaskContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TaskContext;\r\n","import React, {useContext, useEffect, useState} from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport AuthenticationContext from \"./AuthenticationContext\";\r\nimport { useCategoryActions } from \"../api/categoryActions\";\r\nimport TaskContext from \"./TaskContext\";\r\n\r\nconst CategoryContext = React.createContext({\r\n  categories: [],\r\n  saveCategory: (category) => {},\r\n  removeCategory: (category) => {},\r\n});\r\n\r\nexport const CategoryContextProvicer = (props) => {\r\n\r\n  const { uid, addError } = useContext(AuthenticationContext)  \r\n  const { unassignAllTasksFromCategory } = useContext(TaskContext);\r\n  const [categories, setCategories] = useState([]);\r\n  const {fetchCategories, updateCategory, deleteCategory} = useCategoryActions();\r\n\r\n  useEffect(() => {\r\n    fetchCategories(setCategories, uid);\r\n    // eslint-disable-next-line\r\n  }, [uid])\r\n\r\n  const saveCategory = (newCategory) => {\r\n\r\n    if (!newCategory.name) {\r\n      addError(\"Category name cannot be empty\")\r\n      return;\r\n    }\r\n\r\n    const newCategoryWithKey = { key: uuidv4(), ...newCategory };\r\n    const filteredCategories = categories.filter((category) => category.key !== newCategoryWithKey.key);\r\n    setCategories([...filteredCategories, newCategoryWithKey]);\r\n    updateCategory(newCategoryWithKey, uid);\r\n  }\r\n    \r\n  const removeCategory = (key) => {\r\n\r\n    unassignAllTasksFromCategory(key);\r\n    setCategories(categories.filter((category) => category.key !== key));\r\n    deleteCategory(key, uid)\r\n  }\r\n\r\n  const value = {\r\n    categories,\r\n    saveCategory,\r\n    removeCategory,\r\n  };\r\n\r\n  return (\r\n    <CategoryContext.Provider value={value}>{props.children}</CategoryContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CategoryContext;","import { set, ref, getDatabase, get } from \"firebase/database\";\r\nimport { useContext } from \"react\";\r\nimport DatabaseContext from \"../state/DatabaseContext\";\r\nimport { useCallback } from \"react\";\r\n\r\nexport const useCategoryActions = () => {\r\n  const { addError, indicateSuccess, ready } = useContext(DatabaseContext);\r\n\r\n  const fetchCategories = useCallback((successAction, uid) => {\r\n\r\n    if (!ready || !uid) {\r\n      console.warn(\"Firebase not ready.\")\r\n      return;\r\n    }\r\n\r\n    const database = getDatabase();\r\n    const categoriesRef = ref(database, \"categories/\" + uid);\r\n\r\n    get(categoriesRef)\r\n      .then((snapshot) => {\r\n        if (!snapshot.exists()) {\r\n          console.warn(\"No categories were obtained by firebase.\");\r\n          return;\r\n        } \r\n\r\n        const categories = Object.values(snapshot.val())\r\n          .map(task => ({...task, due: task.due && new Date(task.due)}));\r\n        successAction(categories);\r\n        indicateSuccess()}\r\n      ).catch((error) => {\r\n        console.error(error);\r\n        addError(\"Getting categories failed: \" + error)\r\n      });\r\n    \r\n  }, [addError, indicateSuccess, ready]);\r\n\r\n  const updateCategory = async (category, uid) => {\r\n\r\n    const catetoryToPersist = { ...category, due: category.due?.getTime() };\r\n\r\n    // do we need this ?\r\n    Object.keys(catetoryToPersist).forEach(\r\n      (key) => catetoryToPersist[key] === undefined && delete catetoryToPersist[key]\r\n    );\r\n\r\n    const database = getDatabase();\r\n    const objectReference = ref(database, `categories/${uid}/${catetoryToPersist.key}`);\r\n    set(objectReference, catetoryToPersist)\r\n      .then(indicateSuccess())\r\n      .catch((error) => addError(\"Category update/creation failed: \" + error));\r\n  };\r\n\r\n  const deleteCategory = async (categoryKey, uid) => {\r\n\r\n    const database = getDatabase();\r\n    const objectReference = ref(database, `categories/${uid}/${categoryKey}`);\r\n    set(objectReference, null)\r\n      .then(indicateSuccess())\r\n      .catch((error) => addError(\"Category removal failed: \" + error));\r\n  }\r\n\r\n  return {\r\n    fetchCategories,\r\n    updateCategory,\r\n    deleteCategory,\r\n  };\r\n\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport InputWrapper from \"../../components/InputWrapper\";\r\nimport Dropdown from \"../../components/Dropdown\";\r\nimport DatePicker from \"../../components/DatePicker\";\r\nimport {\r\n  Priorities,\r\n  Frequencies,\r\n  RecurrenceModes,\r\n  RecurrenceMode,\r\n  Frequency,\r\n} from \"../../state/constants\";\r\nimport { useContext } from \"react\";\r\nimport CategoryContext from \"../../state/CategoryContext\";\r\n\r\nconst Row = styled.div`\r\n  margin-top: 7px;\r\n  display: flex;\r\n  gap: 10px;\r\n  width: 100%;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst RecurringSection = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  min-width: 300px;\r\n`;\r\n\r\nconst Checkbox = styled.input`\r\n  height: 17px;\r\n`;\r\n\r\nconst AdvancedTaskFields = ({\r\n  category,\r\n  setCategory,\r\n  due,\r\n  setDue,\r\n  priority,\r\n  setPriority,\r\n  recurring,\r\n  setRecurring,\r\n}) => {\r\n  const { categories } = useContext(CategoryContext);\r\n  const sortedCategories = categories?.sort(\r\n    (cat1, cat2) => cat1.name.toUpperCase() > cat2.name.toUpperCase()\r\n  );\r\n  const categoriesWithUnknown = [\r\n    { key: undefined, name: \"Uncategorized\" },\r\n    ...sortedCategories,\r\n  ];\r\n\r\n  const currentDue = due instanceof Date ? due : undefined;\r\n\r\n  const [isRecurring, setIsRecurring] = useState(!!recurring.frequency);\r\n  const toggleRecurring = () => {\r\n    const newRecurring = isRecurring ? {} : {mode: RecurrenceMode.AFTER_COMPLETE, frequency: Frequency.WEEKLY}\r\n    setRecurring(newRecurring);\r\n    setIsRecurring(!isRecurring);\r\n  };\r\n\r\n  const priorityEntries = Priorities.map((priority) => {\r\n    return { key: priority, name: priority };\r\n  });\r\n\r\n  return (\r\n    <Row>\r\n      <InputWrapper description={\"Category\"}>\r\n        <Dropdown\r\n          entries={categoriesWithUnknown}\r\n          selectedKey={category}\r\n          onChange={(event) =>\r\n            setCategory(event.target.options[event.target.selectedIndex].value)\r\n          }\r\n        />\r\n      </InputWrapper>\r\n      <InputWrapper description={\"Due\"}>\r\n        <DatePicker\r\n          selected={currentDue}\r\n          onChange={(date) => setDue(date)}\r\n          dateFormat=\"dd.MM.yyyy\"\r\n          validationError={recurring.invalid}\r\n        />\r\n      </InputWrapper>\r\n      <InputWrapper name={\"priority\"} description={\"Priority\"}>\r\n        <Dropdown\r\n          entries={priorityEntries}\r\n          selectedKey={priority}\r\n          onChange={(event) =>\r\n            setPriority(event.target.options[event.target.selectedIndex].value)\r\n          }\r\n        />\r\n      </InputWrapper>\r\n      <>\r\n        <InputWrapper description={\"Recurring\"}>\r\n          <RecurringSection>\r\n            <Checkbox\r\n              type=\"checkbox\"\r\n              onChange={() => toggleRecurring()}\r\n              checked={isRecurring}\r\n            />\r\n            <Dropdown\r\n              disabled={!isRecurring}\r\n              entries={isRecurring ? Frequencies : []}\r\n              selectedKey={recurring.frequency}\r\n              onChange={(event) =>\r\n                setRecurring({\r\n                  ...recurring,\r\n                  frequency:\r\n                    event.target.options[event.target.selectedIndex].value,\r\n                })\r\n              }\r\n            />\r\n            <Dropdown\r\n              disabled={!isRecurring}\r\n              entries={isRecurring ? RecurrenceModes : []}\r\n              selectedKey={recurring.mode}\r\n              onChange={(event) =>\r\n                setRecurring({\r\n                  ...recurring,\r\n                  mode: event.target.options[event.target.selectedIndex].value,\r\n                })\r\n              }\r\n            />\r\n          </RecurringSection>\r\n        </InputWrapper>\r\n      </>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default AdvancedTaskFields;\r\n","import React, { useContext, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Input from \"../../components/Input\";\r\nimport InputWrapper from \"../../components/InputWrapper\";\r\nimport Button from \"../../components/Button\";\r\nimport AdvancedTaskFields from \"../task-creation/AdvancedTaskFields\";\r\nimport TaskContext from \"../../state/TaskContext\";\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n`;\r\n\r\nconst EditTask = ({ task, toggleEditMode }) => {\r\n  \r\n  \r\n  const [title, setTitle] = useState(task.title);\r\n  const [category, setCategory] = useState(task.category);\r\n  const [due, setDue] = useState(task.due)\r\n  const [priority, setPriority] = useState(task.priority)\r\n  const [recurring, setRecurring] = useState({mode: task.recurrenceMode, frequency: task.recurrenceFrequency})\r\n\r\n  const {removeTask, modifyTask} = useContext(TaskContext)\r\n\r\n  const submit = () => {\r\n    modifyTask({...task, title, category, due, priority, recurrenceMode: recurring.mode, recurrenceFrequency: recurring.frequency})\r\n    toggleEditMode();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <InputWrapper description={\"Task\"}>\r\n          <Input\r\n            value={title}\r\n            name={\"title\"}\r\n            onChange={(event) => setTitle(event.target.value)}\r\n          />\r\n        </InputWrapper>\r\n        <StyledButton onClick={() => submit()} primary>\r\n          Save\r\n        </StyledButton>\r\n        <StyledButton onClick={() => removeTask(task.key)}>Delete</StyledButton>\r\n      </Row>\r\n      <AdvancedTaskFields\r\n        category={category}\r\n        setCategory={setCategory}\r\n        due={due}\r\n        setDue={setDue}\r\n        priority={priority}\r\n        setPriority={setPriority}\r\n        recurring={recurring}\r\n        setRecurring={setRecurring}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditTask;\r\n","import React, { useCallback, useContext, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport Button from \"../../components/Button\";\r\nimport ListEntry from \"../../components/ListEntry\";\r\nimport EditTask from \"./EditTask\";\r\nimport { Priority } from \"../../state/constants\";\r\nimport TaskContext from \"../../state/TaskContext\";\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Checkbox = styled.input`\r\n  height: 17px;\r\n`;\r\n\r\nconst StyledDescription = styled.div`\r\n  flex-grow: 1;\r\n\r\n  ${({ done }) =>\r\n    done &&\r\n    `\r\n    text-decoration: line-through;\r\n  `}\r\n`;\r\n\r\nconst Importance = styled.div`\r\n  font-weight: bold;\r\n\r\n  ${({ priority }) =>\r\n    priority === Priority.HIGH &&\r\n    `\r\n    color: red;\r\n  `}\r\n\r\n  ${({ priority }) =>\r\n    priority === Priority.MEDIUM &&\r\n    `\r\n    color: orange;\r\n  `}\r\n\r\n  ${({ priority }) =>\r\n    priority === Priority.LOW &&\r\n    `\r\n    color: green;\r\n  `}\r\n`;\r\n\r\nconst formatDate = (date) => {\r\n  if (date instanceof Date) {\r\n    const day = date.getDate()\r\n    const month = date.getMonth()+1\r\n    const year = date.getFullYear()\r\n    return `${day}.${month}.${year}`\r\n  }\r\n}\r\n\r\nconst TaskEntry = ({ task }) => {\r\n  const { toggleResolved } = useContext(TaskContext);\r\n  const [remove, setRemove] = useState(false);\r\n\r\n  const currentDate = new Date();\r\n  const overdue =\r\n    task.due && typeof task.due.getTime === \"function\"\r\n      ? currentDate > task.due.getTime() && !task.done\r\n      : false;\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n  const toggleEditMode = () => setEditMode(!editMode);\r\n\r\n  const formattedDate = task.done ? formatDate(task.closedOn) : formatDate(task.due)\r\n\r\n  const handleToggle = useCallback(() => {\r\n    setTimeout(() => toggleResolved(task.key), 500);\r\n    setRemove(true);\r\n  }, [setRemove, task.key, toggleResolved])\r\n\r\n  return (\r\n    <ListEntry overdue={overdue} editMode={editMode} done={task.done} remove={remove}>\r\n      {!editMode ? (\r\n        <Row>\r\n          <Checkbox type=\"checkbox\" onChange={() => handleToggle()} checked={task.done || remove} />\r\n          <Importance priority={task.priority}>!</Importance>\r\n          <StyledDescription done={task.done}>{task.title} {formattedDate && `(${formattedDate})`}</StyledDescription>\r\n          <Button onClick={() => toggleEditMode()}>\r\n            <EditIcon fontSize=\"small\" />\r\n          </Button>\r\n        </Row>\r\n      ) : (\r\n        <EditTask task={task} toggleEditMode={toggleEditMode} />\r\n      )}\r\n    </ListEntry>\r\n  );\r\n};\r\n\r\nexport default TaskEntry;\r\n","import { Priority } from \"../../state/constants\";\r\n\r\nexport const SortOrder = {\r\n  ALPHABETICAL: \"Alphabetical\",\r\n  DUE_UNKNOWN_FIRST: \"Due (unknown first)\",\r\n  DUE_UNKNOWN_LAST: \"Due (unknown last)\",\r\n  PRIORITY: \"Priority\",\r\n}\r\n\r\nconst alphabetical = (a, b) => {\r\n    if (a.title > b.title) return 1;\r\n    if (a.title < b.title) return -1;\r\n    return 0;\r\n}\r\n\r\nconst unknownFirst = (a, b) => {\r\n    if (!a.due && !b.due) return a.title > b.title;\r\n    if (!a.due) return -1;\r\n    if (!b.due) return 1;\r\n    return a.due - b.due;\r\n}\r\n\r\nconst unknownLast = (a, b) => {\r\n    if (!a.due && !b.due) return a.title > b.title;\r\n    if (!a.due) return 1;\r\n    if (!b.due) return -1;\r\n    return a.due - b.due;\r\n}\r\n\r\nconst priority = (a, b) => {\r\n    if (a.priority === b.priority) return unknownLast(a, b);\r\n    if (a.priority === Priority.HIGH) return -1;\r\n    if (a.priority === Priority.LOW) return 1;\r\n    if (b.priority === Priority.HIGH) return 1;\r\n    if (b.priority === Priority.LOW) return -1;\r\n}\r\n\r\nexport const compareClosedOn = (a, b) => {\r\n    if (a.closedOn === b.closedOn) return 0;\r\n    if (!a.closedOn) return 1;\r\n    if (!b.closedOn) return -1;\r\n    return b.closedOn - a.closedOn;\r\n}\r\n\r\nexport const SortOrderFunctions = {\r\n    [SortOrder.ALPHABETICAL]: alphabetical,\r\n    [SortOrder.DUE_UNKNOWN_FIRST]: unknownFirst,\r\n    [SortOrder.DUE_UNKNOWN_LAST]: unknownLast,\r\n    [SortOrder.PRIORITY]: priority,\r\n}","import { useCallback, useState } from \"react\";\r\nimport styled from \"styled-components\"\r\nimport { SortOrder } from \"./sortOrder\";\r\nimport SortIcon from '@mui/icons-material/Sort';\r\n\r\nconst StyledOrderDropdown = styled.div`\r\n  display: inline-block;\r\n  overflow: hidden;\r\n  font-size: smaller;\r\n  vertical-align: bottom;\r\n  color: grey;\r\n`\r\n\r\nconst StyledSortOrderContent = styled.div`\r\n  transition:visibility 0.2s linear,opacity 0.2s linear;\r\n  display: block;\r\n  position: absolute;\r\n  background-color: #FFFFFF;\r\n  border-style: solid;\r\n  border-color: #BBBBBB;\r\n  border-radius: 3px;\r\n  border-width: 2px;\r\n  min-width: 160px;\r\n  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\r\n  z-index: 1;\r\n\r\n  ${({ showDropdown }) => showDropdown ? `opacity: 100;` : `opacity: 0; visibility:hidden`}\r\n`\r\n\r\nconst DropdownEntry = styled.div`\r\n  transition: all 0.1s linear;\r\n  padding: 5px;\r\n  ${({ selected }) => selected && `\r\n    background: #E0F5FF;\r\n  `}\r\n`;\r\n\r\n\r\n\r\nconst OrderDropdown = ({setSortOrder, sortOrder}) => {\r\n\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n\r\n  const handleSetSortOrder = useCallback((sortOrder) => {\r\n    setShowDropdown(false);\r\n    setSortOrder(sortOrder)\r\n  }, [setShowDropdown, setSortOrder])\r\n\r\n  return  (\r\n    <StyledOrderDropdown>\r\n      <SortIcon onClick={() => setShowDropdown(true)} fontSize=\"small\" />\r\n      <StyledSortOrderContent showDropdown={showDropdown}>\r\n        {Object.values(SortOrder).map((order) => \r\n          <DropdownEntry key={order} selected={order === sortOrder} onClick={() => handleSetSortOrder(order)}>\r\n            {order}\r\n          </DropdownEntry>\r\n        )}\r\n      </StyledSortOrderContent>\r\n    </StyledOrderDropdown>\r\n  );\r\n}\r\n\r\nexport default OrderDropdown;","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Card from \"../../components/Card\";\r\nimport TaskEntry from \"./TaskEntry\";\r\nimport OrderDropdown from \"./OrderDropdown\";\r\nimport { SortOrder, SortOrderFunctions, compareClosedOn } from \"./sortOrder\";\r\n\r\nconst ContainerTitle = styled.h2`\r\n  font-size: 14pt;\r\n`\r\n\r\nconst ClosedTaskToggle = styled.div`\r\n  margin-top: 10px;\r\n  color: #007799;\r\n`\r\n\r\nconst CategoryCard = styled(Card)`\r\n  width: 400px;\r\n  flex-grow: 1;\r\n`\r\n\r\nconst TaskContainer = ({ taskCategory, tasks }) => {\r\n  const [sortOrder, setSortOrder] = useState(SortOrder.DUE_UNKNOWN_LAST);\r\n  const [showClosed, setShowClosed] = useState(false);\r\n  const sortOrderFunction = SortOrderFunctions[sortOrder];\r\n\r\n  const openTasks = tasks\r\n    .filter(t => !t.done)\r\n    .sort((a, b) => sortOrderFunction(a, b));\r\n  const closedTasks = tasks\r\n    .filter(t => t.done)\r\n    .sort((a, b) => compareClosedOn(a, b));\r\n\r\n  const toggleClosedText = showClosed\r\n    ? \"- Hide closed tasks\"\r\n    : \"+ Show closed tasks\";\r\n\r\n  return (\r\n    <CategoryCard>\r\n      <ContainerTitle>\r\n        <OrderDropdown setSortOrder={setSortOrder} sortOrder={sortOrder} />{\" \"}\r\n        {taskCategory || \"Uncategorized\"}\r\n      </ContainerTitle>\r\n      {openTasks.length > 0\r\n        ? openTasks.map((task) => <TaskEntry task={task} key={task.key} />)\r\n        : \"Yay, no tasks\"}\r\n      {closedTasks.length > 0 && (\r\n        <>\r\n          <ClosedTaskToggle onClick={() => setShowClosed(!showClosed)}>\r\n            {toggleClosedText}\r\n          </ClosedTaskToggle>\r\n          {showClosed &&\r\n            closedTasks.map((task) => <TaskEntry task={task} key={task.key} />)}\r\n        </>\r\n      )}\r\n    </CategoryCard>\r\n  );\r\n};\r\n\r\nexport default TaskContainer;\r\n","import React, { useContext, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport Button from \"../../components/Button\";\r\nimport Input from \"../../components/Input\";\r\nimport Card from \"../../components/Card\";\r\nimport InputWrapper from \"../../components/InputWrapper\";\r\nimport AdvancedTaskFields from \"./AdvancedTaskFields\";\r\nimport { Priority, RecurrenceMode } from \"../../state/constants\";\r\nimport TaskContext from \"../../state/TaskContext\";\r\nimport CategoryContext from \"../../state/CategoryContext\";\r\n\r\nconst TaskCreatorCard = styled(Card)`\r\n  margin-left: 1rem;\r\n  margin-right: 1rem;\r\n  margin-bottom: 0px;\r\n  background-color: #e0f5ff;\r\n  max-height: 50px;\r\n  transition: max-height 0.5s linear;\r\n  height: fit-content;\r\n  overflow: hidden;\r\n\r\n  ${({ advanced }) => (advanced ? `max-height: 150px;` : `max-height: 50px;`)}\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst AdvancedRow = styled(Row)`\r\n  transition: opacity 0.5s linear;\r\n  ${({ advanced }) => (advanced ? `opacity: 1;` : `opacity: 0;`)}\r\n`;\r\n\r\nconst TaskCreator = () => {\r\n  const [advanced, setAdvanced] = useState(() => false);\r\n\r\n  const { addTask } = useContext(TaskContext);\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [category, setCategory] = useState(undefined);\r\n  const [priority, setPriority] = useState(Priority.MEDIUM);\r\n  const [due, setDue] = useState(undefined);\r\n  const [recurring, setRecurring] = useState({});\r\n  const [titleValid, setTitleValid] = useState(false);\r\n  const [recurrenceValid, setRecurrenceValid] = useState(true);\r\n  const [touched, setTouched] = useState(false);\r\n\r\n  const { categories } = useContext(CategoryContext);\r\n  const categoriesRegex = useMemo(\r\n    () =>\r\n      categories\r\n        .flatMap((category) => {\r\n          const patterns = category.rules?.map((rule) => new RegExp(rule));\r\n          return patterns?.map((pattern) => {\r\n            return { pattern, category: category.key };\r\n          });\r\n        })\r\n        .filter((o) => !!o),\r\n    [categories]\r\n  );\r\n\r\n  const handleSetRecurring = (newRecurring) => {\r\n    const valid = newRecurring.mode !== RecurrenceMode.AFTER_DUE || !!due;\r\n    setRecurrenceValid(valid);\r\n    setRecurring({ ...newRecurring, invalid: !valid });\r\n  };\r\n\r\n  const handleSetDue = (newDue) => {\r\n    const valid = recurring.mode !== RecurrenceMode.AFTER_DUE || !!newDue;\r\n    setRecurrenceValid(valid);\r\n    setDue(newDue);\r\n    setRecurring({ ...recurring, invalid: !valid });\r\n  };\r\n\r\n  const submit = () => {\r\n    const newTask = {\r\n      title,\r\n      category,\r\n      due,\r\n      priority,\r\n      recurrenceMode: recurring.mode,\r\n      recurrenceFrequency: recurring.frequency,\r\n    };\r\n\r\n    handleSetRecurring(recurring);\r\n    if (!titleValid || !recurrenceValid) {\r\n      setTouched(true);\r\n      return;\r\n    }\r\n\r\n    addTask(newTask);\r\n\r\n    setTitle(\"\");\r\n    setCategory(undefined);\r\n    setPriority(Priority.MEDIUM);\r\n    setTitleValid(false);\r\n    setTouched(false);\r\n    setRecurring({});\r\n  };\r\n\r\n  const handleTitleChanged = (event) => {\r\n    const currentTitle = event.target.value;\r\n    setTitle(currentTitle);\r\n    setTitleValid(!!currentTitle);\r\n    setTouched(true);\r\n\r\n    if (category === undefined) {\r\n      const matchedExpression = categoriesRegex.find((catEx) =>\r\n        catEx.pattern.test(currentTitle)\r\n      );\r\n      setCategory(matchedExpression?.category);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TaskCreatorCard advanced={advanced}>\r\n      <Row>\r\n        <InputWrapper description={\"New Task\"}>\r\n          <Input\r\n            value={title}\r\n            name={\"title\"}\r\n            validationError={!titleValid && touched}\r\n            onChange={(event) => handleTitleChanged(event)}\r\n          />\r\n        </InputWrapper>\r\n        <StyledButton onClick={() => setAdvanced(!advanced)}>\r\n          {!advanced ? \"➕\" : \"➖\"}\r\n        </StyledButton>\r\n        <StyledButton onClick={() => submit()} primary>\r\n          Create\r\n        </StyledButton>\r\n      </Row>\r\n      <AdvancedRow advanced={advanced}>\r\n        <AdvancedTaskFields\r\n          category={category}\r\n          setCategory={setCategory}\r\n          due={due}\r\n          setDue={handleSetDue}\r\n          priority={priority}\r\n          setPriority={setPriority}\r\n          recurring={recurring}\r\n          setRecurring={handleSetRecurring}\r\n        />\r\n      </AdvancedRow>\r\n    </TaskCreatorCard>\r\n  );\r\n};\r\n\r\nexport default TaskCreator;\r\n","import Header from \"../Header\";\r\nimport styled from \"styled-components\";\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport TaskContainer from \"./TaskContainer\";\r\nimport TaskCreator from \"../task-creation/TaskCreator\";\r\nimport TaskContext from \"../../state/TaskContext\";\r\nimport DatabaseContext from \"../../state/DatabaseContext\";\r\nimport { useTaskActions } from \"../../api/taskActions\";\r\nimport AuthenticationContext from \"../../state/AuthenticationContext\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport CategoryContext from \"../../state/CategoryContext\";\r\n\r\nconst CategroyContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: stretch;\r\n  gap: 15px;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst TaskList = () => {\r\n  const { categories } = useContext(CategoryContext);\r\n  const sortedCategories = categories?.sort((cat1, cat2) => cat1.name.toUpperCase() > cat2.name.toUpperCase());\r\n  const categoriesWithUnknown = [{key: undefined, name: 'Uncategorized'}, ...sortedCategories]\r\n\r\n  const { tasks, setTasks } = useContext(TaskContext);\r\n  const { ready } = useContext(DatabaseContext);\r\n  const { listenToTaskList } = useTaskActions();\r\n\r\n  const { isLoggedIn, uid } = useContext(AuthenticationContext);\r\n\r\n  // eslint-disable-next-line\r\n  useEffect(() => ready && listenToTaskList(setTasks, uid), [ready, uid]);\r\n\r\n  if (!isLoggedIn()) {\r\n    return <Navigate to=\"taskhub-fe/login\" replace />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header page={\"Tasks\"}></Header>\r\n      <TaskCreator></TaskCreator>\r\n      <CategroyContainer>\r\n        {categoriesWithUnknown.map((taskCategory) => (\r\n          <TaskContainer\r\n            key={taskCategory.key}\r\n            taskCategory={taskCategory.name}\r\n            tasks={tasks.filter((task) => task.category === taskCategory.name || task.category === taskCategory.key)}\r\n          />\r\n        ))}\r\n      </CategroyContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst StyledRule = styled.span`\r\n  border: 1px solid;\r\n  border-color: #007799;\r\n  background-color: #E0F5FF;\r\n  color: #007799;\r\n  padding: 0px 2px;\r\n  border-radius: 3px;\r\n  white-space:nowrap;\r\n\r\n  ${({ editMode }) => editMode || `\r\n    font-size: smaller;\r\n  `}\r\n`;\r\n\r\nconst DeleteArea = styled.span`\r\n  border: 1px solid;\r\n  border-color: #006666;\r\n  border-radius: 3px;\r\n  margin-right: -3px;\r\n  margin-left: 3px;\r\n  padding: 0px 5px;\r\n  background-color: #FFDDDD;\r\n  color: #CC8888;  \r\n`;\r\n\r\nconst CategoryRule = ({rule, handleRemoval, editMode}) => {\r\n  return (\r\n    <StyledRule editMode={editMode}>\r\n      {rule}\r\n      {editMode && <DeleteArea onClick={() => handleRemoval(rule)}>X</DeleteArea>}\r\n    </StyledRule>\r\n  )\r\n}\r\n\r\nexport default CategoryRule;","import React, { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"../../components/Button\";\r\nimport Card from \"../../components/Card\";\r\nimport Input from \"../../components/Input\";\r\nimport InputWrapper from \"../../components/InputWrapper\";\r\nimport CategoryRule from \"./CategoryRule\";\r\nimport CategoryContext from \"../../state/CategoryContext\";\r\nimport DatabaseContext from \"../../state/DatabaseContext\";\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst RuleArea = styled.div`\r\n  margin-top: 10px;\r\n  display: flex;\r\n  gap: 5px;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst CategoryEditor = ({ category, resetEditedCategory }) => {\r\n  const [name, setName] = useState('');\r\n  const [rules, setRules] = useState([]);\r\n  const [currentRule, setCurrentRule] = useState(\"\");\r\n\r\n  const { saveCategory } = useContext(CategoryContext);\r\n  const { addError } = useContext(DatabaseContext);\r\n\r\n  useEffect(() => {\r\n    setName(category.name || \"\");\r\n    setRules(category.rules || []);\r\n  }, [category]);\r\n\r\n  const handleAddRule = useCallback(() => {\r\n    try {\r\n      new RegExp(currentRule);\r\n    } catch {\r\n      addError(\"Cannot add rule due to invalid format\");\r\n      return;\r\n    }\r\n\r\n    setRules([...rules, currentRule]);\r\n    setCurrentRule(\"\");\r\n  }, [rules, currentRule, setCurrentRule, setRules, addError]);\r\n\r\n  const handleRemove = useCallback(\r\n    (ruleToRemove) => {\r\n      setRules(rules.filter((rule) => rule !== ruleToRemove));\r\n    },\r\n    [rules, setRules]\r\n  );\r\n\r\n  const handleSave = useCallback(\r\n    (categoryToSave) => {\r\n      saveCategory(categoryToSave);\r\n      resetEditedCategory();\r\n    },\r\n    [resetEditedCategory, saveCategory]\r\n  );\r\n\r\n  const assembledCategory = { ...category, name, rules };\r\n\r\n  return (\r\n    <Card>\r\n      <Row>\r\n        <InputWrapper description={\"Name:\"}>\r\n          <Input\r\n            value={name}\r\n            onChange={(event) => setName(event.target.value)}\r\n          />\r\n        </InputWrapper>\r\n        <StyledButton onClick={() => handleSave(assembledCategory)} primary>\r\n          Save\r\n        </StyledButton>\r\n      </Row>\r\n      <Row>\r\n        <InputWrapper description={\"Rules (Regex capable)\"}>\r\n          <Input\r\n            value={currentRule}\r\n            onChange={(event) => {\r\n              setCurrentRule(event.target.value);\r\n            }}\r\n          />\r\n        </InputWrapper>\r\n        <StyledButton onClick={handleAddRule}>Add</StyledButton>\r\n      </Row>\r\n      <RuleArea>\r\n        {rules?.map((rule) => (\r\n          <CategoryRule\r\n            rule={rule}\r\n            key={rule}\r\n            handleRemoval={handleRemove}\r\n            editMode\r\n          />\r\n        ))}\r\n      </RuleArea>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CategoryEditor;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Shadow = styled.div`\r\n  position: fixed;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  left: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  z-index: 2;\r\n`\r\n\r\nconst StyledOverlay = styled.div`\r\n  position: fixed;\r\n  top: 60px;\r\n  bottom: 60px;\r\n  right: 60px;\r\n  left: 60px;\r\n  background-color: #FFFFFF;\r\n  z-index: 3;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.5);\r\n  padding: 0px 20px;\r\n  overflow: auto;\r\n`\r\n\r\nconst Overlay = (props) => {\r\n  const { children } = props;\r\n\r\n  return (\r\n    <Shadow>\r\n      <StyledOverlay>\r\n        {children}\r\n      </StyledOverlay>\r\n    </Shadow>\r\n  );\r\n} \r\n\r\nexport default Overlay;","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"../../components/Button\";\r\nimport Card from \"../../components/Card\";\r\nimport CategoryRule from \"./CategoryRule\";\r\nimport CategoryContext from \"../../state/CategoryContext\";\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n\r\n  ${({ isEdited }) =>\r\n    isEdited &&\r\n    `\r\n    color: #666666;\r\n  `}\r\n`;\r\n\r\nconst CategoryName = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst RuleContainer = styled.div`\r\n  margin-top: 5px;\r\n  display: flex;\r\n  gap: 7px;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst CategoryListEntry = ({ name, id, rules, handleEdit, isEdited }) => {\r\n  const { removeCategory } = useContext(CategoryContext);\r\n\r\n  return (\r\n    <Card>\r\n      <Row isEdited={isEdited}>\r\n        <CategoryName>{name}</CategoryName>\r\n        {!isEdited && (\r\n          <>\r\n            <Button onClick={() => handleEdit(id)}>Edit</Button>\r\n            <Button onClick={() => removeCategory(id)}>Delete</Button>\r\n          </>\r\n        )}\r\n      </Row>\r\n      <RuleContainer>\r\n        {rules && rules.map((rule) => <CategoryRule rule={rule} />)}\r\n      </RuleContainer>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CategoryListEntry;\r\n","import React from \"react\";\r\nimport CategoryListEntry from \"./CategoryListEntry\";\r\n\r\nconst CategoryList = ({categories, handleEdit, editedCategory}) => {\r\n\r\n  const sortedCategories = categories?.sort((cat1, cat2) => cat1.name.toUpperCase() > cat2.name.toUpperCase());\r\n\r\n  return sortedCategories.map(({name, key, rules}) => (\r\n    <CategoryListEntry \r\n    name={name} \r\n    id={key} \r\n    key={key}\r\n    rules={rules} \r\n    handleEdit={handleEdit}\r\n    isEdited={editedCategory.key === key} />\r\n  ))\r\n\r\n}\r\n\r\nexport default CategoryList;","import React, { useCallback, useContext, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CategoryEditor from \"./CategoryEditor\";\r\nimport Button from \"../../components/Button\";\r\nimport Overlay from \"../../components/Overlay\";\r\nimport CategoryList from \"./CategoryList\";\r\nimport styled from \"styled-components\";\r\nimport CategoryContext from \"../../state/CategoryContext\";\r\nimport { Routes } from \"../routes\";\r\nimport DatabaseContext from \"../../state/DatabaseContext\";\r\n\r\n/* const mockCategories = [\r\n  {name: \"Purchase\", id:\"id1\", rules: [\"buy*.\", \"purchase*.\"]},\r\n  {name: \"Media\", id:\"id2\", rules: [\"show*.\", \"song*.\", \"music*.\", \"download*.\", \"netflix*.\", \"*.book\"]},\r\n  {name: \"Contact\", id:\"id3\", rules: [\"call*.\", \"contact*.\", \"write*.\"]},\r\n] */\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: 10px;\r\n  text-decoration: none;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst CategoryManager = () => {\r\n  const { categories } = useContext(CategoryContext);\r\n  const { errorList } = useContext(DatabaseContext);\r\n  const [editedCategory, setEditedCategory] = useState({ rules: [] });\r\n\r\n  const handleEdit = (key) => {\r\n    setEditedCategory(categories.find((entry) => entry.key === key));\r\n  };\r\n\r\n  const resetEditedCategory = useCallback(() => {\r\n    setEditedCategory({ rules: [] });\r\n  }, [setEditedCategory]);\r\n\r\n  return (\r\n    <Overlay>\r\n      {errorList && <p>{errorList.join(',')}</p>}\r\n      <h2>Categories</h2>\r\n      <CategoryEditor\r\n        category={editedCategory}\r\n        resetEditedCategory={resetEditedCategory}\r\n      />\r\n      <CategoryList\r\n        categories={categories}\r\n        handleEdit={handleEdit}\r\n        editedCategory={editedCategory}\r\n      />\r\n      <Link to={Routes.TASKLIST}>\r\n        <StyledButton primary>Close</StyledButton>\r\n      </Link>\r\n    </Overlay>\r\n  );\r\n};\r\n\r\nexport default CategoryManager;\r\n","import React, { useContext } from 'react';\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport Header from '../Header';\r\nimport Card from '../../components/Card';\r\nimport DatabaseContext from '../../state/DatabaseContext';\r\nimport { Navigate } from 'react-router-dom';\r\nimport AuthenticationContext from '../../state/AuthenticationContext';\r\nimport { getAuth, EmailAuthProvider } from 'firebase/auth';\r\nimport { Routes } from '../routes';\r\n\r\nconst Login = () => {\r\n\r\n    const { ready } = useContext(DatabaseContext);\r\n    const { isLoggedIn } = useContext(AuthenticationContext);\r\n\r\n    if (isLoggedIn()) {\r\n        return <Navigate to={Routes.TASKLIST} replace />\r\n    }\r\n\r\n    const loginConfig = {\r\n        signInFlow: 'popup',\r\n        signInOptions: [\r\n            EmailAuthProvider.PROVIDER_ID,\r\n        ],\r\n        signInSuccessUrl: Routes.TASKLIST,\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <Header page={\"Login\"} />\r\n            {ready && <StyledFirebaseAuth uiConfig={loginConfig} firebaseAuth={getAuth()} />}\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\nimport { Routes, Route, BrowserRouter } from \"react-router-dom\";\r\nimport TaskList from \"./pages/task-list/TaskList\";\r\nimport CategoryManager from \"./pages/categories/CategoryManager\";\r\nimport Login from \"./pages/auth/Login\";\r\nimport { TaskContextProvider } from \"./state/TaskContext\";\r\nimport { DatabaseContextPorvider } from \"./state/DatabaseContext\";\r\nimport { AuthenticationContextPorvider } from \"./state/AuthenticationContext\";\r\nimport { CategoryContextProvicer } from \"./state/CategoryContext\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <DatabaseContextPorvider>\r\n      <AuthenticationContextPorvider>\r\n      <TaskContextProvider>\r\n      <CategoryContextProvicer>\r\n        <BrowserRouter>\r\n          <Routes>\r\n            <Route path=\"/taskhub-fe/categories\" element={<CategoryManager />} />\r\n            <Route path=\"/taskhub-fe/login\" element={<Login />} />\r\n            <Route path=\"*\" element={<TaskList />} />\r\n          </Routes>\r\n        </BrowserRouter>\r\n      </CategoryContextProvicer>\r\n      </TaskContextProvider>\r\n      </AuthenticationContextPorvider>\r\n    </DatabaseContextPorvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}