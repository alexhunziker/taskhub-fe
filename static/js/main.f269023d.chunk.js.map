{"version":3,"sources":["api/init.js","state/DatabaseContext.js","state/AuthenticationContext.js","pages/routes.js","pages/Header.jsx","components/Card.jsx","components/Button.jsx","components/ListEntry.jsx","components/Input.jsx","components/InputWrapper.jsx","components/Dropdown.jsx","components/DatePicker.jsx","state/constants.js","state/CategoryContext.js","api/categoryActions.js","pages/task-creation/AdvancedTaskFields.jsx","api/taskActions.js","state/TaskContext.js","pages/task-list/EditTask.jsx","pages/task-list/TaskEntry.jsx","pages/task-list/sortOrder.js","pages/task-list/OrderDropdown.jsx","pages/task-list/TaskContainer.jsx","pages/task-creation/TaskCreator.jsx","pages/task-list/TaskList.jsx","pages/categories/CategoryRule.jsx","pages/categories/CategoryEditor.jsx","components/Overlay.jsx","pages/categories/CategoryListEntry.jsx","pages/categories/CategoryList.jsx","pages/categories/CategoryManager.jsx","pages/auth/Login.jsx","App.js","reportWebVitals.js","index.js"],"names":["firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","DatabaseContext","React","createContext","successIndicator","errorList","indicateSuccess","addError","message","clearErrorList","DatabaseContextPorvider","_ref","children","_useState","useState","_useState2","_slicedToArray","setSuccessIndicator","_useState3","_useState4","setErrorList","_useState5","_useState6","ready","setReady","useEffect","database","app","initializeApp","getDatabase","initializeFirebase","console","log","error","value","setTimeout","concat","_toConsumableArray","_jsx","Provider","AuthenticationContext","uid","displayName","email","isLoggedIn","Boolean","AuthenticationContextPorvider","setUid","setDisplayName","setEmail","useContext","auth","getAuth","onAuthStateChanged","user","Routes","StyledHeader","styled","header","_templateObject","_taggedTemplateLiteral","PageTitle","div","_templateObject2","ErrorList","_templateObject3","Header","page","_useContext","_useContext2","handleLogout","useCallback","signOut","catch","e","_jsxs","_Fragment","href","Link","to","onClick","length","map","StyledCard","Card","props","style","className","Button","button","primary","StyledEntry","overdue","_ref2","editMode","_ref3","done","ListEntry","_ref4","StyledInput","input","validationError","Input","onChange","FormFieldContainer","FormFieldDescription","InputWrapper","description","StyledSelect","select","Dropdown","entries","selectedKey","disabled","entry","key","name","DatePicker","ReactDatePicker","Priority","Priorities","Frequency","Frequencies","RecurrenceMode","RecurrenceModes","CategoryContext","categories","saveCategory","category","removeCategory","CategoryContextProvicer","setCategories","_useCategoryActions","fetchCategories","successAction","categoriesRef","ref","get","then","snapshot","exists","Object","values","val","task","_objectSpread","due","Date","warn","updateCategory","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_category$due","catetoryToPersist","objectReference","wrap","_context","prev","next","getTime","keys","forEach","undefined","set","stop","_x","_x2","apply","arguments","deleteCategory","_callee2","categoryKey","_context2","_x3","_x4","useCategoryActions","newCategory","newCategoryWithKey","uuidv4","filteredCategories","filter","Row","RecurringSection","Checkbox","AdvancedTaskFields","setCategory","setDue","priority","setPriority","recurring","setRecurring","sortedCategories","sort","cat1","cat2","toUpperCase","categoriesWithUnknown","currentDue","frequency","isRecurring","setIsRecurring","priorityEntries","event","target","options","selectedIndex","selected","date","dateFormat","type","mode","checked","useTaskActions","alreadyRetrieved","setAlreadyRetrieved","updateTask","taskToPersist","abrupt","closedOn","removeTask","taskKey","listenToTaskList","taskListRef","tasklist_1","TaskContext","tasks","addTask","toggleResolved","modifyTask","TaskContextProvider","setTasks","_useTaskActions","deleteTask","newTask","newTaskWithKey","taskToUpdate","find","recurrenceMode","newDueDate","recurrenceFrequency","setDate","getDate","setMonth","getMonth","setFullYear","getFullYear","updatedTask","StyledButton","EditTask","toggleEditMode","title","setTitle","_useState7","_useState8","_useState9","_useState10","StyledDescription","Importance","_templateObject4","formatDate","day","month","year","TaskEntry","_ref5","currentDate","setEditMode","formattedDate","SortOrder","ALPHABETICAL","DUE_UNKNOWN_FIRST","DUE_UNKNOWN_LAST","PRIORITY","unknownLast","a","b","SortOrderFunctions","_SortOrderFunctions","_defineProperty","StyledOrderDropdown","StyledSortOrderContent","showDropdown","DropdownEntry","OrderDropdown","setSortOrder","sortOrder","setShowDropdown","handleSetSortOrder","SortIcon","fontSize","order","ContainerTitle","h2","ClosedTaskToggle","CategoryCard","TaskContainer","taskCategory","showClosed","setShowClosed","sortOrderFunction","openTasks","t","closedTasks","compareClosedOn","toggleClosedText","TaskCreatorCard","TaskCreator","advanced","setAdvanced","_useState11","_useState12","_useState13","_useState14","valid","setValid","_useState15","_useState16","touched","setTouched","categoriesRegex","useMemo","flatMap","_category$rules","patterns","rules","rule","RegExp","pattern","o","currentTitle","matchedExpression","catEx","test","handleTitleChanged","submit","CategroyContainer","TaskList","_useContext4","Navigate","replace","StyledRule","span","DeleteArea","CategoryRule","handleRemoval","RuleArea","CategoryEditor","resetEditedCategory","setName","setRules","currentRule","setCurrentRule","handleAddRule","_unused","handleRemove","ruleToRemove","handleSave","categoryToSave","assembledCategory","Shadow","StyledOverlay","Overlay","isEdited","CategoryName","CategoryListEntry","id","handleEdit","CategoryList","editedCategory","CategoryManager","setEditedCategory","join","Login","loginConfig","signInFlow","signInOptions","EmailAuthProvider","PROVIDER_ID","signInSuccessUrl","StyledFirebaseAuth","uiConfig","firebaseAuth","App","BrowserRouter","Route","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f269023d.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\"\r\nimport { getDatabase } from \"firebase/database\"\r\n\r\nconst firebaseConfig = {\r\n\r\n  apiKey: \"AIzaSyBh36cGPXJH-cyb2giOsJet7VDEKZ3MVsU\",\r\n  authDomain: \"my-task-hub.firebaseapp.com\",\r\n  databaseURL: \"https://my-task-hub-default-rtdb.europe-west1.firebasedatabase.app\",\r\n  projectId: \"my-task-hub\",\r\n  storageBucket: \"my-task-hub.appspot.com\",\r\n  messagingSenderId: \"941408350272\",\r\n  appId: \"1:941408350272:web:a0f5bfc5afbcbbcb3defa5\",\r\n  measurementId: \"G-485HGNY5X9\"\r\n};\r\n\r\nexport const initializeFirebase = () => {\r\n\r\n  const app = initializeApp(firebaseConfig);\r\n  return getDatabase(app);  \r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { initializeFirebase } from \"../api/init\";\r\n\r\nconst DatabaseContext = React.createContext({\r\n  successIndicator: false,\r\n  errorList: [],\r\n  indicateSuccess: () => {},\r\n  addError: (message) => {},\r\n  clearErrorList: () => {},\r\n});\r\n\r\nexport const DatabaseContextPorvider = ({children}) => {\r\n\r\n  const [successIndicator, setSuccessIndicator] = useState(false);\r\n  const [errorList, setErrorList] = useState([])\r\n  const [ready, setReady] = useState(false);\r\n\r\n  useEffect(() => {\r\n    try {\r\n      const database = initializeFirebase();\r\n      console.log(\"Initialize Firebase... done\")\r\n      if (database) {\r\n        setReady(true);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"initializind database failed\", error)\r\n    }\r\n  }, [])\r\n\r\n  const indicateSuccess = () => {\r\n    setSuccessIndicator(true);\r\n    setTimeout(() => setSuccessIndicator(false), 1000);\r\n  }\r\n\r\n  const addError = (message) => {\r\n    setErrorList([...errorList, message])\r\n  }\r\n\r\n  const clearErrorList = () => {\r\n    setErrorList([])\r\n  }\r\n\r\n  const value = {\r\n    successIndicator,\r\n    errorList,\r\n    indicateSuccess,\r\n    addError,\r\n    clearErrorList,\r\n    ready\r\n  }\r\n  \r\n  \r\n  return (\r\n    <DatabaseContext.Provider value={value}>{children}</DatabaseContext.Provider>\r\n  );\r\n}\r\n\r\nexport default DatabaseContext;","import React, { useState } from \"react\";\r\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\r\nimport DatabaseContext from \"./DatabaseContext\";\r\nimport { useContext } from \"react\";\r\n\r\nconst AuthenticationContext = React.createContext({\r\n  uid: \"\",\r\n  displayName: \"\",\r\n  email: \"\",\r\n  isLoggedIn: () => Boolean,\r\n});\r\n\r\nexport const AuthenticationContextPorvider = ({children}) => {\r\n\r\n  const [uid, setUid] = useState(\"\");\r\n  const [displayName, setDisplayName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const { ready } = useContext(DatabaseContext);\r\n\r\n  const auth = ready && getAuth();\r\n  ready && onAuthStateChanged(auth, (user) => {\r\n    if (user) {\r\n      setUid(user.uid);\r\n      setDisplayName(user.displayName)\r\n      setEmail(uid.email)\r\n    } else {\r\n      setUid(\"\");\r\n      setDisplayName(\"\")\r\n      setEmail(\"\");\r\n    }\r\n  })\r\n\r\n    const isLoggedIn = () => {\r\n      return !!uid;\r\n    }\r\n  \r\n    const value = {\r\n      uid,\r\n      displayName,\r\n      email,\r\n      isLoggedIn,\r\n    }\r\n    \r\n    return (\r\n      <AuthenticationContext.Provider value={value}>{children}</AuthenticationContext.Provider>\r\n    );\r\n  }\r\n\r\nexport default AuthenticationContext;","const TASKLIST_PATH = '/taskhub-fe'\r\nconst LOGIN_PATH = '/taskhub-fe/login'\r\nconst CATEGORIES_PATH = '/taskhub-fe/categories'\r\n\r\nexport const Routes = {\r\n  TASKLIST: TASKLIST_PATH,\r\n  LOGIN: LOGIN_PATH,\r\n  CATEGORIES: CATEGORIES_PATH,\r\n}","import React, { useCallback, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport AuthenticationContext from \"../state/AuthenticationContext\";\r\nimport DatabaseContext from \"../state/DatabaseContext\";\r\nimport 'firebase/compat/auth';\r\nimport { getAuth, signOut } from \"firebase/auth\";\r\nimport { Routes } from \"./routes\";\r\n\r\nconst StyledHeader = styled.header`\r\n  height: 3.5rem;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background-color: #007799;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n  gap: 20px;\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: white;\r\n    font-weight: bold;\r\n  }\r\n\r\n  a:hover,\r\n  a:active,\r\n  a.active {\r\n    color: #00DDBB;\r\n  }\r\n`;\r\n\r\nconst PageTitle = styled.div`\r\n  flex-grow: 1;\r\n`\r\n\r\nconst ErrorList = styled.div`\r\n  background-color: #EE8888;\r\n  color: white;\r\n  padding: 10px 20px 10px;\r\n\r\n  li {\r\n    list-style-type: none;\r\n  }\r\n`\r\n\r\nconst Header = ({page}) => {\r\n  const { successIndicator, errorList, addError } = useContext(DatabaseContext);\r\n  const { displayName, isLoggedIn } = useContext(AuthenticationContext);\r\n\r\n  const auth = getAuth();\r\n\r\n  const handleLogout = useCallback(() => {\r\n    signOut(auth)\r\n      .catch((e) => addError(\"Sign out failed: \", e))\r\n  }, [auth, addError])\r\n\r\n  return (\r\n    <>\r\n      <StyledHeader>\r\n        <PageTitle><a href=\"/tasks\">📝 TaskHub {\">>\"} { page }</a></PageTitle>\r\n        {successIndicator && <div>✔️</div>}\r\n        {isLoggedIn() && <Link to={Routes.CATEGORIES}>Categories</Link>}\r\n        {isLoggedIn() && <a href={Routes.TASKLIST} onClick={handleLogout}>Logout ({displayName})</a>}\r\n      </StyledHeader>\r\n      {errorList.length > 0 && (\r\n        <ErrorList>\r\n          {errorList.map((error) => (\r\n            <li>{error}</li>\r\n          ))}\r\n        </ErrorList>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst StyledCard = styled.div`\r\n    padding: 1rem;\r\n    border-radius: 5px;\r\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\r\n    margin-top: 10px;\r\n`;\r\n\r\nconst Card = props => {\r\n  return <StyledCard style={props.style} className={props.className}>{props.children}</StyledCard>;\r\n};\r\n\r\nexport default Card;","import styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  display: inline-block;\r\n  color: #007799;\r\n  font-size: 1em;\r\n  padding: 0.25em 0.5em;\r\n  border: 2px solid #007799;\r\n  border-radius: 3px;\r\n  display: block;\r\n\r\n  ${({ primary }) => primary && `\r\n    background: #007799;\r\n    color: #FFFFFF;\r\n  `}\r\n`;\r\n\r\nexport default Button","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst StyledEntry = styled.div`\r\n    padding: 0.3rem;\r\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.26);\r\n    margin-top: 10px;\r\n\r\n  ${({ overdue }) => overdue && `\r\n    background: #FFDDDD;\r\n  `}\r\n\r\n  ${({ editMode }) => editMode && `\r\n    background: #DFFFF5;\r\n    padding-bottom: 0.6rem;\r\n  `}\r\n\r\n  ${({ done }) => done && `\r\n    color: grey;\r\n  `}\r\n`;\r\n\r\nconst ListEntry = ({overdue, editMode, children, done}) => {\r\n  return <StyledEntry overdue={overdue} editMode={editMode} done={done}>{children}</StyledEntry>;\r\n};\r\n\r\nexport default ListEntry;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledInput = styled.input`\r\n  width: 100%;\r\n  height: 24px;\r\n  border: 2px solid #009999;\r\n  border-radius: 3px;\r\n\r\n  :focus {\r\n    border: 2px solid #009999;\r\n  }\r\n\r\n  ${({ validationError }) => validationError && `\r\n    border: 2px solid #AA6666;\r\n    background-color: #FFDDDD;\r\n  `}\r\n`\r\n\r\nconst Input = ({onChange, value, validationError}) => {\r\n  return <StyledInput onChange={onChange} value={value} validationError={validationError}/>\r\n}\r\n\r\nexport default Input","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst FormFieldContainer = styled.div`\r\n  flex-grow: 1;\r\n  padding-right: 10px;\r\n`\r\n\r\nconst FormFieldDescription = styled.div`\r\n  font-size: 9pt;\r\n  color: #003333;\r\n`\r\n\r\nconst InputWrapper = ({description, children}) => {\r\n  return (\r\n    <FormFieldContainer>\r\n      <FormFieldDescription>{description}</FormFieldDescription>\r\n      {children}\r\n    </FormFieldContainer>)\r\n}\r\n\r\nexport default InputWrapper;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledSelect = styled.select`\r\n  width: 100%;\r\n  height: 30px;\r\n  border: 2px solid #009999;\r\n  border-radius: 3px;\r\n  background-color: white;\r\n\r\n  :disabled {\r\n    background-color: #EEEEEE;\r\n  }\r\n\r\n  :focus {\r\n    border: 2px solid #009999;\r\n  }\r\n`;\r\n\r\nconst Dropdown = ({ entries, onChange, selectedKey, disabled }) => {\r\n  return (\r\n    <StyledSelect onChange={onChange} value={selectedKey} disabled={disabled}>\r\n      {entries.map((entry) => (\r\n        <option key={entry.key || \"unknown\"} value={entry.key}>{entry.name}</option>\r\n      ))}\r\n    </StyledSelect>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import styled from \"styled-components\"\r\nimport ReactDatePicker from \"react-datepicker\"\r\n\r\nconst DatePicker = styled(ReactDatePicker)`\r\n  width: 100%;\r\n  height: 24px;\r\n  border: 2px solid #009999;\r\n  border-radius: 3px;\r\n\r\n  :focus {\r\n    border: 2px solid #009999;\r\n  }\r\n`;\r\n\r\nexport default DatePicker;","export const Priority = {\r\n  LOW: 'Low',\r\n  MEDIUM: 'Medium',\r\n  HIGH: 'High',\r\n}\r\n\r\nexport const Priorities = [\r\n  Priority.LOW,\r\n  Priority.MEDIUM,\r\n  Priority.HIGH,\r\n]\r\n\r\nexport const Frequency = {\r\n  DAILY: \"DAILY\",\r\n  WEEKLY: \"WEEKLY\",\r\n  MONTHLY: \"MONTHLY\",\r\n  YEARLY: \"YEARLY\",\r\n}\r\n\r\nexport const Frequencies = [\r\n  {name: \"Daily\", key: Frequency.DAILY},\r\n  {name: \"Weely\", key: Frequency.WEEKLY},\r\n  {name: \"Monthly\", key: Frequency.MONTHLY},\r\n  {name: \"Yearly\", key: Frequency.YEARLY},\r\n]\r\n\r\nexport const RecurrenceMode = {\r\n  AFTER_DUE: \"AFTER_DUE\",\r\n  AFTER_COMPLETE: \"AFTER_COMPLETE\",\r\n}\r\n\r\nexport const RecurrenceModes = [\r\n  {name: \"after due\", key: RecurrenceMode.AFTER_DUE},\r\n  {name: \"after complete\", key: RecurrenceMode.AFTER_COMPLETE},\r\n]\r\n\r\n","import React, {useContext, useEffect, useState} from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport AuthenticationContext from \"./AuthenticationContext\";\r\nimport { useCategoryActions } from \"../api/categoryActions\";\r\n\r\nconst CategoryContext = React.createContext({\r\n  categories: [],\r\n  saveCategory: (category) => {},\r\n  removeCategory: (category) => {},\r\n});\r\n\r\nexport const CategoryContextProvicer = (props) => {\r\n\r\n  const { uid, addError } = useContext(AuthenticationContext)  \r\n  const [categories, setCategories] = useState([]);\r\n  const {fetchCategories, updateCategory, deleteCategory} = useCategoryActions();\r\n\r\n  useEffect(() => {\r\n    fetchCategories(setCategories, uid);\r\n    // eslint-disable-next-line\r\n  }, [uid])\r\n\r\n  const saveCategory = (newCategory) => {\r\n    if (!newCategory.name) {\r\n      addError(\"Category name cannot be empty\")\r\n      return;\r\n    }\r\n\r\n    const newCategoryWithKey = { key: uuidv4(), ...newCategory };\r\n    const filteredCategories = categories.filter((category) => category.key !== newCategoryWithKey.key);\r\n    setCategories([...filteredCategories, newCategoryWithKey]);\r\n    updateCategory(newCategoryWithKey, uid);\r\n  }\r\n    \r\n  const removeCategory = (key) => {\r\n    console.log(key, \"keyremove\")\r\n    setCategories(categories.filter((category) => category.key !== key));\r\n    deleteCategory(key, uid)\r\n  }\r\n\r\n  const value = {\r\n    categories,\r\n    saveCategory,\r\n    removeCategory,\r\n  };\r\n\r\n  return (\r\n    <CategoryContext.Provider value={value}>{props.children}</CategoryContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CategoryContext;","import { set, ref, getDatabase, get } from \"firebase/database\";\r\nimport { useContext } from \"react\";\r\nimport DatabaseContext from \"../state/DatabaseContext\";\r\nimport { useCallback } from \"react\";\r\n\r\nexport const useCategoryActions = () => {\r\n  const { addError, indicateSuccess, ready } = useContext(DatabaseContext);\r\n\r\n  const fetchCategories = useCallback((successAction, uid) => {\r\n\r\n    if (!ready || !uid) {\r\n      console.warn(\"Firebase not ready.\")\r\n      return;\r\n    }\r\n\r\n    const database = getDatabase();\r\n    const categoriesRef = ref(database, \"categories/\" + uid);\r\n\r\n    get(categoriesRef)\r\n      .then((snapshot) => {\r\n        if (!snapshot.exists()) {\r\n          console.warn(\"No categories were obtained by firebase.\");\r\n          return;\r\n        } \r\n\r\n        const categories = Object.values(snapshot.val())\r\n          .map(task => ({...task, due: task.due && new Date(task.due)}));\r\n        successAction(categories);\r\n        indicateSuccess()}\r\n      ).catch((error) => {\r\n        console.error(error);\r\n        addError(\"Getting categories failed: \" + error)\r\n      });\r\n    \r\n  }, [addError, indicateSuccess, ready]);\r\n\r\n  const updateCategory = async (category, uid) => {\r\n\r\n    const catetoryToPersist = { ...category, due: category.due?.getTime() };\r\n\r\n    // do we need this ?\r\n    Object.keys(catetoryToPersist).forEach(\r\n      (key) => catetoryToPersist[key] === undefined && delete catetoryToPersist[key]\r\n    );\r\n\r\n    const database = getDatabase();\r\n    const objectReference = ref(database, `categories/${uid}/${catetoryToPersist.key}`);\r\n    set(objectReference, catetoryToPersist)\r\n      .then(indicateSuccess())\r\n      .catch((error) => addError(\"Category update/creation failed: \" + error));\r\n  };\r\n\r\n  const deleteCategory = async (categoryKey, uid) => {\r\n\r\n    const database = getDatabase();\r\n    const objectReference = ref(database, `categories/${uid}/${categoryKey}`);\r\n    set(objectReference, null)\r\n      .then(indicateSuccess())\r\n      .catch((error) => addError(\"Category removal failed: \" + error));\r\n  }\r\n\r\n  return {\r\n    fetchCategories,\r\n    updateCategory,\r\n    deleteCategory,\r\n  };\r\n\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport InputWrapper from \"../../components/InputWrapper\";\r\nimport Dropdown from \"../../components/Dropdown\";\r\nimport DatePicker from \"../../components/DatePicker\";\r\nimport {\r\n  Priorities,\r\n  Frequencies,\r\n  RecurrenceModes,\r\n  RecurrenceMode,\r\n  Frequency,\r\n} from \"../../state/constants\";\r\nimport { useContext } from \"react\";\r\nimport CategoryContext from \"../../state/CategoryContext\";\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  width: 100%;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst RecurringSection = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n  min-width: 300px;\r\n`;\r\n\r\nconst Checkbox = styled.input`\r\n  height: 17px;\r\n`;\r\n\r\nconst AdvancedTaskFields = ({\r\n  category,\r\n  setCategory,\r\n  due,\r\n  setDue,\r\n  priority,\r\n  setPriority,\r\n  recurring,\r\n  setRecurring,\r\n}) => {\r\n  const { categories } = useContext(CategoryContext);\r\n  const sortedCategories = categories?.sort(\r\n    (cat1, cat2) => cat1.name.toUpperCase() > cat2.name.toUpperCase()\r\n  );\r\n  const categoriesWithUnknown = [\r\n    { key: undefined, name: \"Uncategorized\" },\r\n    ...sortedCategories,\r\n  ];\r\n\r\n  const currentDue = due instanceof Date ? due : undefined;\r\n\r\n  const [isRecurring, setIsRecurring] = useState(!!recurring.frequency);\r\n  const toggleRecurring = () => {\r\n    const newRecurring = isRecurring ? {} : {mode: RecurrenceMode.AFTER_COMPLETE, frequency: Frequency.WEEKLY}\r\n    setRecurring(newRecurring);\r\n    setIsRecurring(!isRecurring);\r\n  };\r\n\r\n  const priorityEntries = Priorities.map((priority) => {\r\n    return { key: priority, name: priority };\r\n  });\r\n\r\n  return (\r\n    <Row>\r\n      <InputWrapper description={\"Category\"}>\r\n        <Dropdown\r\n          entries={categoriesWithUnknown}\r\n          selectedKey={category}\r\n          onChange={(event) =>\r\n            setCategory(event.target.options[event.target.selectedIndex].value)\r\n          }\r\n        />\r\n      </InputWrapper>\r\n      <InputWrapper description={\"Due\"}>\r\n        <DatePicker\r\n          selected={currentDue}\r\n          onChange={(date) => setDue(date)}\r\n          dateFormat=\"dd.MM.yyyy\"\r\n        />\r\n      </InputWrapper>\r\n      <InputWrapper name={\"priority\"} description={\"Priority\"}>\r\n        <Dropdown\r\n          entries={priorityEntries}\r\n          selectedKey={priority}\r\n          onChange={(event) =>\r\n            setPriority(event.target.options[event.target.selectedIndex].value)\r\n          }\r\n        />\r\n      </InputWrapper>\r\n      <>\r\n        <InputWrapper description={\"Recurring\"}>\r\n          <RecurringSection>\r\n            <Checkbox\r\n              type=\"checkbox\"\r\n              onChange={() => toggleRecurring()}\r\n              checked={isRecurring}\r\n            />\r\n            <Dropdown\r\n              disabled={!isRecurring}\r\n              entries={isRecurring ? Frequencies : []}\r\n              selectedKey={recurring.frequency}\r\n              onChange={(event) =>\r\n                setRecurring({\r\n                  ...recurring,\r\n                  frequency:\r\n                    event.target.options[event.target.selectedIndex].value,\r\n                })\r\n              }\r\n            />\r\n            <Dropdown\r\n              disabled={!isRecurring}\r\n              entries={isRecurring ? RecurrenceModes : []}\r\n              selectedKey={recurring.mode}\r\n              onChange={(event) =>\r\n                setRecurring({\r\n                  ...recurring,\r\n                  mode: event.target.options[event.target.selectedIndex].value,\r\n                })\r\n              }\r\n            />\r\n          </RecurringSection>\r\n        </InputWrapper>\r\n      </>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default AdvancedTaskFields;\r\n","import { set, ref, getDatabase, get } from \"firebase/database\";\r\nimport { useContext, useState } from \"react\";\r\nimport DatabaseContext from \"../state/DatabaseContext\";\r\n\r\nexport const useTaskActions = () => {\r\n  const { addError, indicateSuccess, ready } = useContext(DatabaseContext);\r\n  const [alreadyRetrieved, setAlreadyRetrieved] = useState(false);\r\n\r\n  const listenToTaskList = (successAction, uid) => {\r\n    if (!ready) {\r\n      addError(\"Getting taks failed: Database not ready.\");\r\n      return;\r\n    }\r\n\r\n    if (alreadyRetrieved) {\r\n      addError(\"WARN: Prevented from listening to tasklist multiple times.\");\r\n      return;\r\n    }\r\n    setAlreadyRetrieved(true);\r\n\r\n    const database = getDatabase();\r\n    const taskListRef = ref(database, \"tasks/\" + uid);\r\n\r\n    get(taskListRef)\r\n      .then((snapshot) => {\r\n        if (!snapshot.exists()) {\r\n          console.warn(\"No tasks were obtained by firebase.\");\r\n          return;\r\n        } \r\n\r\n        const tasklist = Object.values(snapshot.val());\r\n        const tasklist_1 = tasklist.map(task => ({\r\n          ...task, \r\n          due: task.due && new Date(task.due), \r\n          closedOn: task.closedOn && new Date(task.closedOn)}))\r\n          \r\n        successAction(tasklist_1);\r\n        indicateSuccess()\r\n      },\r\n      (error) => addError(\"Getting tasks failed: \" + error)\r\n    );\r\n  };\r\n\r\n  const updateTask = async (task, uid) => {\r\n    if (!ready) {\r\n      addError(\"Task update/creation failed: Database not ready.\");\r\n      return;\r\n    }\r\n\r\n    const taskToPersist = { \r\n      ...task, \r\n      due: task.due && task.due.getTime(), \r\n      closedOn: task.closedOn && task.closedOn.getTime() };\r\n\r\n    Object.keys(taskToPersist).forEach(\r\n      (key) => taskToPersist[key] === undefined && delete taskToPersist[key]\r\n    );\r\n\r\n    const database = getDatabase();\r\n    const objectReference = ref(database, `tasks/${uid}/${taskToPersist.key}`);\r\n    set(objectReference, taskToPersist)\r\n      .then(indicateSuccess())\r\n      .catch((error) => addError(\"Task update/creation failed: \" + error));\r\n  };\r\n\r\n  const removeTask = async (taskKey, uid) => {\r\n\r\n    const database = getDatabase();\r\n    const objectReference = ref(database, `tasks/${uid}/${taskKey}`);\r\n    set(objectReference, null)\r\n      .then(indicateSuccess())\r\n      .catch((error) => addError(\"Task removal failed: \" + error));\r\n  }\r\n\r\n  return {\r\n    listenToTaskList,\r\n    updateTask,\r\n    removeTask,\r\n  };\r\n\r\n};\r\n","import React, {useContext, useState} from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useTaskActions} from \"../api/taskActions\"\r\nimport AuthenticationContext from \"./AuthenticationContext\";\r\nimport { Frequency, RecurrenceMode } from \"./constants\";\r\n\r\nconst TaskContext = React.createContext({\r\n  tasks: [],\r\n  addTask: (task) => {},\r\n  removeTask: (taskKey) => {},\r\n  toggleResolved: (taskKey) => {},\r\n  modifyTask: (task) => {},\r\n});\r\n\r\nexport const TaskContextProvider = (props) => {\r\n\r\n  const { uid } = useContext(AuthenticationContext)  \r\n  const [tasks, setTasks] = useState([]);\r\n  const {updateTask, removeTask: deleteTask} = useTaskActions()\r\n\r\n  const addTask = (newTask) => {\r\n    const newTaskWithKey = { ...newTask, key: uuidv4() };\r\n    setTasks([...tasks, newTaskWithKey]);\r\n    updateTask(newTaskWithKey, uid);\r\n  }\r\n    \r\n  const removeTask = (taskKey) => {\r\n    setTasks(tasks.filter((task) => task.key !== taskKey));\r\n    deleteTask(taskKey, uid)\r\n  }\r\n\r\n  const toggleResolved = (taskKey) => {\r\n    const taskToUpdate = tasks.find((task) => task.key === taskKey)\r\n    taskToUpdate.done = !taskToUpdate.done;\r\n\r\n    taskToUpdate.closedOn = taskToUpdate.done ? new Date() : null;\r\n\r\n    setTasks(\r\n      tasks.map((task) =>\r\n        task.key === taskKey ? taskToUpdate : task\r\n      )\r\n    );\r\n    updateTask(taskToUpdate, uid)\r\n\r\n    const recurrenceMode = taskToUpdate.recurrenceMode;\r\n    if (recurrenceMode && taskToUpdate.done) {\r\n\r\n      const newDueDate = taskToUpdate.recurrenceMode === RecurrenceMode.AFTER_COMPLETE \r\n        ? new Date() \r\n        : new Date(taskToUpdate.due.getTime());\r\n\r\n      const frequency = taskToUpdate.recurrenceFrequency;\r\n      if (frequency === Frequency.DAILY) {\r\n        newDueDate.setDate(newDueDate.getDate() + 1);\r\n      } else if (frequency === Frequency.WEEKLY) {\r\n        newDueDate.setDate(newDueDate.getDate() + 7);\r\n      } else if (frequency === Frequency.MONTHLY) {\r\n        newDueDate.setMonth(newDueDate.getMonth() + 1);\r\n      } else if (frequency === Frequency.YEARLY) {\r\n        newDueDate.setFullYear(newDueDate.getFullYear() + 1);\r\n      }\r\n\r\n      const newTask = {...taskToUpdate, due: newDueDate, done: false, closedOn: undefined}\r\n      addTask(newTask);\r\n    }\r\n  };\r\n\r\n  const modifyTask = (updatedTask) => {\r\n    setTasks(\r\n      tasks.map((task) => (task.key !== updatedTask.key ? task : updatedTask))\r\n    );\r\n    updateTask(updatedTask, uid)\r\n  }\r\n    \r\n\r\n  const value = {\r\n    tasks,\r\n    setTasks,\r\n    addTask,\r\n    removeTask,\r\n    toggleResolved,\r\n    modifyTask,\r\n  };\r\n\r\n  return (\r\n    <TaskContext.Provider value={value}>{props.children}</TaskContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TaskContext;\r\n","import React, { useContext, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Input from \"../../components/Input\";\r\nimport InputWrapper from \"../../components/InputWrapper\";\r\nimport Button from \"../../components/Button\";\r\nimport AdvancedTaskFields from \"../task-creation/AdvancedTaskFields\";\r\nimport TaskContext from \"../../state/TaskContext\";\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n`;\r\n\r\nconst EditTask = ({ task, toggleEditMode }) => {\r\n  \r\n  \r\n  const [title, setTitle] = useState(task.title);\r\n  const [category, setCategory] = useState(task.category);\r\n  const [due, setDue] = useState(task.due)\r\n  const [priority, setPriority] = useState(task.priority)\r\n  const [recurring, setRecurring] = useState({mode: task.recurrenceMode, frequency: task.recurrenceFrequency})\r\n\r\n  const {removeTask, modifyTask} = useContext(TaskContext)\r\n\r\n  const submit = () => {\r\n    modifyTask({...task, title, category, due, priority, recurrenceMode: recurring.mode, recurrenceFrequency: recurring.frequency})\r\n    toggleEditMode();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <InputWrapper description={\"Task\"}>\r\n          <Input\r\n            value={title}\r\n            name={\"title\"}\r\n            onChange={(event) => setTitle(event.target.value)}\r\n          />\r\n        </InputWrapper>\r\n        <StyledButton onClick={() => submit()} primary>\r\n          Save\r\n        </StyledButton>\r\n        <StyledButton onClick={() => removeTask(task.key)}>Delete</StyledButton>\r\n      </Row>\r\n      <AdvancedTaskFields\r\n        category={category}\r\n        setCategory={setCategory}\r\n        due={due}\r\n        setDue={setDue}\r\n        priority={priority}\r\n        setPriority={setPriority}\r\n        recurring={recurring}\r\n        setRecurring={setRecurring}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EditTask;\r\n","import React, { useContext, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"../../components/Button\";\r\nimport ListEntry from \"../../components/ListEntry\";\r\nimport EditTask from \"./EditTask\";\r\nimport { Priority } from \"../../state/constants\";\r\nimport TaskContext from \"../../state/TaskContext\";\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n`;\r\n\r\nconst Checkbox = styled.input`\r\n  height: 17px;\r\n`;\r\n\r\nconst StyledDescription = styled.div`\r\n  flex-grow: 1;\r\n\r\n  ${({ done }) =>\r\n    done &&\r\n    `\r\n    text-decoration: line-through;\r\n  `}\r\n`;\r\n\r\nconst Importance = styled.div`\r\n  font-weight: bold;\r\n\r\n  ${({ priority }) =>\r\n    priority === Priority.HIGH &&\r\n    `\r\n    color: red;\r\n  `}\r\n\r\n  ${({ priority }) =>\r\n    priority === Priority.MEDIUM &&\r\n    `\r\n    color: orange;\r\n  `}\r\n\r\n  ${({ priority }) =>\r\n    priority === Priority.LOW &&\r\n    `\r\n    color: green;\r\n  `}\r\n`;\r\n\r\nconst formatDate = (date) => {\r\n  if (date instanceof Date) {\r\n    const day = date.getDate()\r\n    const month = date.getMonth()+1\r\n    const year = date.getFullYear()\r\n    return `${day}.${month}.${year}`\r\n  }\r\n}\r\n\r\nconst TaskEntry = ({ task }) => {\r\n  const { toggleResolved } = useContext(TaskContext);\r\n\r\n  const currentDate = new Date();\r\n  const overdue =\r\n    task.due && typeof task.due.getTime === \"function\"\r\n      ? currentDate > task.due.getTime() && !task.done\r\n      : false;\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n  const toggleEditMode = () => setEditMode(!editMode);\r\n\r\n  const formattedDate = task.done ? formatDate(task.closedOn) : formatDate(task.due)\r\n\r\n  return (\r\n    <ListEntry overdue={overdue} editMode={editMode} done={task.done}>\r\n      {!editMode ? (\r\n        <Row>\r\n          <Checkbox type=\"checkbox\" onChange={() => toggleResolved(task.key)} checked={task.done} />\r\n          <Importance priority={task.priority}>!</Importance>\r\n          <StyledDescription done={task.done}>{task.title} {formattedDate && `(${formattedDate})`}</StyledDescription>\r\n          <Button onClick={() => toggleEditMode()}>🖊️</Button>\r\n        </Row>\r\n      ) : (\r\n        <EditTask task={task} toggleEditMode={toggleEditMode} />\r\n      )}\r\n    </ListEntry>\r\n  );\r\n};\r\n\r\nexport default TaskEntry;\r\n","import { Priority } from \"../../state/constants\";\r\n\r\nexport const SortOrder = {\r\n  ALPHABETICAL: \"Alphabetical\",\r\n  DUE_UNKNOWN_FIRST: \"Due (unknown first)\",\r\n  DUE_UNKNOWN_LAST: \"Due (unknown last)\",\r\n  PRIORITY: \"Priority\",\r\n}\r\n\r\nconst alphabetical = (a, b) => {\r\n    if (a.title > b.title) return 1;\r\n    if (a.title < b.title) return -1;\r\n    return 0;\r\n}\r\n\r\nconst unknownFirst = (a, b) => {\r\n    if (!a.due && !b.due) return a.title > b.title;\r\n    if (!a.due) return -1;\r\n    if (!b.due) return 1;\r\n    return a.due - b.due;\r\n}\r\n\r\nconst unknownLast = (a, b) => {\r\n    if (!a.due && !b.due) return a.title > b.title;\r\n    if (!a.due) return 1;\r\n    if (!b.due) return -1;\r\n    return a.due - b.due;\r\n}\r\n\r\nconst priority = (a, b) => {\r\n    if (a.priority === b.priority) return unknownLast(a, b);\r\n    if (a.priority === Priority.HIGH) return -1;\r\n    if (a.priority === Priority.LOW) return 1;\r\n    if (b.priority === Priority.HIGH) return 1;\r\n    if (b.priority === Priority.LOW) return -1;\r\n}\r\n\r\nexport const compareClosedOn = (a, b) => {\r\n    if (a.closedOn === b.closedOn) return 0;\r\n    if (!a.closedOn) return 1;\r\n    if (!b.closedOn) return -1;\r\n    return b.closedOn - a.closedOn;\r\n}\r\n\r\nexport const SortOrderFunctions = {\r\n    [SortOrder.ALPHABETICAL]: alphabetical,\r\n    [SortOrder.DUE_UNKNOWN_FIRST]: unknownFirst,\r\n    [SortOrder.DUE_UNKNOWN_LAST]: unknownLast,\r\n    [SortOrder.PRIORITY]: priority,\r\n}","import { useCallback, useState } from \"react\";\r\nimport styled from \"styled-components\"\r\nimport { SortOrder } from \"./sortOrder\";\r\nimport SortIcon from '@mui/icons-material/Sort';\r\n\r\nconst StyledOrderDropdown = styled.div`\r\n  display: inline-block;\r\n  overflow: hidden;\r\n  font-size: smaller;\r\n  vertical-align: bottom;\r\n  color: grey;\r\n`\r\n\r\nconst StyledSortOrderContent = styled.div`\r\n  transition:visibility 0.5s linear,opacity 0.5s linear;\r\n  display: block;\r\n  position: absolute;\r\n  background-color: #FAFAFA;\r\n  border-style: solid;\r\n  border-color: #BBBBBB;\r\n  border-radius: 3px;\r\n  border-width: 2px;\r\n  min-width: 160px;\r\n  box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);\r\n  z-index: 1;\r\n\r\n  ${({ showDropdown }) => showDropdown ? `opacity: 100;` : `opacity: 0; visibility:hidden`}\r\n`\r\n\r\nconst DropdownEntry = styled.div`\r\n  transition: all 0.2s linear;\r\n  padding: 5px;\r\n  ${({ selected }) => selected && `\r\n    background: #DDFFEE;\r\n  `}\r\n`;\r\n\r\n\r\n\r\nconst OrderDropdown = ({setSortOrder, sortOrder}) => {\r\n\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n\r\n  const handleSetSortOrder = useCallback((sortOrder) => {\r\n    setShowDropdown(false);\r\n    setSortOrder(sortOrder)\r\n  }, [setShowDropdown, setSortOrder])\r\n\r\n  return  (\r\n    <StyledOrderDropdown>\r\n      <SortIcon onClick={() => setShowDropdown(true)} fontSize=\"small\" />\r\n      <StyledSortOrderContent showDropdown={showDropdown}>\r\n        {Object.values(SortOrder).map((order) => \r\n          <DropdownEntry key={order} selected={order === sortOrder} onClick={() => handleSetSortOrder(order)}>\r\n            {order}\r\n          </DropdownEntry>\r\n        )}\r\n      </StyledSortOrderContent>\r\n    </StyledOrderDropdown>\r\n  );\r\n}\r\n\r\nexport default OrderDropdown;","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Card from \"../../components/Card\";\r\nimport TaskEntry from \"./TaskEntry\";\r\nimport OrderDropdown from \"./OrderDropdown\";\r\nimport { SortOrder, SortOrderFunctions, compareClosedOn } from \"./sortOrder\";\r\n\r\nconst ContainerTitle = styled.h2`\r\n  font-size: 14pt;\r\n`\r\n\r\nconst ClosedTaskToggle = styled.div`\r\n  margin-top: 10px;\r\n  color: #007799;\r\n`\r\n\r\nconst CategoryCard = styled(Card)`\r\n  width: 400px;\r\n  flex-grow: 1;\r\n`\r\n\r\nconst TaskContainer = ({ taskCategory, tasks }) => {\r\n  const [sortOrder, setSortOrder] = useState(SortOrder.DUE_UNKNOWN_LAST);\r\n  const [showClosed, setShowClosed] = useState(false);\r\n  const sortOrderFunction = SortOrderFunctions[sortOrder];\r\n\r\n  const openTasks = tasks\r\n    .filter(t => !t.done)\r\n    .sort((a, b) => sortOrderFunction(a, b));\r\n  const closedTasks = tasks\r\n    .filter(t => t.done)\r\n    .sort((a, b) => compareClosedOn(a, b));\r\n\r\n  const toggleClosedText = showClosed\r\n    ? \"- Hide closed tasks\"\r\n    : \"+ Show closed tasks\";\r\n\r\n  return (\r\n    <CategoryCard>\r\n      <ContainerTitle>\r\n        <OrderDropdown setSortOrder={setSortOrder} sortOrder={sortOrder} />{\" \"}\r\n        {taskCategory || \"Uncategorized\"}\r\n      </ContainerTitle>\r\n      {openTasks.length > 0\r\n        ? openTasks.map((task) => <TaskEntry task={task} key={task.key} />)\r\n        : \"Yay, no tasks\"}\r\n      {closedTasks.length > 0 && (\r\n        <>\r\n          <ClosedTaskToggle onClick={() => setShowClosed(!showClosed)}>\r\n            {toggleClosedText}\r\n          </ClosedTaskToggle>\r\n          {showClosed &&\r\n            closedTasks.map((task) => <TaskEntry task={task} key={task.key} />)}\r\n        </>\r\n      )}\r\n    </CategoryCard>\r\n  );\r\n};\r\n\r\nexport default TaskContainer;\r\n","import React, { useContext, useMemo, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport Button from \"../../components/Button\";\r\nimport Input from \"../../components/Input\";\r\nimport Card from \"../../components/Card\";\r\nimport InputWrapper from \"../../components/InputWrapper\";\r\nimport AdvancedTaskFields from \"./AdvancedTaskFields\";\r\nimport { Priority } from \"../../state/constants\";\r\nimport TaskContext from \"../../state/TaskContext\";\r\nimport CategoryContext from \"../../state/CategoryContext\";\r\n\r\nconst TaskCreatorCard = styled(Card)`\r\n  margin-left: 1rem;\r\n  margin-right: 1rem;\r\n  margin-bottom: 0px;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst TaskCreator = () => {\r\n  const [advanced, setAdvanced] = useState(() => false);\r\n\r\n  const { addTask } = useContext(TaskContext);\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [category, setCategory] = useState(undefined);\r\n  const [priority, setPriority] = useState(Priority.MEDIUM);\r\n  const [due, setDue] = useState(undefined);\r\n  const [recurring, setRecurring] = useState({});\r\n  const [valid, setValid] = useState(false);\r\n  const [touched, setTouched] = useState(false);\r\n\r\n  const { categories } = useContext(CategoryContext);\r\n  const categoriesRegex = useMemo(\r\n    () =>\r\n      categories\r\n        .flatMap((category) => {\r\n          const patterns = category.rules?.map((rule) => new RegExp(rule));\r\n          return patterns?.map((pattern) => {\r\n            return { pattern, category: category.key };\r\n          });\r\n        })\r\n        .filter((o) => !!o),\r\n    [categories]\r\n  );\r\n\r\n  const submit = () => {\r\n    const newTask = {\r\n      title,\r\n      category,\r\n      due,\r\n      priority,\r\n      recurrenceMode: recurring.mode,\r\n      recurrenceFrequency: recurring.frequency,\r\n    };\r\n\r\n    if (!valid) {\r\n      setTouched(true);\r\n      return;\r\n    }\r\n\r\n    addTask(newTask);\r\n\r\n    setTitle(\"\");\r\n    setCategory(undefined);\r\n    setPriority(Priority.MEDIUM);\r\n    setValid(false);\r\n    setTouched(false);\r\n    setRecurring({});\r\n  };\r\n\r\n  const handleTitleChanged = (event) => {\r\n    const currentTitle = event.target.value;\r\n    setTitle(currentTitle);\r\n    setValid(!!currentTitle);\r\n    setTouched(true);\r\n\r\n    if (category === undefined) {\r\n      const matchedExpression = categoriesRegex.find((catEx) =>\r\n        catEx.pattern.test(currentTitle)\r\n      );\r\n      setCategory(matchedExpression?.category);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TaskCreatorCard>\r\n      <Row>\r\n        <InputWrapper description={\"New Task\"}>\r\n          <Input\r\n            value={title}\r\n            name={\"title\"}\r\n            validationError={!valid && touched}\r\n            onChange={(event) => handleTitleChanged(event)}\r\n          />\r\n        </InputWrapper>\r\n        <StyledButton onClick={() => setAdvanced(!advanced)}>\r\n          {!advanced ? \"➕\" : \"➖\"}\r\n        </StyledButton>\r\n        <StyledButton onClick={() => submit()} primary>\r\n          Create\r\n        </StyledButton>\r\n      </Row>\r\n      <Row>\r\n        {advanced && (\r\n          <AdvancedTaskFields\r\n            category={category}\r\n            setCategory={setCategory}\r\n            due={due}\r\n            setDue={setDue}\r\n            priority={priority}\r\n            setPriority={setPriority}\r\n            recurring={recurring}\r\n            setRecurring={setRecurring}\r\n          />\r\n        )}\r\n      </Row>\r\n    </TaskCreatorCard>\r\n  );\r\n};\r\n\r\nexport default TaskCreator;\r\n","import Header from \"../Header\";\r\nimport styled from \"styled-components\";\r\nimport React, { useContext, useEffect } from \"react\";\r\nimport TaskContainer from \"./TaskContainer\";\r\nimport TaskCreator from \"../task-creation/TaskCreator\";\r\nimport TaskContext from \"../../state/TaskContext\";\r\nimport DatabaseContext from \"../../state/DatabaseContext\";\r\nimport { useTaskActions } from \"../../api/taskActions\";\r\nimport AuthenticationContext from \"../../state/AuthenticationContext\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport CategoryContext from \"../../state/CategoryContext\";\r\n\r\nconst CategroyContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: stretch;\r\n  gap: 15px;\r\n  padding: 1rem;\r\n`;\r\n\r\nconst TaskList = () => {\r\n  const { categories } = useContext(CategoryContext);\r\n  const sortedCategories = categories?.sort((cat1, cat2) => cat1.name.toUpperCase() > cat2.name.toUpperCase());\r\n  const categoriesWithUnknown = [{key: undefined, name: 'Uncategorized'}, ...sortedCategories]\r\n\r\n  const { tasks, setTasks } = useContext(TaskContext);\r\n  const { ready } = useContext(DatabaseContext);\r\n  const { listenToTaskList } = useTaskActions();\r\n\r\n  const { isLoggedIn, uid } = useContext(AuthenticationContext);\r\n\r\n  // eslint-disable-next-line\r\n  useEffect(() => ready && listenToTaskList(setTasks, uid), [ready, uid]);\r\n\r\n  if (!isLoggedIn()) {\r\n    return <Navigate to=\"taskhub-fe/login\" replace />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header page={\"Tasks\"}></Header>\r\n      <TaskCreator></TaskCreator>\r\n      <CategroyContainer>\r\n        {categoriesWithUnknown.map((taskCategory) => (\r\n          <TaskContainer\r\n            key={taskCategory.key}\r\n            taskCategory={taskCategory.name}\r\n            tasks={tasks.filter((task) => task.category === taskCategory.name || task.category === taskCategory.key)}\r\n          />\r\n        ))}\r\n      </CategroyContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst StyledRule = styled.span`\r\n  border: 1px solid;\r\n  border-color: #006666;\r\n  background-color: #DFFFF5;\r\n  color: #006666;\r\n  margin: 0px 3px;\r\n  padding: 0px 2px;\r\n  border-radius: 3px;\r\n  white-space:nowrap;\r\n\r\n  ${({ editMode }) => editMode || `\r\n    font-size: smaller;\r\n  `}\r\n`;\r\n\r\nconst DeleteArea = styled.span`\r\n  border: 1px solid;\r\n  border-color: #006666;\r\n  border-radius: 3px;\r\n  margin-right: -3px;\r\n  margin-left: 3px;\r\n  padding: 0px 5px;\r\n  background-color: #FFDDDD;\r\n  color: #CC8888;  \r\n`;\r\n\r\nconst CategoryRule = ({rule, handleRemoval, editMode}) => {\r\n  return (\r\n    <StyledRule editMode={editMode}>\r\n      {rule}\r\n      {editMode && <DeleteArea onClick={() => handleRemoval(rule)}>X</DeleteArea>}\r\n    </StyledRule>\r\n  )\r\n}\r\n\r\nexport default CategoryRule;","import React, { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"../../components/Button\";\r\nimport Card from \"../../components/Card\";\r\nimport Input from \"../../components/Input\";\r\nimport InputWrapper from \"../../components/InputWrapper\";\r\nimport CategoryRule from \"./CategoryRule\";\r\nimport CategoryContext from \"../../state/CategoryContext\";\r\nimport DatabaseContext from \"../../state/DatabaseContext\";\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: 15px;\r\n`;\r\n\r\nconst RuleArea = styled.div`\r\n  margin-top: 10px;\r\n  overflow-wrap: break-word;\r\n`;\r\n\r\nconst CategoryEditor = ({ category, resetEditedCategory }) => {\r\n  const [name, setName] = useState('');\r\n  const [rules, setRules] = useState([]);\r\n  const [currentRule, setCurrentRule] = useState(\"\");\r\n\r\n  const { saveCategory } = useContext(CategoryContext);\r\n  const { addError } = useContext(DatabaseContext);\r\n\r\n  useEffect(() => {\r\n    setName(category.name || \"\");\r\n    setRules(category.rules || []);\r\n  }, [category]);\r\n\r\n  const handleAddRule = useCallback(() => {\r\n    try {\r\n      new RegExp(currentRule);\r\n    } catch {\r\n      addError(\"Cannot add rule due to invalid format\");\r\n      return;\r\n    }\r\n\r\n    setRules([...rules, currentRule]);\r\n    setCurrentRule(\"\");\r\n  }, [rules, currentRule, setCurrentRule, setRules, addError]);\r\n\r\n  const handleRemove = useCallback(\r\n    (ruleToRemove) => {\r\n      setRules(rules.filter((rule) => rule !== ruleToRemove));\r\n    },\r\n    [rules, setRules]\r\n  );\r\n\r\n  const handleSave = useCallback(\r\n    (categoryToSave) => {\r\n      saveCategory(categoryToSave);\r\n      resetEditedCategory();\r\n    },\r\n    [resetEditedCategory, saveCategory]\r\n  );\r\n\r\n  const assembledCategory = { ...category, name, rules };\r\n\r\n  return (\r\n    <Card>\r\n      <Row>\r\n        <InputWrapper description={\"Name:\"}>\r\n          <Input\r\n            value={name}\r\n            onChange={(event) => setName(event.target.value)}\r\n          />\r\n        </InputWrapper>\r\n        <StyledButton onClick={() => handleSave(assembledCategory)} primary>\r\n          Save\r\n        </StyledButton>\r\n      </Row>\r\n      <Row>\r\n        <InputWrapper description={\"Rules (Regex capable)\"}>\r\n          <Input\r\n            value={currentRule}\r\n            onChange={(event) => {\r\n              setCurrentRule(event.target.value);\r\n            }}\r\n          />\r\n        </InputWrapper>\r\n        <StyledButton onClick={handleAddRule}>Add</StyledButton>\r\n      </Row>\r\n      <RuleArea>\r\n        {rules?.map((rule) => (\r\n          <CategoryRule\r\n            rule={rule}\r\n            key={rule}\r\n            handleRemoval={handleRemove}\r\n            editMode\r\n          />\r\n        ))}\r\n      </RuleArea>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CategoryEditor;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Shadow = styled.div`\r\n  position: fixed;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  left: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  z-index: 2;\r\n`\r\n\r\nconst StyledOverlay = styled.div`\r\n  position: fixed;\r\n  top: 60px;\r\n  bottom: 60px;\r\n  right: 60px;\r\n  left: 60px;\r\n  background-color: #FFFFFF;\r\n  z-index: 3;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.5);\r\n  padding: 0px 20px;\r\n  overflow: auto;\r\n`\r\n\r\nconst Overlay = (props) => {\r\n  const { children } = props;\r\n\r\n  return (\r\n    <Shadow>\r\n      <StyledOverlay>\r\n        {children}\r\n      </StyledOverlay>\r\n    </Shadow>\r\n  );\r\n} \r\n\r\nexport default Overlay;","import React, { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Button from \"../../components/Button\";\r\nimport Card from \"../../components/Card\";\r\nimport CategoryRule from \"./CategoryRule\";\r\nimport CategoryContext from \"../../state/CategoryContext\";\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n\r\n  ${({ isEdited }) =>\r\n    isEdited &&\r\n    `\r\n    color: #666666;\r\n  `}\r\n`;\r\n\r\nconst CategoryName = styled.div`\r\n  flex-grow: 1;\r\n`;\r\n\r\nconst CategoryListEntry = ({ name, id, rules, handleEdit, isEdited }) => {\r\n  const { removeCategory } = useContext(CategoryContext);\r\n\r\n  return (\r\n    <Card>\r\n      <Row isEdited={isEdited}>\r\n        <CategoryName>{name}</CategoryName>\r\n        {!isEdited && (\r\n          <>\r\n            <Button onClick={() => handleEdit(id)}>Edit</Button>\r\n            <Button onClick={() => removeCategory(id)}>Delete</Button>\r\n          </>\r\n        )}\r\n      </Row>\r\n      {rules && rules.map((rule) => <CategoryRule rule={rule} />)}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CategoryListEntry;\r\n","import React from \"react\";\r\nimport CategoryListEntry from \"./CategoryListEntry\";\r\n\r\nconst CategoryList = ({categories, handleEdit, editedCategory}) => {\r\n\r\n  const sortedCategories = categories?.sort((cat1, cat2) => cat1.name.toUpperCase() > cat2.name.toUpperCase());\r\n\r\n  return sortedCategories.map(({name, key, rules}) => (\r\n    <CategoryListEntry \r\n    name={name} \r\n    id={key} \r\n    key={key}\r\n    rules={rules} \r\n    handleEdit={handleEdit}\r\n    isEdited={editedCategory.key === key} />\r\n  ))\r\n\r\n}\r\n\r\nexport default CategoryList;","import React, { useCallback, useContext, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CategoryEditor from \"./CategoryEditor\";\r\nimport Button from \"../../components/Button\";\r\nimport Overlay from \"../../components/Overlay\";\r\nimport CategoryList from \"./CategoryList\";\r\nimport styled from \"styled-components\";\r\nimport CategoryContext from \"../../state/CategoryContext\";\r\nimport { Routes } from \"../routes\";\r\nimport DatabaseContext from \"../../state/DatabaseContext\";\r\n\r\n/* const mockCategories = [\r\n  {name: \"Purchase\", id:\"id1\", rules: [\"buy*.\", \"purchase*.\"]},\r\n  {name: \"Media\", id:\"id2\", rules: [\"show*.\", \"song*.\", \"music*.\", \"download*.\", \"netflix*.\", \"*.book\"]},\r\n  {name: \"Contact\", id:\"id3\", rules: [\"call*.\", \"contact*.\", \"write*.\"]},\r\n] */\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: 10px;\r\n  text-decoration: none;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst CategoryManager = () => {\r\n  const { categories } = useContext(CategoryContext);\r\n  const { errorList } = useContext(DatabaseContext);\r\n  const [editedCategory, setEditedCategory] = useState({ rules: [] });\r\n\r\n  const handleEdit = (key) => {\r\n    setEditedCategory(categories.find((entry) => entry.key === key));\r\n  };\r\n\r\n  const resetEditedCategory = useCallback(() => {\r\n    setEditedCategory({ rules: [] });\r\n  }, [setEditedCategory]);\r\n\r\n  return (\r\n    <Overlay>\r\n      {errorList && <p>{errorList.join(',')}</p>}\r\n      <h2>Categories</h2>\r\n      <CategoryEditor\r\n        category={editedCategory}\r\n        resetEditedCategory={resetEditedCategory}\r\n      />\r\n      <CategoryList\r\n        categories={categories}\r\n        handleEdit={handleEdit}\r\n        editedCategory={editedCategory}\r\n      />\r\n      <Link to={Routes.TASKLIST}>\r\n        <StyledButton primary>Close</StyledButton>\r\n      </Link>\r\n    </Overlay>\r\n  );\r\n};\r\n\r\nexport default CategoryManager;\r\n","import React, { useContext } from 'react';\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport Header from '../Header';\r\nimport Card from '../../components/Card';\r\nimport DatabaseContext from '../../state/DatabaseContext';\r\nimport { Navigate } from 'react-router-dom';\r\nimport AuthenticationContext from '../../state/AuthenticationContext';\r\nimport { getAuth, EmailAuthProvider } from 'firebase/auth';\r\nimport { Routes } from '../routes';\r\n\r\nconst Login = () => {\r\n\r\n    const { ready } = useContext(DatabaseContext);\r\n    const { isLoggedIn } = useContext(AuthenticationContext);\r\n\r\n    if (isLoggedIn()) {\r\n        return <Navigate to={Routes.TASKLIST} replace />\r\n    }\r\n\r\n    const loginConfig = {\r\n        signInFlow: 'popup',\r\n        signInOptions: [\r\n            EmailAuthProvider.PROVIDER_ID,\r\n        ],\r\n        signInSuccessUrl: Routes.TASKLIST,\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <Header page={\"Login\"} />\r\n            {ready && <StyledFirebaseAuth uiConfig={loginConfig} firebaseAuth={getAuth()} />}\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Login;","import React from \"react\";\r\nimport { Routes, Route, BrowserRouter } from \"react-router-dom\";\r\nimport TaskList from \"./pages/task-list/TaskList\";\r\nimport CategoryManager from \"./pages/categories/CategoryManager\";\r\nimport Login from \"./pages/auth/Login\";\r\nimport { TaskContextProvider } from \"./state/TaskContext\";\r\nimport { DatabaseContextPorvider } from \"./state/DatabaseContext\";\r\nimport { AuthenticationContextPorvider } from \"./state/AuthenticationContext\";\r\nimport { CategoryContextProvicer } from \"./state/CategoryContext\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <DatabaseContextPorvider>\r\n      <AuthenticationContextPorvider>\r\n      <TaskContextProvider>\r\n      <CategoryContextProvicer>\r\n        <BrowserRouter>\r\n          <Routes>\r\n            <Route path=\"/taskhub-fe/categories\" element={<CategoryManager />} />\r\n            <Route path=\"/taskhub-fe/login\" element={<Login />} />\r\n            <Route path=\"*\" element={<TaskList />} />\r\n          </Routes>\r\n        </BrowserRouter>\r\n      </CategoryContextProvicer>\r\n      </TaskContextProvider>\r\n      </AuthenticationContextPorvider>\r\n    </DatabaseContextPorvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}